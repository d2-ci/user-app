{"version":3,"sources":["D2App/constants/actionTypes.js","D2App/reducers/list.js","D2App/constants/defaults.js","D2App/reducers/filter.js","D2App/reducers/pager.js","D2App/reducers/currentItem.js","D2App/reducers/currentUser.js","D2App/reducers/popups/snackbar.js","D2App/reducers/popups/dialog.js","D2App/reducers/popups/sharing.js","D2App/reducers/popups/index.js","D2App/store.js","D2App/constants/queryFields.js","D2App/utils/asArray.js","D2App/utils/getNestedProp.js","D2App/components/ErrorMessage.js","D2App/utils/createHumanErrorMessage.js","D2App/components/SearchableGroupEditor.js","D2App/components/AsyncAutoComplete.js","D2App/components/SearchableOrgUnitTree.js","D2App/components/AuthorityEditor/AuthorityFilter.js","D2App/components/AuthorityEditor/utils/filterAuthorities.js","D2App/components/AuthorityEditor/HighlightableText.js","D2App/components/AuthorityEditor/AuthorityItem.js","D2App/components/AuthorityEditor/utils/authorityGroupNames.js","D2App/components/AuthorityEditor/utils/groupAuthorities.js","D2App/components/AuthorityEditor/AuthorityGroup.js","D2App/components/AuthorityEditor/AuthoritySection.js","D2App/components/AuthorityEditor/FilteredAuthoritySections.js","D2App/components/AuthorityEditor/AuthorityEditor.js","D2App/components/AuthorityEditor/index.js","D2App/utils/fieldRenderers.js","D2App/containers/GroupForm/config.js","D2App/selectors/index.js","D2App/containers/UserForm/config.js","D2App/constants/entityTypes.js","D2App/utils/validators.js","D2App/utils/browserHasDateInputSupport.js","D2App/utils/attributeFieldHelpers.js","D2App/api/utils.js","D2App/api/index.js","D2App/utils/history.js","D2App/actions/index.js","D2App/utils/navigateTo.js","D2App/components/List/booleanValueRenderer.js","D2App/components/List/List.js","D2App/components/List/index.js","D2App/utils/detectCurrentUserChanges.js","D2App/utils/sharedActions.js","D2App/utils/validatorsAsync.js","D2App/components/ReplicateUserForm.js","D2App/containers/UserList/UserContextMenuActions.js","D2App/components/OrganisationUnitFilter.js","D2App/components/OrganisationUnitInput.js","D2App/constants/filterFieldNames.js","D2App/components/SearchFilter.js","D2App/containers/UserList/UserFilter.js","D2App/containers/UserList/UserList.js","D2App/containers/UserList/index.js","D2App/components/IconLink.js","D2App/containers/RoleForm/RoleForm.js","D2App/containers/RoleForm/config.js","D2App/containers/RoleForm/index.js","D2App/containers/GroupForm/GroupForm.js","D2App/containers/GroupForm/collectValidators.js","D2App/containers/GroupForm/index.js","D2App/containers/UserForm/collectValidators.js","D2App/containers/UserForm/UserForm.js","D2App/containers/UserForm/index.js","D2App/components/FormLoader.js","D2App/utils/parseDateFromUTCString.js","D2App/components/DetailSummary.js","D2App/constants/detailFieldConfigs.js","D2App/containers/UserProfile.js","D2App/components/PageNotFound.js","D2App/components/CardLinks.js","D2App/containers/RoleList/RoleContextMenuActions.js","D2App/containers/RoleList/RoleList.js","D2App/containers/RoleList/index.js","D2App/containers/RoleDetails.js","D2App/containers/GroupList/GroupContextMenuActions.js","D2App/containers/GroupList/GroupList.js","D2App/containers/GroupList/index.js","D2App/containers/GroupDetails.js","D2App/constants/routeConfig.js","D2App/components/SideNav.js","D2App/components/SectionLoader.js","D2App/components/SnackbarContainer.js","D2App/components/DialogContainer.js","D2App/components/SharingDialogContainer.js","D2App/App.js","D2App/theme.js","D2App/components/AppWithD2ContextAndTheme.js","D2App/AppWrapper.js"],"names":["initialState","type","items","listReducer","state","payload","message","LIST_FILTER","query","inactiveMonths","selfRegistered","invitationStatus","organisationUnits","INITIAL_SNACKBAR_STATE","show","props","INITIAL_DIALOG_STATE","content","INITIAL_SHARING_STATE","id","filterReducer","DEFAULT_FILTER","updateKey","updateValue","pagerReducer","pager","currentItemReducer","currentUserReducer","snackbarReducer","dialogReducer","sharingReducer","popupsReducer","combineReducers","snackbar","dialog","sharing","middlewares","ReduxThunk","rootReducer","list","filter","currentItem","currentUser","popups","form","formReducer","createStore","applyMiddleware","USER_GROUP_LIST","USER_ROLE_LIST","CURRENT_USER_ORG_UNITS_FIELDS","fields","ORG_UNITS_QUERY_CONFIG","paging","FIELDS","USER_LIST","USER_DETAILS","USER_GROUP_DETAILS","USER_ROLE_DETAILS","asArray","input","toArray","getNestedProp","propertyPathStr","parent","split","reduce","currentLevel","propName","style","clear","color","backgroundColor","padding","fontSize","width","ErrorMessage","introText","errorMessage","createHumanErrorMessage","messages","httpStatusCode","fallbackMsg","fallback","i18n","t","useMessage","length","map","join","optionElToObject","el","value","text","innerText","GroupEditor","OriginalGroupEditor","constructor","context","super","onAssignItems","this","setState","loading","call","leftSelect","selectedOptions","then","clearSelection","catch","onAssignAll","options","onRemoveItems","rightSelect","onRemoveAll","d2","getTranslation","bind","getAssignedItems","getAssignedItemStoreIsCollection","Array","from","assignedItemStore","values","item","name","getAvailableItemsFiltered","allItems","getAllItems","assignedItemsLookup","Set","has","getAvailableItemsCount","styles","outerWrap","paddingTop","paddingBottom","headerWrap","display","headerSpacer","flex","header","error","red500","errorText","marginLeft","SearchableGroupEditor","Component","fetchItems","async","page","filterText","response","availableItemsQuery","availableItemsReceivedHandler","console","fetchErrorMsg","initiallyAssignedItems","itemStore","assignedItems","displayName","concat","availableItems","acc","push","pageCount","assigned","update","removeLookup","updateFilterText","event","target","Store","create","wrapRef","React","createRef","fetchNextPageAtEnd","debounce","debouncedFetchWithFilter","componentDidMount","getScrollingSelectEl","addEventListener","componentDidUpdate","_","prevState","isEndInView","hasMorePages","componentWillUnmount","removeEventListener","scrollHeight","scrollTop","clientHeight","current","getElementsByTagName","onChange","onBlur","assignedItemIds","Promise","resolve","renderHeader","availableItemsHeader","assignedItemsHeader","assignedStyle","level","renderSearchInput","fullWidth","floatingLabelText","hintText","marginTop","renderGroupEditor","height","render","ref","info","blue500","warning","orange500","loaderDataSource","textAlign","baseState","filteredItems","searchWarning","errorStyle","AsyncAutoComplete","onAutoCompleteChange","autoCompleteText","getItems","minCharLength","queryParam","minCharCount","trashableQuery","makeTrashable","filteredResults","model","onItemSelect","dataSourceItem","selectHandler","debounceTime","queryDebounceTime","trash","autoCompleteProps","mergedAutoCompleteProps","marginBottom","mergedProps","onUpdateInput","onNewRequest","searchText","dataSource","floatingLabelShrinkStyle","menuStyle","maxHeight","defaultProps","wrapper","minHeight","position","scrollBox","overflowY","borderRadius","loader","top","left","transform","buttonStrip","buttonMargin","marginRight","headerError","SearchableOrgUnitTree","toggleSelectedOrgUnits","orgUnit","selectedOrgUnits","orgUnitIndex","getIndexOfOrgUnit","newOrgUnits","slice","selectAndShowFilteredOrgUnit","initiallyExpanded","removeLastPathSegment","defer","applySelection","confirmSelection","roots","orgUnitFilter","getInitiallyExpandedItems","orgUnits","expandedUnits","strippedPath","selectedUnit","find","unit","path","indexOf","substr","lastIndexOf","updateObject","cancel","orgUnitType","headerText","wrapperStyle","selected","headerStyle","api","queryOrgUnits","onSelectClick","orgUnitsPathsToInclude","label","primary","onClick","disabled","secondary","connect","orgUnitRootsSelector","AuthorityFilter","onSelectedOnlyChange","selectedOnly","onFilterChange","searchStr","onSearchStrChange","className","checked","onCheck","filterAuthorities","allAuthorities","selectedItemsLookup","searchChunks","Object","keys","filtered","key","section","allowedBySearchStr","strToMatch","toLowerCase","some","chunk","matchesSearchStr","allowedBySelectedSetting","lookup","subItem","get","Boolean","matchesSelectedSetting","HighlightableText","highlightClassName","searchWords","autoEscape","textToHighlight","AuthorityItem","onChecked","authSubject","onCheckedCallBack","withLabel","empty","implicit","contextTypes","PropTypes","array","Map","getEmptyGroupedAuthorities","emptyGroupedAuthorities","metadata","headers","apps","tracker","importExport","system","ALL_METADATA_SUFFIXES","EMPTY_GROUP_ITEM","IMPLICIT_GROUP_ITEM","AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE","AUTHORITY_GROUPS","sortGroupedAuthorities","groupedAuthories","forEach","group","sortBy","hasNoGroupSuffix","auth","suffix","endsWith","createMetadataGroup","authSuffix","baseName","replace","genericAdd","externalAccess","hasImplicitAddPrivateAndDelete","publicAddAuth","privateAddAuth","deleteAuth","externalAccessAuth","delete","getNameLookup","addToAuthoritySection","groupedAuthorities","groupKey","groupAuthorities","authorities","set","groupedBase","startsWith","metadataGroup","AuthorityGroup","onAuthGroupChanged","onAuthChange","isPublicAdd","forceUpdate","isPrivateAdd","shouldSelect","publicAddSelected","authGroup","index","implicitSelect","func","isRequired","AuthoritySection","onTableHeadCheck","_event","ids","authSection","renderAuthRow","renderLoaderRow","size","renderInfoRow","errorMsg","msg","renderContent","renderTableHead","allItemsSelected","isArray","every","sectionKey","wrapperClassName","tableClassName","FilteredAuthoritySections","filteredAuthorities","allGroupedAuthorities","updateFilter","getChildContext","componentWillReceiveProps","nextProps","updateFilteredAuthorities","all","object","childContextTypes","AuthorityEditor","filteredAuthSections","reduxFormOnChange","authorityIds","initiallySelected","groupedAuthoritiesPromise","getGroupedAuthorities","handleAuthorityFetchError","total","comp","checkbox","renderTextField","meta","touched","asyncValidating","other","renderAuthorityEditor","reduxFormOnBlur","renderCheckbox","renderSelectField","undefined","setTimeout","i","primaryText","renderSearchableGroupEditor","availableItemsLabel","assignedItemsLabel","initialValues","renderSearchableOrgUnitTree","renderText","NAME","CODE","STYLES","loaderWrap","getFields","fieldRenderer","isRequiredField","initialItemsSelector","pagerSelector","memoize","pageSize","pageCalculationValue","startItem","endItem","currentlyShown","listSelector","groupMemberships","listType","modelDefinition","listMappings","user","userName","userCredentials","username","lastLogin","userRole","userGroup","currentUserIsMember","includes","orgUnitsAsStringSelector","count","addInitialValueFrom","sourceObject","DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS","catDimensionConstraints","cogsDimensionConstraints","isUndefined","userFormInitialValuesSelector","locales","attributeFields","INVITE","SET_PASSWORD","USER_PROPS","USER_CRED_PROPS","field","INTERFACE_LANGUAGE","ui","DATABASE_LANGUAGE","db","userGroupFormInitialValuesSelector","getUserGroupFields","analyticsDimensionsRestrictionsSelector","shortItemSelector","systemOrgRoots","systemOrganisationUnitRoots","requestedOrgUnitRoots","fallBackOrgUnitRoots","DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS","orgUnitRoots","inviteUserValueSelector","formState","registeredFields","INVITE_USER","toggler","blue600","orgUnitTree","float","togglerWrap","additionalFieldsWrap","USERNAME","EXTERNAL_AUTH","OPEN_ID","LDAP_ID","getBaseCaption","fontStyle","USER","EMAIL_ADDRESS_PATTERN","INTERNATIONAL_PHONE_NUMBER_PATTERN","DATE_PATTERN","LOWER_CASE_PATTERN","UPPER_CASE_PATTERN","DIGIT_PATTERN","SPECIAL_CHARACTER_PATTERN","code","hasValue","date","test","email","integer","isInteger","negativeInteger","parseInt","number","isNaN","password","allValues","inviteUser","isEditingUser","shouldValidatePassword","passwordError","checkPasswordForErrors","positiveInteger","repeatPassword","required","requiredArray","whatsApp","x","parseFloat","hasDateInputSupport","browserHasDateInputSupport","document","createElement","setAttribute","generateAttributeFields","attributes","userAttributeValues","attribute","valueType","mandatory","unique","optionSet","userAttribute","attributeValue","valueTypeProps","valueTypeMapping","getValueTypeMapping","OPTION_SET","option","TEXT","getValueTypeProps","isAttributeField","shouldBeUnique","attributeId","generateAttributeField","addUniqueAttributesToAsyncBlurFields","asyncBlurFields","parseAttributeValues","fieldTypeLookup","attributeValues","isClearedOptionalDropDown","LONG_TEXT","multiLine","rows","rowsMax","DATE","floatingLabelFixed","fieldValidators","BOOLEAN","TRUE_ONLY","NUMBER","INTEGER","INTEGER_POSITIVE","INTEGER_NEGATIVE","getQueryFields","entityName","detailFields","formattedEntityName","snakeCase","toUpperCase","varName","isSuperUser","addValueAsProp","data","parseLocaleUrl","val","mapLocale","locale","appendUsernameToDisplayName","getD2","getContextPath","systemInfo","contextPath","getList","requestData","order","userOrgUnits","includeChildren","createListRequestData","getCurrentUser","models","getItem","getUserGroupItem","url","d2Api","users","genericFind","propertyName","on","equals","replicateUser","post","listConfig","store","getState","availableOrgUnits","isAvailableUnit","hasAvailableAncestor","ancestors","ancestor","getRestrictedOrgUnits","getAvailableUserRoles","filterStr","canIssue","userRoles","getAvailableDataAnalyticsDimensionRestrictions","dimensions","updateDisabledState","patch","disable2FA","twoFA","getSelectedAndAvailableLocales","encodeURIComponent","useDbLocaleOption","dbLocales","uiLocales","uiLocale","settings","dbLocale","available","saveOrInviteUser","initialUiLocale","initialDbLocale","userData","isNewUser","userModelOwnedProperties","getOwnedPropertyNames","userInfo","cred","catCogsDimensionConstraints","constraint","dimensionType","ownedPropName","parseUserSaveData","postUrl","status","reject","typeReport","typeReports","objectReport","objectReports","errorReport","errorReports","parse200Error","localePromises","dbLocalePromise","getManagedUsers","getAvailableUserGroups","userGroups","groupedAuths","request","systemAuthorities","getCurrentUserGroupsAndRoles","res","userGroupIds","userRoleIds","initCurrentUser","getCurrentUserOrgUnits","getSystemOrgUnitRoots","dataViewOrganisationUnits","teiSearchOrganisationUnits","assign","refreshCurrentUser","CurrentUserClass","getPrototypeOf","me","userSettings","modelCollection","updateCurrentUserGroupMembership","groupId","deleteMembership","method","init","Api","getApi","getAttributes","entityType","resp","isAttributeUnique","modelId","notEqual","userCollection","getAttributesWithValueAndId","saveUserGroup","dataWithModelDefinition","saveRole","createHashHistory","createAction","createListActionSequence","dispatch","promise","silent","createAsyncActionSequence","actionTypes","requested","received","errored","currentUserActions","clearItem","showSnackbar","hideSnackbar","showDialog","hideDialog","navigateTo","history","addValueRenderer","dataTableWrap","clearBoth","filterBar","headerBarPagination","headerBarFilterWrap","pagination","userSelect","List","executeEditIfAllowed","isContextActionAllowed","primaryAction","action","autoHideDuration","onActionClick","resetFilter","resetPager","getPagerConfig","renderPagination","incrementPage","decrementPage","visibility","paginationProps","hasNextPage","hasPreviousPage","onNextPageClick","onPreviousPageClick","renderHeaderBar","filterComponent","FilterComponent","renderDataTable","columns","contextMenuActions","contextMenuIcons","sectionName","newItemPath","getNextPage","getPreviousPage","refresh","logout","logoutUrl","window","location","detectCurrentUserChanges","disable","deleteModel","interpolator","confirmMsg","successMsg","snackbarProps","onRemoveConfirm","openSharingSettings","asyncValidatorSwitch","blurredField","priorErrors","asyncErrors","newError","getUserNameError","getAttributeUniquenessError","getGenericUniquenessError","errors","asyncSingleFieldValidator","apiMethod","newUserName","editingExistingUser","REPLICATE_USER_FORM","fieldName","role","fieldValue","fieldDisplayName","capitalize","next","fallBackMsg","FORM_NAME","ReplicateUserForm","replicateSuccesHandler","replicateErrorHandler","submitting","pristine","valid","handleSubmit","disableSubmit","autoComplete","onSubmit","Field","component","validate","ReduxFormWrapped","reduxForm","asyncValidate","isUserContextActionAllowed","access","read","userContextMenuIcons","userContextMenuActions","Action","createActionsFromNames","profile","subscribe","edit","remove","replicate","onRequestClose","title","enable","disable_2fa","showDisable2FAConfirmation","baseMsg","onDisable2FAConfirm","shouldDisable","onDisableConfirm","OrganisationUnitFilter","applyFilter","newSelectedOrgUnits","isEqual","wrap","lineHeight","cursor","icon","right","textField","whiteSpace","overflow","textOverflow","OrganisationUnitInput","inputRef","focusOrgUnitInput","orgUnitInput","focus","showOrgTreeInDialog","contentStyle","onFocus","inputStyle","SearchFilter","updateSearchFilter","newValue","onQueryStrChange","localQueryStr","selfRegisteredStyle","UserFilter","createInactiveMonthsOptions","month","months","fill","renderDropDown","config","mergedConfig","includeEmpty","emptyLabel","renderInactiveMonthsFilter","dropDownConfig","menuItems","renderInvitationStatusFilter","renderSelfRegisteredFilter","checkedClassName","UserList","IconLink","to","tooltip","iconButton","iconClassName","RoleForm","toJSON","backToList","renderFields","fieldConfig","conf","labelText","validators","ReduxFormWrappedRoleForm","GroupForm","saveGroup","createIdValueObject","trashableAttributesPromise","initialize","validatorsToApply","isRequiredAttributeField","collectValidators","CONFIG","ReduxFormWrappedGroupForm","validatorLookup","CREATE_REQUIRED_FIELDS","INVITE_REQUIRED_FIELDS","EDIT_REQUIRED_FIELDS","UserForm","toggleShowMore","showMore","firstName","surname","trashableLocalePromise","inviteFields","baseFields","optionsSelector","paddingRight","paddingLeft","additionalFields","returnModelsOnUpdate","getLabelText","prepareGroupEditor","exludeField","externalAuthOnly","emailConfigured","filteredFields","fieldSpecificValidator","isRequiredStaticField","renderCreateOrInviteField","renderAttributeFields","renderBaseFields","renderAdditionalFields","renderToggler","togglerText","submitText","selector","formValueSelector","ReduxFormWrappedUserForm","fallbackOrgUnits","main","heading","paper","FormLoader","match","params","initNewItem","formNotFoundErrorMsg","renderForm","shortItem","baseItem","entityTxt","updateMsg","createMsg","link","kebabCase","plural","linkTooltip","newItem","parseDateFromUTCString","utcString","includeTime","keyUiLocale","Date","dateOptions","day","year","hour","minute","Intl","DateTimeFormat","format","raisedButton","cell","verticalAlign","valueCell","DetailSummary","routeId","getLabelForEntity","renderSendMessageBtn","userId","containerElement","href","renderPropertyFields","summaryObject","labelCellStyle","removeText","parseDate","parseDateTime","nestedPropselector","parseArrayAsCommaDelimitedString","baseRoute","backTooltip","editLink","editLabel","getBaseFields","UserProfile","PageNotFound","pathname","cardStyle","margin","borderBottom","fontWeight","textStyle","actionStyle","CardLinks","renderCard","card","canCreate","canDelete","canList","description","renderActionButtons","actionButtons","createPath","tooltipPosition","cards","getSections","isRoleContextActionAllowed","manage","roleContextMenuIcons","roleContextMenuActions","show_details","sharing_settings","RoleList","RoleDetails","isGroupContextActionAllowed","groupContextMenuIcons","groupContextMenuActions","updateGroupMembership","join_group","leave_group","GroupList","GroupDetails","getUserSection","getUserRoleSection","getUserGroupSection","sections","routeConfig","SideNav","changeSectionHandler","sectionForPath","onLandingPage","onChangeSection","currentSection","withRouter","SectionLoader","setRouteConfig","pathHasAvailableSection","getRouteConfig","configItem","routes","userHasAuthorities","renderRoutes","exact","strict","open","finalProps","bodyStyle","maxWidth","dialogProps","hideSharingDialog","App","hashType","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","forms","minWidth","formInput","AppWithD2ContextAndTheme","children","AppWrapper","useD2","d2Config","schemas","i18nRoot","onInitialized"],"mappings":"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","file":"static/js/app.bed31c98.chunk.js","sourcesContent":["// LISTS\nexport const LIST_REQUESTED = 'LIST_REQUESTED';\nexport const LIST_RECEIVED = 'LIST_RECEIVED';\nexport const LIST_ERRORED = 'LIST_ERRORED'; // ITEMS\n\nexport const CLEAR_ITEM = 'CLEAR_ITEM';\nexport const INIT_NEW_ITEM = 'INIT_NEW_ITEM';\nexport const ITEM_REQUESTED = 'ITEM_REQUESTED';\nexport const ITEM_RECEIVED = 'ITEM_RECEIVED';\nexport const ITEM_ERRORED = 'ITEM_ERRORED';\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\nexport const SHOW_DIALOG = 'SHOW_DIALOG';\nexport const HIDE_DIALOG = 'HIDE_DIALOG';\nexport const SHOW_SHARING_DIALOG = 'SHOW_SHARING_DIALOG';\nexport const HIDE_SHARING_DIALOG = 'HIDE_SHARING_DIALOG'; // PAGER\n\nexport const PAGER_RESET = 'PAGER_RESET'; // FILTER\n\nexport const FILTER_UPDATED = 'FILTER_UPDATED';\nexport const FILTER_RESET = 'FILTER_RESET'; // CURRENT USER\n\nexport const CURRENT_USER_REQUESTED = 'CURRENT_USER_REQUESTED';\nexport const CURRENT_USER_RECEIVED = 'CURRENT_USER_RECEIVED';\nexport const CURRENT_USER_ERRORED = 'CURRENT_USER_ERRORED';","import { LIST_REQUESTED, LIST_RECEIVED, LIST_ERRORED } from '../constants/actionTypes';\nconst initialState = {\n  type: null,\n  items: null\n};\n/**\n * Reducer to control the list state\n * @memberof module:reducers\n * @param {Object} state - The list state\n * @param {String|null} state.type=null - The list type, either one of 'user', 'userGroup', 'userRole', or `null` after error.\n * @param {Object|String|null} state.items=null - Can have the following forms:\n * - A d2 ModelCollection instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\n\nconst listReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LIST_REQUESTED:\n      return {\n        type: payload,\n        items: null\n      };\n\n    case LIST_RECEIVED:\n      return state.type === payload.type ? {\n        type: payload.type,\n        items: payload.items\n      } : state;\n\n    case LIST_ERRORED:\n      return {\n        type: null,\n        items: payload.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","export const PAGE_SIZE = 50;\nexport const PAGE = 1;\nexport const LIST_FILTER = {\n  query: '',\n  // string\n  inactiveMonths: null,\n  // Number\n  selfRegistered: false,\n  // Bool\n  invitationStatus: null,\n  // 'all' || 'expired',\n  organisationUnits: [] // Array\n\n};\nexport const INITIAL_SNACKBAR_STATE = {\n  show: false,\n  props: {\n    message: ''\n  }\n};\nexport const INITIAL_DIALOG_STATE = {\n  show: false,\n  props: {},\n  content: null\n};\nexport const INITIAL_SHARING_STATE = {\n  show: false,\n  id: null,\n  type: null\n};","import { FILTER_UPDATED, FILTER_RESET } from '../constants/actionTypes';\nimport { LIST_FILTER as DEFAULT_FILTER } from '../constants/defaults';\n/**\n * Reducer to control the filter state that is used to GET filtered lists\n * @memberof module:reducers\n * @param {Object} state - Object containing values\n * @param {String} state.query='' - Query string to filter results by\n * @param {Number|null} state.inactiveMonths=null - Filter by number of inactive months (USER only)\n * @param {Bool} state.selfRegistered=false - Show self registered users only (USER only)\n * @param {String|null} state.invitationStatus=null - Filter by invitation status, possible values: 'all' or 'expired', (USER only)\n * @param {Array} state.organisationUnits=[]] - IDs of the organisation units to filter by (USER only)\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @param {String} action.payload.updateKey - Filter property key to update\n * @param {*} action.payload.updateValue - Value to set property to\n * @returns {Object} - A new filter state object\n * @function\n */\n\nconst filterReducer = (state = DEFAULT_FILTER, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FILTER_UPDATED:\n      return { ...state,\n        [payload.updateKey]: payload.updateValue\n      };\n\n    case FILTER_RESET:\n      return { ...DEFAULT_FILTER\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;","import { LIST_RECEIVED, PAGER_RESET } from '../constants/actionTypes';\n/**\n * Reducer to control the pager state. The pager state is used as a query parameter when fetching lists from the API.\n * @memberof module:reducers\n * @param {Object|null} state=null - Either an instance of a d2 Pager, or null incase the pager is being reset.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @returns {Object|null} - A new state object\n * @function\n */\n\nconst pagerReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case PAGER_RESET:\n      return null;\n\n    case LIST_RECEIVED:\n      return payload.items.pager;\n\n    default:\n      return state;\n  }\n};\n\nexport default pagerReducer;","import { CLEAR_ITEM, INIT_NEW_ITEM, ITEM_REQUESTED, ITEM_RECEIVED, ITEM_ERRORED } from '../constants/actionTypes';\n/**\n * @module reducers\n */\n\n/**\n * Reducer to control the current item state\n * @memberof module:reducers\n * @param {Object|String|null} state=null - Can have the following forms:\n * - A d2 model instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\n\nconst currentItemReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CLEAR_ITEM:\n    case ITEM_REQUESTED:\n      return null;\n\n    case INIT_NEW_ITEM:\n    case ITEM_RECEIVED:\n      return payload;\n\n    case ITEM_ERRORED:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentItemReducer;","import { CURRENT_USER_REQUESTED, CURRENT_USER_RECEIVED, CURRENT_USER_ERRORED } from '../constants/actionTypes';\n/**\n * Reducer to control the current user state, initialized from the sectionLoader,\n * Can also be reloaded if certain changes take place that influence the current user.\n * @memberof module:reducers\n * @param {Object|null} state=null - An object containing relevant properties of the current user.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst currentUserReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CURRENT_USER_REQUESTED:\n      return null;\n\n    case CURRENT_USER_RECEIVED:\n    case CURRENT_USER_ERRORED:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUserReducer;","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from '../../constants/actionTypes';\nimport { INITIAL_SNACKBAR_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the SnackbarContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the Snackbar\n * @param {Object} state.props={message:''} - Props to pass to the MUI Snackbar component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Props for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst snackbarReducer = (state = INITIAL_SNACKBAR_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_SNACKBAR:\n      return {\n        show: true,\n        props: payload\n      };\n\n    case HIDE_SNACKBAR:\n      return { ...INITIAL_SNACKBAR_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default snackbarReducer;","import { SHOW_DIALOG, HIDE_DIALOG } from '../../constants/actionTypes';\nimport { INITIAL_DIALOG_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the DialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the dialog\n * @param {Object} state.props={} - Props to pass to the MUI Dialog component\n * @param {Object|null} state.content=null - The content to be rendered by the MUI Dialog component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The content and props for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst dialogReducer = (state = INITIAL_DIALOG_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_DIALOG:\n      return {\n        show: true,\n        ...payload\n      };\n\n    case HIDE_DIALOG:\n      return { ...INITIAL_DIALOG_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogReducer;","import { SHOW_SHARING_DIALOG, HIDE_SHARING_DIALOG } from '../../constants/actionTypes';\nimport { INITIAL_SHARING_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the SharingDialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the SharingDialog\n * @param {String|null} state.id=null - The model instance ID for which to open the sharing settings\n * @param {String|null} state.type=null - The model instance name\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The ID and type for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst sharingReducer = (state = INITIAL_SHARING_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_SHARING_DIALOG:\n      return {\n        show: true,\n        ...payload\n      };\n\n    case HIDE_SHARING_DIALOG:\n      return { ...INITIAL_SHARING_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default sharingReducer;","import { combineReducers } from 'redux';\nimport snackbarReducer from './snackbar';\nimport dialogReducer from './dialog';\nimport sharingReducer from './sharing';\n/**\n * @module reducers/popups\n */\n\nconst popupsReducer = combineReducers({\n  snackbar: snackbarReducer,\n  dialog: dialogReducer,\n  sharing: sharingReducer\n});\nexport default popupsReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { reducer as formReducer } from 'redux-form';\nimport listReducer from './reducers/list';\nimport filterReducer from './reducers/filter';\nimport pagerReducer from './reducers/pager';\nimport currentItemReducer from './reducers/currentItem';\nimport currentUserReducer from './reducers/currentUser';\nimport popupsReducer from './reducers/popups/';\nconst middlewares = [ReduxThunk];\nconst shouldLog = false;\n\nif (process.env.NODE_ENV === 'development' && shouldLog) {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  list: listReducer,\n  filter: filterReducer,\n  pager: pagerReducer,\n  currentItem: currentItemReducer,\n  currentUser: currentUserReducer,\n  popups: popupsReducer,\n  form: formReducer\n});\nexport default createStore(rootReducer, applyMiddleware(...middlewares));","// LISTS\nexport const USER_LIST = ['displayName', 'id', 'access', 'userCredentials[username,disabled,lastLogin,twoFA]', 'teiSearchOrganisationUnits[id,path]'];\nexport const USER_GROUP_LIST = ['displayName', 'id', 'access', 'user[displayName,id]', 'publicAccess', 'userGroupAccesses'];\nexport const USER_ROLE_LIST = [...USER_GROUP_LIST, 'description']; // DETAILS\n\nexport const USER_DETAILS = [':owner', 'access', 'displayName', 'userGroups', 'organisationUnits[id,displayName,path]', 'dataViewOrganisationUnits[id,displayName,path]', 'userCredentials[id,username,lastLogin,externalAuth,userRoles[id,displayName],cogsDimensionConstraints[id,displayName,dimensionType],catDimensionConstraints[id,displayName,dimensionType],openId,ldapId,disabled]', 'teiSearchOrganisationUnits[id,path]', 'whatsApp', 'facebookMessenger', 'skype', 'telegram', 'twitter'];\nexport const USER_ROLE_DETAILS = [':owner', 'access', 'authorities', 'displayName'];\nexport const USER_GROUP_DETAILS = [':owner', 'access', 'displayName', // NOTE: this only works in v35 and up\n// in <= v34 username is in `userCredentials[username]`\n'users[id,displayName,username]', 'managedGroups[id,displayName]'];\nexport const CURRENT_USER_ORG_UNITS_FIELDS = {\n  fields: ['organisationUnits[id,path,displayName,children::isNotEmpty]', 'dataViewOrganisationUnits[id,path,displayName,children::isNotEmpty]', 'teiSearchOrganisationUnits[id,path,displayName,children::isNotEmpty]']\n};\nexport const ORG_UNITS_QUERY_CONFIG = {\n  paging: false,\n  // userDataViewFallback: true\n  fields: ['id', 'path', 'displayName', 'children::isNotEmpty', 'ancestors']\n};\nexport const USER_GROUP_QUERY_CONFIG = {\n  paging: false,\n  fields: ['id', 'displayName']\n};\nconst FIELDS = {\n  USER_LIST,\n  USER_GROUP_LIST,\n  USER_ROLE_LIST,\n  USER_DETAILS,\n  USER_GROUP_DETAILS,\n  USER_ROLE_DETAILS\n};\nexport default FIELDS;","/**\n * @module utils\n */\n\n/**\n * It is not always clear when d2 will return an array or a ModelCollection instance.\n * This function is used to work with both in the same way.\n * @param {Array|Object} input - Either an array of d2 model instances or a ModelCollection instance\n * @returns {Array} An array of model instances\n * @memberof module:utils\n * @function\n */\nconst asArray = input => {\n  if (!input) {\n    return [];\n  }\n\n  return typeof input.toArray === 'function' ? input.toArray() : input;\n};\n\nexport default asArray;","/**\n * Helper function for form components (UserForm, GroupForm, RoleForm).\n * This function can receive a string representation of a property path, i.e. 'userCredentials.username'\n * and an object to pick from and will return the nested property's value.\n * This works recursively so it can be as many levels deep as required.\n * @param {String} propertyPathStr - String representation of a property path\n * @param {*} parent - The base object to pick from\n * @returns {*} The value of the nested property\n * @memberof module:utils\n * @function\n */\nconst getNestedProp = (propertyPathStr, parent) => {\n  return propertyPathStr.split('.').reduce((currentLevel, propName) => {\n    return currentLevel && currentLevel[propName] ? currentLevel[propName] : null;\n  }, parent);\n};\n\nexport default getNestedProp;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst style = {\n  clear: 'both',\n  color: '#c33017',\n  backgroundColor: '#ffe3de',\n  padding: '1.5rem 1.5rem 1rem',\n  fontSize: '1rem',\n  width: '100%'\n};\n/**\n * A simple component that can display an error message\n * @class\n */\n\nconst ErrorMessage = ({\n  introText,\n  errorMessage\n}) => <div style={style}>\n        {introText}\n        <pre>{errorMessage}</pre>\n    </div>;\n\nErrorMessage.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  introText: PropTypes.string.isRequired\n};\nexport default ErrorMessage;","import i18n from '@dhis2/d2-i18n';\n/**\n * It is preffered to show the error message from the server it is a 401-499 code\n * @param {Object} error - The error object\n * @param {Number} error.httpStatusCode - The error status code\n * @param {Number} error.message - The error message\n * @param {String} fallbackMsg - The message to show in case the actual message is\n * likely to be useless for normal users\n * @memberof module:utils\n * @function\n */\n\nconst createHumanErrorMessage = ({\n  message,\n  messages,\n  httpStatusCode\n}, fallbackMsg) => {\n  const fallback = fallbackMsg || i18n.t('Something went wrong when processing your request.');\n  const useMessage = httpStatusCode && httpStatusCode >= 400 && httpStatusCode < 500 || !httpStatusCode && messages && messages.length > 0;\n\n  if (!message && messages && messages.length > 0) {\n    message = messages.map(({\n      message\n    }) => message).join(', ');\n  }\n\n  return useMessage ? message : fallback;\n};\n\nexport default createHumanErrorMessage;","import React, { Component } from 'react';\nimport { Store, Heading } from '@dhis2/d2-ui-core';\nimport PropTypes from 'prop-types';\nimport { red500 } from 'material-ui/styles/colors';\nimport TextField from 'material-ui/TextField/TextField';\nimport ErrorMessage from './ErrorMessage';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport i18n from '@dhis2/d2-i18n';\nimport debounce from 'lodash.debounce';\nimport { GroupEditor as OriginalGroupEditor } from '@dhis2/d2-ui-group-editor';\n\nconst optionElToObject = el => ({\n  value: el.value,\n  text: el.innerText\n});\n\nclass GroupEditor extends OriginalGroupEditor {\n  constructor(props, context) {\n    super(props, context);\n    const i18n = this.context.d2.i18n;\n    this.getTranslation = i18n.getTranslation.bind(i18n);\n  }\n\n  getAssignedItems() {\n    return this.getAssignedItemStoreIsCollection() ? Array.from(this.props.assignedItemStore.state.values()).map(item => ({\n      value: item.id,\n      text: item.name\n    })) : this.props.assignedItemStore.state || [];\n  }\n\n  onAssignItems = () => {\n    this.setState({\n      loading: true\n    });\n    this.props.onAssignItems([].map.call(this.leftSelect.selectedOptions, optionElToObject)).then(() => {\n      this.clearSelection();\n      this.setState({\n        loading: false\n      });\n    }).catch(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n  onAssignAll = () => {\n    this.setState({\n      loading: true\n    });\n    this.props.onAssignItems([].map.call(this.leftSelect.options, optionElToObject)).then(() => {\n      this.clearSelection();\n      this.setState({\n        loading: false\n      });\n    }).catch(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n  onRemoveItems = () => {\n    this.setState({\n      loading: true\n    });\n    this.props.onRemoveItems([].map.call(this.rightSelect.selectedOptions, optionElToObject)).then(() => {\n      this.clearSelection();\n      this.setState({\n        loading: false\n      });\n    }).catch(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n  onRemoveAll = () => {\n    this.setState({\n      loading: true\n    });\n    this.props.onRemoveItems([].map.call(this.rightSelect.options, optionElToObject)).then(() => {\n      this.clearSelection();\n      this.setState({\n        loading: false\n      });\n    }).catch(() => {\n      this.setState({\n        loading: false\n      });\n    });\n  };\n\n  getAvailableItemsFiltered() {\n    const allItems = this.getAllItems();\n    const assignedItemsLookup = new Set(this.getAssignedItems().map(item => item.value));\n    return allItems.filter(item => !assignedItemsLookup.has(item.value));\n  }\n\n  getAvailableItemsCount() {\n    return this.getAvailableItemsFiltered().length;\n  }\n\n}\n\nconst styles = {\n  outerWrap: {\n    paddingTop: 0,\n    paddingBottom: '2.5rem'\n  },\n  headerWrap: {\n    display: 'flex'\n  },\n  headerSpacer: {\n    flex: '0 0 120px'\n  },\n  header: {\n    flex: '1 0 120px',\n    paddingBottom: 0,\n    fontSize: '1.2rem'\n  },\n  error: {\n    color: red500\n  },\n  errorText: {\n    fontSize: '0.8rem',\n    marginLeft: '0.8rem'\n  }\n};\n/**\n * A component that renders the d2-ui GroupEditor with a search input above it.\n * It can fetch its own items and has been made compliant with redux form.\n * On update it can return an array of either IDs or d2-models\n */\n\nclass SearchableGroupEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemStore: Store.create(),\n      assignedItemStore: Store.create(),\n      filterText: '',\n      fetchErrorMsg: null,\n      page: 1,\n      pageCount: null\n    };\n    this.wrapRef = React.createRef();\n    this.fetchNextPageAtEnd = debounce(this.fetchNextPageAtEnd.bind(this), 100);\n    this.debouncedFetchWithFilter = debounce(() => {\n      this.setState({\n        page: 1,\n        pageCount: null\n      });\n      this.state.itemStore.setState([]);\n      this.fetchItems(1, this.state.filterText);\n    }, 500);\n  }\n\n  componentDidMount() {\n    this.getScrollingSelectEl().addEventListener('scroll', this.fetchNextPageAtEnd);\n    const {\n      page,\n      filterText\n    } = this.state;\n    this.fetchItems(page, filterText);\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.filterText !== this.state.filterText) {\n      this.debouncedFetchWithFilter(1, this.state.filterText);\n    } else if (this.isEndInView() && this.hasMorePages()) {\n      this.fetchItems(this.state.page + 1, this.state.filterText);\n    }\n  }\n\n  componentWillUnmount() {\n    this.getScrollingSelectEl().removeEventListener('scroll', this.fetchNextPageAtEnd);\n  }\n\n  fetchItems = async (page, filterText) => {\n    try {\n      const response = await this.props.availableItemsQuery(page, filterText);\n      this.availableItemsReceivedHandler(response);\n    } catch (error) {\n      console.error(error);\n      const fetchErrorMsg = createHumanErrorMessage(error, i18n.t('Could not load available items'));\n      this.setState({\n        fetchErrorMsg\n      });\n    }\n  };\n\n  fetchNextPageAtEnd() {\n    if (this.isEndInView() && this.hasMorePages()) {\n      const {\n        page,\n        filterText\n      } = this.state;\n      this.fetchItems(page + 1, filterText);\n    }\n  }\n\n  isEndInView() {\n    const offset = 30;\n    const el = this.getScrollingSelectEl();\n    return !!el && el.scrollHeight - el.scrollTop <= el.clientHeight + offset;\n  }\n\n  hasMorePages() {\n    return this.state.page < this.state.pageCount;\n  }\n\n  getScrollingSelectEl() {\n    const wrapEl = this.wrapRef.current;\n    return wrapEl.getElementsByTagName('select')[0];\n  }\n\n  availableItemsReceivedHandler = ({\n    pager,\n    items\n  }) => {\n    // On update we want to be able to return an array of IDs or models\n    const {\n      initiallyAssignedItems\n    } = this.props;\n    const {\n      itemStore,\n      assignedItemStore\n    } = this.state; // if (returnModelsOnUpdate) {\n    //     this.modelLookup = new Map()\n    // }\n\n    const assignedItems = assignedItemStore.state || initiallyAssignedItems.map(item => ({\n      value: item.id,\n      text: item.displayName || item.name\n    })).concat(assignedItemStore.state || []);\n    const availableItems = items.reduce((acc, item) => {\n      acc.push({\n        value: item.id,\n        text: item.displayName || item.name\n      });\n      return acc;\n    }, itemStore.state || []);\n    this.setState({\n      page: pager.page,\n      pageCount: pager.pageCount\n    });\n    itemStore.setState(availableItems);\n    assignedItemStore.setState(assignedItems);\n  };\n  onAssignItems = items => {\n    const {\n      assignedItemStore\n    } = this.state;\n    const assigned = assignedItemStore.state.concat(items);\n    return this.update(assigned);\n  };\n  onRemoveItems = items => {\n    const removeLookup = new Set(items.map(item => item.value));\n    const {\n      assignedItemStore\n    } = this.state;\n    const assigned = assignedItemStore.state.filter(item => !removeLookup.has(item.value));\n    return this.update(assigned);\n  };\n\n  update(assignedItems) {\n    const {\n      onChange,\n      onBlur\n    } = this.props;\n    const {\n      assignedItemStore\n    } = this.state;\n    const assignedItemIds = assignedItems.map(item => item.value);\n    assignedItemStore.setState(assignedItems);\n    onChange(assignedItemIds); // Also call onBlur if this is available. In a redux-form the component will be 'touched' by it\n\n    onBlur && onBlur();\n    return Promise.resolve();\n  }\n\n  updateFilterText = event => {\n    this.setState({\n      filterText: event.target.value\n    });\n  };\n\n  renderHeader() {\n    const {\n      availableItemsHeader,\n      assignedItemsHeader,\n      errorText\n    } = this.props;\n    const assignedStyle = errorText ? { ...styles.header,\n      ...styles.error\n    } : styles.header;\n    return <div style={styles.headerWrap}>\n                <Heading level={4} style={styles.header}>\n                    {availableItemsHeader}\n                </Heading>\n                <div style={styles.headerSpacer} />\n                <Heading level={4} style={assignedStyle}>\n                    {assignedItemsHeader}\n                    {errorText ? <span style={styles.errorText}>{errorText}</span> : null}\n                </Heading>\n            </div>;\n  }\n\n  renderSearchInput() {\n    return <TextField fullWidth={true} type=\"search\" onChange={this.updateFilterText} value={this.state.filterText} floatingLabelText={i18n.t('Filter')} hintText={i18n.t('Filter available and selected items')} style={{\n      marginTop: '-16px'\n    }} />;\n  }\n\n  renderGroupEditor() {\n    const {\n      itemStore,\n      assignedItemStore,\n      fetchErrorMsg\n    } = this.state;\n\n    if (fetchErrorMsg) {\n      const introText = i18n.t('There was a problem displaying the GroupEditor');\n      return <ErrorMessage introText={introText} errorMessage={fetchErrorMsg} />;\n    }\n\n    return <GroupEditor itemStore={itemStore} assignedItemStore={assignedItemStore} onAssignItems={this.onAssignItems} onRemoveItems={this.onRemoveItems} height={250} />;\n  }\n\n  render() {\n    return <div style={styles.outerWrap} ref={this.wrapRef}>\n                {this.renderHeader()}\n                {this.renderSearchInput()}\n                {this.renderGroupEditor()}\n            </div>;\n  }\n\n}\n\nSearchableGroupEditor.propTypes = {\n  assignedItemsHeader: PropTypes.string.isRequired,\n  availableItemsHeader: PropTypes.string.isRequired,\n  availableItemsQuery: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errorText: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  initiallyAssignedItems: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.array.isRequired]),\n  // returnModelsOnUpdate: PropTypes.bool,\n  onBlur: PropTypes.func\n};\nexport default SearchableGroupEditor;","import React, { Component } from 'react';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport AutoComplete from 'material-ui/AutoComplete';\nimport MenuItem from 'material-ui/MenuItem';\nimport { orange500, blue500, red500 } from 'material-ui/styles/colors';\nimport i18n from '@dhis2/d2-i18n';\nimport makeTrashable from 'trashable';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport asArray from '../utils/asArray';\nconst styles = {\n  error: {\n    info: {\n      color: blue500\n    },\n    warning: {\n      color: orange500\n    },\n    error: {\n      color: red500\n    }\n  }\n};\nconst loaderDataSource = [{\n  text: 'loading...',\n  value: <MenuItem style={{\n    textAlign: 'center'\n  }}>\n                <CircularProgress style={{\n      marginTop: '12px'\n    }} />\n            </MenuItem>\n}];\nconst baseState = {\n  filteredItems: [],\n  searchWarning: null,\n  errorStyle: styles.error.info\n};\n\nconst getDefaultAutoCompleteProps = () => ({\n  floatingLabelText: i18n.t('Search'),\n  hintText: i18n.t('Enter search term'),\n  fullWidth: true,\n  type: 'search',\n  filter: () => true\n});\n/**\n * Generic component that renders a MUI AutoComplete. It can execute an async query and show a list of results.\n * Which query to execute and what happens when a list item is clicked should be defined in the parent component.\n */\n\n\nclass AsyncAutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    const debounceTime = props.queryDebounceTime || 375;\n    this.state = { ...baseState\n    };\n    this.getItems = debounce(this.getItems, debounceTime);\n    this.trashableQuery = null;\n  }\n\n  componentWillUnmount() {\n    this.trashableQuery && this.trashableQuery.trash();\n  }\n\n  onAutoCompleteChange = value => {\n    this.setState({\n      autoCompleteText: value\n    });\n    this.getItems(value);\n  };\n  getItems = async value => {\n    const {\n      minCharLength,\n      query,\n      queryParam\n    } = this.props;\n\n    if (!value || value.length < minCharLength) {\n      // Don't query if too few characters were entered\n      const searchWarning = value ? i18n.t('Please enter at least {{ minCharCount }} characters', {\n        minCharCount: minCharLength\n      }) : null;\n      this.setState({ ...baseState,\n        searchWarning\n      });\n    } else {\n      // Set loading state\n      this.setState({ ...baseState,\n        filteredItems: loaderDataSource\n      }); // Then query\n\n      this.trashableQuery = makeTrashable(query(value, queryParam));\n\n      try {\n        let filteredResults = await this.trashableQuery;\n        filteredResults = asArray(filteredResults);\n\n        if (filteredResults.length > 0) {\n          // Display results if any were returned\n          const filteredItems = filteredResults.map(model => ({\n            text: model.displayName,\n            value: model\n          }));\n          this.setState({ ...baseState,\n            filteredItems: filteredItems\n          });\n        } else {\n          // Otherwise show warning\n          this.setState({ ...baseState,\n            errorStyle: styles.error.warning,\n            searchWarning: i18n.t('No matches found')\n          });\n        }\n      } catch (error) {\n        // Show error on input\n        this.setState({ ...baseState,\n          errorStyle: styles.error.warning,\n          searchWarning: createHumanErrorMessage(error, i18n.t('There was a problem retreiving your search results'))\n        });\n      }\n    }\n  };\n  onItemSelect = dataSourceItem => {\n    const {\n      selectHandler\n    } = this.props;\n    this.setState({\n      autoCompleteText: ''\n    });\n    selectHandler(dataSourceItem);\n  };\n\n  render() {\n    const {\n      autoCompleteProps\n    } = this.props;\n    const mergedAutoCompleteProps = { ...getDefaultAutoCompleteProps(),\n      ...autoCompleteProps\n    };\n    const {\n      filteredItems,\n      searchWarning,\n      errorStyle,\n      autoCompleteText\n    } = this.state;\n    const marginBottom = searchWarning ? 0 : 28;\n    const mergedProps = { ...mergedAutoCompleteProps,\n      onUpdateInput: this.onAutoCompleteChange,\n      onNewRequest: this.onItemSelect,\n      searchText: autoCompleteText,\n      dataSource: filteredItems,\n      errorText: searchWarning,\n      errorStyle: errorStyle,\n      floatingLabelShrinkStyle: errorStyle,\n      style: {\n        marginBottom: marginBottom\n      },\n      menuStyle: {\n        maxHeight: '600px'\n      }\n    };\n    return <AutoComplete {...mergedProps} />;\n  }\n\n}\n\nAsyncAutoComplete.propTypes = {\n  query: PropTypes.func.isRequired,\n  selectHandler: PropTypes.func.isRequired,\n  autoCompleteProps: PropTypes.object,\n  minCharLength: PropTypes.number,\n  queryDebounceTime: PropTypes.number,\n  queryParam: PropTypes.any\n};\nAsyncAutoComplete.defaultProps = {\n  queryDebounceTime: 375,\n  minCharLength: 3\n};\nexport default AsyncAutoComplete;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { OrgUnitTreeMultipleRoots } from '@dhis2/d2-ui-org-unit-tree';\nimport Paper from 'material-ui/Paper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport { red500 } from 'material-ui/styles/colors';\nimport AsyncAutoComplete from './AsyncAutoComplete';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport defer from 'lodash.defer';\nimport PropTypes from 'prop-types';\nimport api from '../api';\nimport { orgUnitRootsSelector } from '../selectors';\nconst styles = {\n  wrapper: {\n    minHeight: '300px',\n    maxHeight: '60vh',\n    position: 'relative'\n  },\n  scrollBox: {\n    position: 'relative',\n    marginTop: '-12px',\n    maxHeight: 'calc(60vh - 154px)',\n    minHeight: 'calc(300px - 154px)',\n    overflowY: 'auto',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    borderRadius: '2px'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  buttonStrip: {\n    paddingTop: '16px',\n    height: '36px'\n  },\n  buttonMargin: {\n    marginRight: '8px'\n  },\n  header: {\n    paddingBottom: 0,\n    fontSize: '1.2rem',\n    marginBottom: '-16px'\n  },\n  headerError: {\n    color: red500\n  },\n  errorText: {\n    fontSize: '0.8rem',\n    marginLeft: '0.8rem'\n  }\n};\n/**\n * Renders a d2-ui OrgUnitTreeMultipleRoots with an asyncAutoComplete above it and a button strip below\n * This component will only show buttons if you pass it a confirmSelection (func) property\n * It has been made compliant with redux form\n */\n\nclass SearchableOrgUnitTree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roots: null,\n      selectedOrgUnits: [...props.selectedOrgUnits],\n      orgUnitFilter: null,\n      initiallyExpanded: this.getInitiallyExpandedItems(props.selectedOrgUnits)\n    };\n  }\n\n  getInitiallyExpandedItems(orgUnits) {\n    return orgUnits.reduce((expandedUnits, orgUnit) => {\n      const strippedPath = this.removeLastPathSegment(orgUnit);\n\n      if (strippedPath) {\n        expandedUnits.push(strippedPath);\n      }\n\n      return expandedUnits;\n    }, []);\n  }\n\n  getIndexOfOrgUnit(orgUnit) {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const selectedUnit = selectedOrgUnits.find(unit => unit.path === orgUnit.path);\n    return selectedOrgUnits.indexOf(selectedUnit);\n  }\n\n  removeLastPathSegment({\n    path\n  }) {\n    return path.substr(0, path.lastIndexOf('/'));\n  }\n\n  update(selectedOrgUnits, initiallyExpanded) {\n    const {\n      onChange,\n      onBlur\n    } = this.props;\n    const updateObject = initiallyExpanded ? {\n      selectedOrgUnits,\n      initiallyExpanded\n    } : {\n      selectedOrgUnits\n    };\n\n    if (onChange) {\n      onChange(selectedOrgUnits.map(unit => unit.id));\n    }\n\n    this.setState(updateObject); // Also call onBlur if this is available. In a redux-form the component will be 'touched' by it\n\n    onBlur && onBlur();\n  }\n\n  toggleSelectedOrgUnits = (_, orgUnit) => {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const orgUnitIndex = this.getIndexOfOrgUnit(orgUnit);\n    const newOrgUnits = orgUnitIndex === -1 ? [...selectedOrgUnits, orgUnit] : [...selectedOrgUnits.slice(0, orgUnitIndex), ...selectedOrgUnits.slice(orgUnitIndex + 1)];\n    this.update(newOrgUnits, []);\n  };\n  selectAndShowFilteredOrgUnit = dataSourceItem => {\n    const orgUnit = dataSourceItem.value;\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const initiallyExpanded = [this.removeLastPathSegment(orgUnit)];\n    const newOrgUnits = [...selectedOrgUnits, orgUnit];\n    this.update(newOrgUnits, initiallyExpanded);\n  };\n  clearSelection = () => {\n    this.update([]);\n    defer(this.applySelection);\n  };\n  applySelection = () => {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const {\n      confirmSelection\n    } = this.props;\n    confirmSelection(selectedOrgUnits);\n  };\n\n  render() {\n    const {\n      selectedOrgUnits,\n      initiallyExpanded,\n      orgUnitFilter\n    } = this.state;\n    const {\n      roots,\n      confirmSelection,\n      cancel,\n      orgUnitType,\n      headerText,\n      wrapperStyle,\n      errorText\n    } = this.props;\n    const selected = selectedOrgUnits.map(unit => unit.path);\n    const autoCompleteProps = {\n      floatingLabelText: i18n.t('Search'),\n      hintText: i18n.t('Enter search term'),\n      fullWidth: true\n    };\n    const headerStyle = errorText ? { ...styles.header,\n      ...styles.headerError\n    } : styles.header;\n    return <div style={{ ...styles.wrapper,\n      ...wrapperStyle\n    }}>\n                {headerText ? <Heading level={4} style={headerStyle}>\n                        {headerText}\n                        {errorText && <span style={styles.errorText}>{errorText}</span>}\n                    </Heading> : null}\n                <AsyncAutoComplete autoCompleteProps={autoCompleteProps} query={api.queryOrgUnits} queryParam={orgUnitType} minCharLength={2} queryDebounceTime={375} selectHandler={this.selectAndShowFilteredOrgUnit} />\n                <Paper style={styles.scrollBox}>\n                    {!roots ? <CircularProgress style={styles.loader} /> : <OrgUnitTreeMultipleRoots roots={roots} onSelectClick={this.toggleSelectedOrgUnits} selected={selected} initiallyExpanded={initiallyExpanded} orgUnitsPathsToInclude={orgUnitFilter} />}\n                </Paper>\n                {confirmSelection ? <div style={styles.buttonStrip}>\n                        <RaisedButton label={i18n.t('Apply')} primary={true} style={styles.buttonMargin} onClick={this.applySelection} disabled={!roots} />\n                        <RaisedButton label={i18n.t('Clear all')} secondary={true} style={styles.buttonMargin} onClick={this.clearSelection} disabled={!roots} />\n                        <RaisedButton onClick={cancel} label={i18n.t('Cancel')} />\n                    </div> : null}\n            </div>;\n  }\n\n}\n\nSearchableOrgUnitTree.propTypes = {\n  orgUnitType: PropTypes.string.isRequired,\n  selectedOrgUnits: PropTypes.array.isRequired,\n  cancel: PropTypes.func,\n  confirmSelection: PropTypes.func,\n  errorText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  headerText: PropTypes.string,\n  roots: PropTypes.array,\n  wrapperStyle: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    roots: orgUnitRootsSelector(props.orgUnitType, state.currentUser)\n  };\n};\n\nexport default connect(mapStateToProps)(SearchableOrgUnitTree);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { TextField, Checkbox } from 'material-ui';\n/**\n * Renders a TextField and Checkbox above the AuthoritySections.\n * The actual filtering is being done in the FilteredAuthoritySections component which uses `utils/filterAuthorities`\n * However, this is done via the AuthorityEditor component\n */\n\nclass AuthorityFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchStr: '',\n      selectedOnly: false\n    };\n  }\n\n  onSelectedOnlyChange = (_, value) => {\n    this.setState({\n      selectedOnly: value\n    });\n    this.props.onFilterChange(this.state.searchStr, value);\n  };\n  onSearchStrChange = event => {\n    const value = event.target.value;\n    this.setState({\n      searchStr: value\n    });\n    this.props.onFilterChange(value, this.state.selectedOnly);\n  };\n\n  render() {\n    return <div className=\"authority-editor__filterbar\">\n                <TextField className=\"authority-editor__filter-text-input search-input\" floatingLabelText={i18n.t('Search')} onChange={this.onSearchStrChange} type=\"search\" />\n                <Checkbox className=\"authority-editor__filter-checkbox\" label={i18n.t('Selected authorities only')} checked={this.state.selectedOnly} onCheck={this.onSelectedOnlyChange} style={{\n        width: '300px'\n      }} />\n            </div>;\n  }\n\n}\n\nAuthorityFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired\n};\nexport default AuthorityFilter;","/* eslint-disable max-params */\n\n/** @module AuthorityEditor/utils/filterAuthorities */\nconst matchesSearchStr = (item, searchChunks) => {\n  if (!searchChunks) {\n    return true;\n  }\n\n  const strToMatch = item.name.toLowerCase();\n  return searchChunks.some(chunk => {\n    // Ignore single characters when there are multiple chunks\n    // because this makes the results list grow like crazy\n    // i.e. this would be like the user typing \"analytics t\" and\n    // this function returning true for all matches on \"t\"\n    if (chunk.length <= 1 && searchChunks.length > 1) {\n      return false;\n    }\n\n    return strToMatch.indexOf(chunk) > -1;\n  });\n};\n\nconst matchesSelectedSetting = (item, selectedOnly, lookup) => {\n  if (!selectedOnly) {\n    return true;\n  }\n\n  if (item.items && item.items.length) {\n    return item.items.some(subItem => lookup.get(subItem.id));\n  } else {\n    return Boolean(lookup.get(item.id));\n  }\n};\n/**\n * Filters a list of all available authorities based on a search chunks and a selectedOnly flag\n * @param {Object} allAuthorities - A nested object in which all authorities have been grouped in a logical way\n * @param {Object} selectedItemsLookup - A lookup Map that can be used for quickly filtering selected authorities\n * @param {Array} searchChunks - A search string that has been split into an array by spaces\n * @param {Boolean} selectedOnly - Flag for only allowing selected items\n * @returns {Object} An object with the same structure as `allAuthorities` but containing filtered arrays of authorities\n */\n\n\nconst filterAuthorities = (allAuthorities, selectedItemsLookup, searchChunks, selectedOnly) => {\n  if (!searchChunks && !selectedOnly) {\n    return allAuthorities;\n  }\n\n  return Object.keys(allAuthorities).reduce((filtered, key) => {\n    const section = allAuthorities[key];\n    const filteredItems = section.items.filter(item => {\n      const allowedBySearchStr = matchesSearchStr(item, searchChunks);\n      const allowedBySelectedSetting = matchesSelectedSetting(item, selectedOnly, selectedItemsLookup);\n      return allowedBySearchStr && allowedBySelectedSetting;\n    });\n    filtered[key] = { ...section,\n      items: filteredItems\n    };\n    return filtered;\n  }, {});\n};\n\nexport default filterAuthorities;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from 'react-highlight-words';\n/**\n * Will return either a string or a nested element with spans and marks that are highlighted\n * depending on the presence of searchChunks\n * @param {Object} props - The component props\n * @param {String} props.text - The text to display\n * @param {Array} props.searchChunks - The searchChunks to highlight in the text\n * @class\n */\n\nconst HighlightableText = ({\n  text,\n  searchChunks\n}) => {\n  // If there is nothing to highlight, return the label text as it is\n  if (!searchChunks) {\n    return text;\n  } // Otherwise return a highlighted label text\n\n\n  return <Highlighter highlightClassName=\"authority-editor__search-highlight\" searchWords={searchChunks} autoEscape={true} textToHighlight={text} />;\n};\n\nHighlightableText.propTypes = {\n  searchChunks: PropTypes.array,\n  text: PropTypes.string\n};\nexport default HighlightableText;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'material-ui';\nimport HighlightableText from './HighlightableText';\n/**\n * Renders a single authority cell. This can be an empty cell, or a checkbox with or without a label.\n * If label and searchChunks are present, the label text will be highlighted.\n * Depending on state this checkbox can be disabled or selected.\n */\n\nclass AuthorityItem extends Component {\n  onChecked = (_, value) => {\n    const {\n      authSubject: {\n        id\n      },\n      onCheckedCallBack\n    } = this.props;\n    onCheckedCallBack([id], value);\n  };\n\n  render() {\n    const {\n      authSubject,\n      withLabel,\n      disabled\n    } = this.props;\n    const {\n      searchChunks\n    } = this.context;\n    const {\n      name,\n      empty,\n      implicit\n    } = authSubject;\n    const baseClassName = 'authority-editor__auth-checkbox';\n    const className = withLabel ? baseClassName : `${baseClassName}--without-label`;\n    const label = withLabel ? <HighlightableText text={name} searchChunks={searchChunks} /> : '';\n    return <td>\n                {!empty ? <Checkbox onCheck={this.onChecked} label={label} className={className} checked={this.props.selected || Boolean(implicit)} disabled={implicit || disabled} /> : <div className=\"authority-editor__empty-cell\" />}\n            </td>;\n  }\n\n}\n\nAuthorityItem.propTypes = {\n  authSubject: PropTypes.shape({\n    empty: PropTypes.bool,\n    id: PropTypes.string,\n    implicit: PropTypes.bool,\n    name: PropTypes.string\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  withLabel: PropTypes.bool.isRequired,\n  onCheckedCallBack: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nAuthorityItem.contextTypes = {\n  searchChunks: PropTypes.array\n};\nexport default AuthorityItem;","import i18n from '@dhis2/d2-i18n';\n\nconst createNameLookup = () => {\n  return new Map([['ALL', i18n.t('All (Full authority)')], ['F_ANALYTICSTABLEHOOK', i18n.t('Analytics Table Hook')], ['F_ATTRIBUTE', i18n.t('Attribute')], ['F_CATEGORY_COMBO', i18n.t('Category Combo')], ['F_CATEGORY', i18n.t('Category')], ['F_CATEGORY_OPTION', i18n.t('Category Option')], ['F_CATEGORY_OPTION_GROUP', i18n.t('Category Option Group')], ['F_CATEGORY_OPTION_GROUP_SET', i18n.t('Category Option Group Set')], ['F_COLOR_SET', i18n.t('Color Set')], ['F_CONSTANT', i18n.t('Constant')], ['F_DASHBOARD', i18n.t('Dashboard')], ['F_DATAELEMENTGROUPSET', i18n.t('Data Element Group Sets')], ['F_DATAELEMENTGROUP', i18n.t('Data Element Groups')], ['F_DATAELEMENT', i18n.t('Data Element')], ['F_DATAELEMENT_MINMAX', i18n.t('Min/max rule')], ['F_DATASET', i18n.t('Data Set')], ['F_DATAVALUE', i18n.t('Data Value')], ['F_DOCUMENT', i18n.t('Document')], ['F_EVENTCHART', i18n.t('Event Chart')], ['F_EVENTREPORT', i18n.t('Event Report')], ['F_EXTERNAL_MAP_LAYER', i18n.t('External Map Layer')], ['F_INDICATORGROUPSET', i18n.t('Indicator Group Sets')], ['F_INDICATORGROUP', i18n.t('Indicator Group')], ['F_INDICATORTYPE', i18n.t('Indicator Type')], ['F_INDICATOR', i18n.t('Indicator')], ['F_LEGEND_SET', i18n.t('Legend Set')], ['F_MAP', i18n.t('Map')], ['F_MINMAX_DATAELEMENT', i18n.t('Min-Max Data Element')], ['F_OPTIONGROUPSET', i18n.t('Option Group Set')], ['F_OPTIONGROUP', i18n.t('Option Group')], ['F_OPTIONSET', i18n.t('Option Set')], ['F_ORGANISATIONUNIT', i18n.t('Organisation Unit')], ['F_ORGUNITGROUPSET', i18n.t('Organisation Unit Group Set')], ['F_ORGUNITGROUP', i18n.t('Organisation Unit Group')], ['F_PREDICTOR', i18n.t('Predictor')], ['F_PROGRAMSTAGE', i18n.t('Program Stage')], ['F_PROGRAM', i18n.t('Program')], ['F_PROGRAM_INDICATOR', i18n.t('Program Indicator')], ['F_PROGRAM_INDICATOR_GROUP', i18n.t('Program Indicator Group')], ['F_PROGRAM_RULE', i18n.t('Program Rule')], ['F_PROGRAM_TRACKED_ENTITY_ATTRIBUTE_GROUP', i18n.t('Program Tracked Entity Attribute Group')], ['F_PUSH_ANALYSIS', i18n.t('Push Analysis')], ['F_RELATIONSHIPTYPE', i18n.t('Relationship Type')], ['F_REPORT', i18n.t('Report')], ['F_SECTION', i18n.t('Section')], ['F_SQLVIEW', i18n.t('SQL View')], ['F_TRACKED_ENTITY', i18n.t('Tracked Entity')], ['F_TRACKED_ENTITY_ATTRIBUTE', i18n.t('Tracked Entity Attribute')], ['F_TRACKED_ENTITY_DATAVALUE', i18n.t('Tracked Entity Data Value')], ['F_TRACKED_ENTITY_INSTANCE', i18n.t('Tracked Entity Instance')], ['F_USERGROUP', i18n.t('User Group')], ['F_USERROLE', i18n.t('User Role')], ['F_USER', i18n.t('User')], ['F_VALIDATIONRULEGROUP', i18n.t('Validation Rule Group')], ['F_VALIDATIONRULE', i18n.t('Validation Rule')], ['F_PREDICTORGROUP', i18n.t('Data predictor group')], ['F_SKIP_DATA_IMPORT_AUDIT', i18n.t('Skip data import audit')], ['F_VISUALIZATION', i18n.t('Visualization')]]);\n}; // returns cached results after first call\n\n\nexport default (() => {\n  let map = null;\n  return () => {\n    if (!map) {\n      map = createNameLookup();\n    }\n\n    return map;\n  };\n})();","/** @module AuthorityEditor/utils/groupAuthorities */\nimport i18n from '@dhis2/d2-i18n';\nimport startsWith from 'lodash.startswith';\nimport endsWith from 'lodash.endswith';\nimport sortBy from 'lodash.sortby';\nimport getNameLookup from './authorityGroupNames';\n\nconst createEmptyGroupedAuthorities = () => ({\n  metadata: {\n    name: 'Metadata',\n    items: null,\n    headers: ['Name', 'Add/Update Public', 'Add/Update Private', 'Delete', 'External access']\n  },\n  apps: {\n    name: i18n.t('Apps'),\n    items: null,\n    headers: ['Name']\n  },\n  tracker: {\n    name: i18n.t('Tracker'),\n    items: null,\n    headers: ['Name']\n  },\n  importExport: {\n    name: i18n.t('Import-Export'),\n    items: null,\n    headers: ['Name']\n  },\n  system: {\n    name: i18n.t('System'),\n    items: null,\n    headers: ['Name']\n  }\n}); // The next 3 constants are exported so they can be used by the AuthorityEditor component\n// The target object to which the allAuths array will be mapped\n\n\nexport const getEmptyGroupedAuthorities = (() => {\n  let emptyGroupedAuthorities = null;\n  return () => {\n    if (!emptyGroupedAuthorities) {\n      emptyGroupedAuthorities = createEmptyGroupedAuthorities();\n    }\n\n    return emptyGroupedAuthorities;\n  };\n})(); // Suffixes and prefixes\n\nexport const PUBLIC_ADD_SUFFIX = '_PUBLIC_ADD';\nexport const PRIVATE_ADD_SUFFIX = '_PRIVATE_ADD';\nconst ADD_SUFFIX = '_ADD';\nconst DELETE_SUFFIX = '_DELETE';\nconst EXTERNAL_ACCESS_SUFFIX = '_EXTERNAL';\nconst APP_AUTH_PREFIX = 'M_'; // Suffix groups for lookups and group construction\n\nconst ALL_METADATA_SUFFIXES = [PUBLIC_ADD_SUFFIX, PRIVATE_ADD_SUFFIX, ADD_SUFFIX, DELETE_SUFFIX, EXTERNAL_ACCESS_SUFFIX]; // Blueprints for creating implicit options and empty cells\n\nconst EMPTY_GROUP_ITEM = {\n  id: null,\n  empty: true\n};\nconst IMPLICIT_GROUP_ITEM = {\n  implicit: true\n}; // Metadata with implicit add and delete\n\nconst AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE = new Set(['F_DASHBOARD_PUBLIC_ADD', 'F_EVENTCHART_PUBLIC_ADD', 'F_EVENTREPORT_PUBLIC_ADD', 'F_MAP_PUBLIC_ADD', 'F_VISUALIZATION_PUBLIC_ADD']);\nconst AUTHORITY_GROUPS = {\n  tracker: new Set(['F_PROGRAM_DASHBOARD_CONFIG_ADMIN', 'F_PROGRAM_ENROLLMENT', 'F_PROGRAM_ENROLLMENT_READ', 'F_PROGRAM_UNENROLLMENT', 'F_TEI_CASCADE_DELETE', 'F_TRACKED_ENTITY_DATAVALUE_READ', 'F_TRACKED_ENTITY_INSTANCE_SEARCH', 'F_TRACKED_ENTITY_INSTANCE_SEARCH_IN_ALL_ORGUNITS', 'F_TRACKED_ENTITY_UPDATE', 'F_UNCOMPLETE_EVENT', 'F_VIEW_EVENT_ANALYTICS', 'F_PROGRAM_RULE_MANAGEMENT', 'F_ENROLLMENT_CASCADE_DELETE']),\n  importExport: new Set(['F_EXPORT_DATA', 'F_EXPORT_EVENTS', 'F_IMPORT_DATA', 'F_IMPORT_EVENTS', 'F_IMPORT_GML', 'F_METADATA_EXPORT', 'F_METADATA_IMPORT', 'F_METADATA_MANAGE', 'F_SKIP_DATA_IMPORT_AUDIT']),\n  system: new Set(['ALL', 'F_APPROVE_DATA', 'F_APPROVE_DATA_LOWER_LEVELS', 'F_ACCEPT_DATA_LOWER_LEVELS', 'F_VIEW_UNAPPROVED_DATA', 'F_ORGANISATIONUNIT_MOVE', 'F_ORGANISATIONUNITLEVEL_UPDATE', 'F_RUN_VALIDATION', 'F_REPLICATE_USER', 'F_USER_VIEW', 'F_USERGROUP_MANAGING_RELATIONSHIPS_ADD', 'F_USERGROUP_MANAGING_RELATIONSHIPS_VIEW', 'F_PERFORM_MAINTENANCE', 'F_SCHEDULING_ADMIN', 'F_GENERATE_MIN_MAX_VALUES', 'F_PREDICTOR_RUN', 'F_INSERT_CUSTOM_JS_CSS', 'F_SYSTEM_SETTING', 'F_SEND_EMAIL', 'F_MOBILE_SETTINGS', 'F_MOBILE_SENDSMS', 'F_OAUTH2_CLIENT_MANAGE'])\n};\n/**\n * This function receives an array of authorities and reduces this into an object that is grouped into\n * logical sections. This is done in a semi dynamic way by using pre- and suffixes in tandem\n * with hard-coded group definitions\n * @param {Object[]} authorities - The list of authorities that will be transformed\n * @param {string} authorities[].id - The identifier of an authority using UPPER_SNAKE_CASE containing patterns that can be used for grouping.\n * @param {string} authorities[].name - The display name of an authority.\n * @returns {Object} - The grouped authorities object\n */\n\nconst groupAuthorities = authorities => {\n  // A lookup map that can be used to verify the existence of a particular authority ID in linear time\n  const lookup = authorities.reduce((lookup, auth) => {\n    lookup.set(auth.id, auth);\n    return lookup;\n  }, new Map()); // The initial state of items in emptyGroupedAuthorities is null, which makes the authority sections render a loader\n  // but the accumulator object passed into the reduce function below expects items to be empty arrays\n\n  const emptyGroupedAuthorities = Object.keys(getEmptyGroupedAuthorities()).reduce((groupedBase, key) => {\n    groupedBase[key] = { ...getEmptyGroupedAuthorities()[key],\n      items: []\n    };\n    return groupedBase;\n  }, {}); // Append items to the groupedAuthorities accumulator and return the accumulated object\n\n  const groupedAuthories = authorities.reduce((groupedAuthorities, auth) => {\n    if (startsWith(auth.id, APP_AUTH_PREFIX)) {\n      // Group under apps\n      groupedAuthorities.apps.items.push(auth);\n      lookup.delete(auth.id);\n    } else if (hasNoGroupSuffix(auth)) {\n      // Group under specified key-value section\n      addToAuthoritySection(auth, groupedAuthorities, lookup);\n    } else {\n      const metadataGroup = createMetadataGroup(auth, lookup);\n\n      if (metadataGroup) {\n        // If any type of metadata group was created add it to the metadata items list\n        groupedAuthorities.metadata.items.push(metadataGroup);\n      } else if (lookup.get(auth.id)) {\n        // If no metadata group was created, we are dealing with and authority which had a metadata suffix,\n        // but actually was not a metadata authority\n        addToAuthoritySection(auth, groupedAuthorities, lookup);\n      }\n    }\n\n    return groupedAuthorities;\n  }, emptyGroupedAuthorities);\n  return sortGroupedAuthorities(groupedAuthories);\n};\n\nconst sortGroupedAuthorities = groupedAuthories => {\n  Object.keys(groupedAuthories).forEach(key => {\n    const group = groupedAuthories[key];\n    group.items = sortBy(group.items, 'name');\n  });\n  return groupedAuthories;\n};\n/**\n * Checks if a given authority contains any group suffixes\n * @param {Object} auth - The authority which ID could contain a group suffix\n * @return {Boolean} - True if no group suffix was found in the auth id\n */\n\n\nconst hasNoGroupSuffix = auth => {\n  return !ALL_METADATA_SUFFIXES.some(suffix => endsWith(auth.id, suffix));\n};\n/**\n * Receives an authority item and creates an authority metadata group based on suffixes\n * @param {Object} auth - The authority to group\n * @param {Object} suffixes - The list of authority suffixes to check against\n * @param {Object} lookup - The authority lookup map\n * @return {Object} group - A metadata authority group\n */\n\n\nconst createMetadataGroup = (auth, lookup) => {\n  // Exit if authority is no longer in the lookup\n  if (!lookup.get(auth.id)) {\n    return null;\n  } // The suffix of the the incoming authority, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"_DELETE\"\n\n\n  const authSuffix = ALL_METADATA_SUFFIXES.find(suffix => endsWith(auth.id, suffix)); // The authority baseName, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"F_CATEGORY_COMBO\"\n\n  const baseName = auth.id.replace(authSuffix, ''); // Some metadata authorities distinguish between PUBLIC_ADD and PRIVATE_ADD\n  // Others only have a _ADD version which equates to PUBLIC_ADD and PRIVATE_ADD may be left empty\n\n  const genericAdd = lookup.get(baseName + ADD_SUFFIX); // Some metadata authorities have an external access authority version. If not present this may be left empty\n\n  const externalAccess = lookup.get(baseName + EXTERNAL_ACCESS_SUFFIX); // Some authorities do not have _ADD_PRIVATE and _DELETE siblings in the authority list\n  // however, they do belong to the metadata section. If a role is granted ADD_PUBLIC rights it is also allowed\n  // to ADD_PRIVATE and DELETE implicitly\n\n  const hasImplicitAddPrivateAndDelete = AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE.has(baseName + PUBLIC_ADD_SUFFIX); // Set each authority item for the current authority group\n\n  const publicAddAuth = genericAdd || lookup.get(baseName + PUBLIC_ADD_SUFFIX);\n  const privateAddAuth = genericAdd ? EMPTY_GROUP_ITEM : hasImplicitAddPrivateAndDelete ? IMPLICIT_GROUP_ITEM : lookup.get(baseName + PRIVATE_ADD_SUFFIX);\n  const deleteAuth = hasImplicitAddPrivateAndDelete ? IMPLICIT_GROUP_ITEM : lookup.get(baseName + DELETE_SUFFIX);\n  const externalAccessAuth = externalAccess || EMPTY_GROUP_ITEM; // If any of these variable are undefined, the authority in question has an ID with a metadata suffix,\n  // but is not actually a metadata authority. I.e. \"F_ENROLLMENT_CASCADE_DELETE\"\n\n  if (!publicAddAuth || !privateAddAuth || !deleteAuth) {\n    return null;\n  } // Delete from lookup to prevent double entries\n\n\n  ALL_METADATA_SUFFIXES.forEach(suffix => lookup.delete(baseName + suffix));\n  return {\n    name: getNameLookup().get(baseName) || baseName,\n    items: [publicAddAuth, privateAddAuth, deleteAuth, externalAccessAuth]\n  };\n};\n/**\n * Assigns non-app, non-metadata authorities to the correct section. If it cannot find a correct section it will be assigned to 'system'\n * @param {Object} auth - The authority to assign to a section\n * @param {Object} groupedAuthorities - The object to assign to\n * @param {Object} lookup - The authority lookup map\n */\n\n\nconst addToAuthoritySection = (auth, groupedAuthorities, lookup) => {\n  const groupKey = Object.keys(AUTHORITY_GROUPS).find(groupKey => AUTHORITY_GROUPS[groupKey].has(auth.id)) || 'system';\n\n  if (auth.id === 'ALL') {\n    auth.name = getNameLookup().get(auth.id);\n  }\n\n  groupedAuthorities[groupKey].items.push(auth);\n  lookup.delete(auth.id);\n};\n\nexport default groupAuthorities;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport endsWith from 'lodash.endswith';\nimport AuthorityItem from './AuthorityItem';\nimport HighlightableText from './HighlightableText';\nimport { PUBLIC_ADD_SUFFIX, PRIVATE_ADD_SUFFIX } from './utils/groupAuthorities';\n/**\n * A metadata authority group, which renders an array of 5 table cells.\n * The first cell contains the authority name and subsequent cells are authority-types corresponding to this name\n */\n\nclass AuthorityGroup extends Component {\n  onAuthGroupChanged = (id, value) => {\n    this.context.onAuthChange(id, value);\n\n    if (this.isPublicAdd(id)) {\n      // Force rerender on entire group when public add changes\n      this.forceUpdate();\n    }\n  };\n\n  isPublicAdd(id) {\n    return endsWith(id, PUBLIC_ADD_SUFFIX);\n  }\n\n  isPrivateAdd(id) {\n    return endsWith(id, PRIVATE_ADD_SUFFIX);\n  }\n\n  render() {\n    const {\n      name,\n      items\n    } = this.props;\n    const {\n      shouldSelect,\n      searchChunks\n    } = this.context;\n    let publicAddSelected;\n    return items.reduce((authGroup, authSubject, index) => {\n      const isPublicAdd = this.isPublicAdd(authSubject.id);\n      const isPrivateAdd = this.isPrivateAdd(authSubject.id);\n      const implicitSelect = Boolean(publicAddSelected && isPrivateAdd);\n      const selected = shouldSelect(authSubject.id) || implicitSelect;\n\n      if (isPublicAdd) {\n        publicAddSelected = selected;\n      }\n\n      authGroup.push(<AuthorityItem key={`authitem-${index}`} authSubject={authSubject} withLabel={false} selected={selected} disabled={implicitSelect} onCheckedCallBack={this.onAuthGroupChanged} />);\n      return authGroup;\n    }, [<td key={'group-label'}>\n                    <HighlightableText text={name} searchChunks={searchChunks} />\n                </td>]);\n  }\n\n}\n\nAuthorityGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired\n};\nAuthorityGroup.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  searchChunks: PropTypes.array\n};\nexport default AuthorityGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, CircularProgress, Checkbox } from 'material-ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport AuthorityGroup from './AuthorityGroup';\nimport AuthorityItem from './AuthorityItem';\n/**\n * Renders a logical authority section. Within the section it can either render rows with `AuthorityGroups` for metadata,\n */\n\nclass AuthoritySection extends Component {\n  onTableHeadCheck = (_event, value) => {\n    const ids = this.props.authSection.items.map(({\n      id\n    }) => id);\n    this.context.onAuthChange(ids, value);\n  };\n  renderAuthRow = (authSubject, index) => {\n    const {\n      shouldSelect,\n      onAuthChange\n    } = this.context;\n    return <tr key={`row-${index}`}>\n                {authSubject.items ? <AuthorityGroup items={authSubject.items} name={authSubject.name} /> : <AuthorityItem authSubject={authSubject} withLabel={true} selected={shouldSelect(authSubject.id)} onCheckedCallBack={onAuthChange} />}\n            </tr>;\n  };\n\n  renderLoaderRow() {\n    return <tr>\n                <td className=\"authority-editor__placeholder-cell\">\n                    <CircularProgress size={24} />\n                </td>\n            </tr>;\n  }\n\n  renderInfoRow(errorMsg) {\n    let className = 'authority-editor__placeholder-cell';\n    let msg = i18n.t('No matches found');\n\n    if (errorMsg) {\n      className += '--error';\n      msg = errorMsg;\n    }\n\n    return <tr>\n                <td className={className}>{msg}</td>\n            </tr>;\n  }\n\n  renderContent(authSection) {\n    if (!authSection.items) {\n      return this.renderLoaderRow();\n    }\n\n    if (typeof authSection.items === 'string') {\n      return this.renderInfoRow(authSection.items);\n    }\n\n    if (authSection.items.length === 0) {\n      return this.renderInfoRow();\n    }\n\n    return authSection.items.map(this.renderAuthRow);\n  }\n\n  renderTableHead({\n    headers,\n    name,\n    items\n  }) {\n    const allItemsSelected = name !== 'Metadata' && Array.isArray(items) && items.length > 0 && items.every(({\n      id\n    }) => this.context.shouldSelect(id));\n    return <thead>\n                <tr>\n                    {headers.map((header, index) => <th key={`header-${index}`}>\n                            {name !== 'Metadata' && index === 0 ? <Checkbox className=\"authority-editor__auth-checkbox\" label={header} onCheck={this.onTableHeadCheck} checked={allItemsSelected} /> : header}\n                        </th>)}\n                </tr>\n            </thead>;\n  }\n\n  render() {\n    const {\n      sectionKey,\n      authSection\n    } = this.props;\n    let wrapperClassName = `authority-editor__auth-group ${sectionKey}`;\n\n    if (authSection.items && authSection.items.length > 11) {\n      wrapperClassName += ' scrollable';\n    }\n\n    let tableClassName = 'authority-editor__auth-group-table';\n    tableClassName += ` columns-${authSection.headers.length}`;\n    return <Paper className={wrapperClassName}>\n                <Heading level={6} className=\"authority-editor__auth-group-header\">\n                    {authSection.name}\n                </Heading>\n                <table className={tableClassName}>\n                    {this.renderTableHead(authSection)}\n                    <tbody>{this.renderContent(authSection)}</tbody>\n                </table>\n            </Paper>;\n  }\n\n}\n\nAuthoritySection.propTypes = {\n  authSection: PropTypes.object.isRequired,\n  sectionKey: PropTypes.string.isRequired\n};\nAuthoritySection.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired\n};\nexport default AuthoritySection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport filterAuthorities from './utils/filterAuthorities';\nimport AuthoritySection from './AuthoritySection';\n/**\n * Component responsible for providing the `AuthoritySections` with filtered authority lists.\n */\n\nclass FilteredAuthoritySections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredAuthorities: props.allGroupedAuthorities,\n      searchChunks: null\n    };\n    this.updateFilter = debounce(this.updateFilter, 375);\n  }\n\n  getChildContext() {\n    return {\n      searchChunks: this.state.searchChunks\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateFilteredAuthorities(nextProps.allGroupedAuthorities, null, null);\n  }\n\n  updateFilter(searchStr, selectedOnly) {\n    const {\n      allGroupedAuthorities\n    } = this.props;\n    this.updateFilteredAuthorities(allGroupedAuthorities, searchStr, selectedOnly);\n  }\n\n  updateFilteredAuthorities(all, searchStr, selectedOnly) {\n    const {\n      selectedItemsLookup\n    } = this.context;\n    const searchChunks = searchStr ? searchStr.toLowerCase().split(' ') : null;\n    this.setState({\n      filteredAuthorities: filterAuthorities(all, selectedItemsLookup, searchChunks, selectedOnly),\n      searchChunks\n    });\n  }\n\n  render() {\n    const {\n      filteredAuthorities\n    } = this.state;\n    return <div className=\"authority-editor__auth-group-wrap\">\n                {Object.keys(filteredAuthorities).map(key => {\n        return <AuthoritySection key={key} sectionKey={key} authSection={filteredAuthorities[key]} />;\n      })}\n            </div>;\n  }\n\n}\n\nFilteredAuthoritySections.propTypes = {\n  allGroupedAuthorities: PropTypes.object\n};\nFilteredAuthoritySections.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  selectedItemsLookup: PropTypes.object.isRequired\n};\nFilteredAuthoritySections.childContextTypes = {\n  searchChunks: PropTypes.array\n};\nexport default FilteredAuthoritySections;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport './style.css';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport makeTrashable from 'trashable';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport api from '../../api';\nimport AuthorityFilter from './AuthorityFilter';\nimport FilteredAuthoritySections from './FilteredAuthoritySections';\nimport { getEmptyGroupedAuthorities } from './utils/groupAuthorities';\n/**\n * This is the parent component of the authorities section in the RoleForm.\n * It has been made compliant with redux-form.\n */\n\nclass AuthorityEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allGroupedAuthorities: getEmptyGroupedAuthorities()\n    }; // This lookup may be updated without triggering re-renders\n\n    this.selectedItemsLookup = props.initiallySelected.reduce((lookup, item) => lookup.set(item, true), new Map());\n    this.groupedAuthoritiesPromise = null;\n  }\n\n  getChildContext() {\n    return {\n      shouldSelect: this.shouldSelect,\n      onAuthChange: this.onAuthChange,\n      selectedItemsLookup: this.selectedItemsLookup\n    };\n  }\n\n  async componentDidMount() {\n    this.groupedAuthoritiesPromise = makeTrashable(api.getGroupedAuthorities());\n\n    try {\n      const allGroupedAuthorities = await this.groupedAuthoritiesPromise;\n      this.setState({\n        allGroupedAuthorities\n      });\n    } catch (error) {\n      this.handleAuthorityFetchError(error);\n    }\n  }\n\n  componentWillUnmount() {\n    this.groupedAuthoritiesPromise.trash();\n  }\n\n  handleAuthorityFetchError(error) {\n    const errorMsg = createHumanErrorMessage(error, i18n.t('There was a problem retreiving the available authorities.'));\n    const allGroupedAuthorities = Object.keys(getEmptyGroupedAuthorities()).reduce((total, key) => {\n      total[key] = { ...getEmptyGroupedAuthorities()[key],\n        items: errorMsg\n      };\n      return total;\n    }, {});\n    this.setState({\n      allGroupedAuthorities\n    });\n  }\n\n  onFilterChange = (searchStr, selectedOnly) => {\n    // Here we directly call a method on a child component instead of\n    // letting state changes trigger full re-render. This is to prevent the TextField\n    // from being blocked whilst typing.\n    this.filteredAuthSections.updateFilter(searchStr, selectedOnly);\n  };\n  /**\n   * Responds to checkbox changes for individual authorities and section headers. Will also notify redux-form Field components if onChange and onBlur handlers were passed\n   * @param {Array<string>} ids - The IDs of the authorities that were toggled\n   * @param {boolean} value - Checkbox was toggled to checked (true) or unchecked (false)\n   * @method\n   */\n\n  onAuthChange = (ids, value) => {\n    const {\n      reduxFormOnChange\n    } = this.props;\n    const authorityIds = [];\n    ids.forEach(id => {\n      this.selectedItemsLookup.set(id, value);\n    });\n    this.selectedItemsLookup.forEach((value, key) => {\n      if (value) {\n        authorityIds.push(key);\n      }\n    });\n    reduxFormOnChange && reduxFormOnChange(authorityIds);\n  };\n  shouldSelect = id => {\n    return Boolean(this.selectedItemsLookup.get(id));\n  };\n\n  render() {\n    const {\n      allGroupedAuthorities\n    } = this.state;\n    return <div className=\"authority-editor\">\n                <Heading level={4} className=\"authority-editor__header\">\n                    {i18n.t('Authorities')}\n                </Heading>\n                <AuthorityFilter onFilterChange={this.onFilterChange} />\n                <FilteredAuthoritySections ref={comp => {\n        this.filteredAuthSections = comp;\n      }} allGroupedAuthorities={allGroupedAuthorities} />\n            </div>;\n  }\n\n}\n\nAuthorityEditor.propTypes = {\n  initiallySelected: PropTypes.array,\n  reduxFormOnChange: PropTypes.func\n};\nAuthorityEditor.defaultProps = {\n  initiallySelected: []\n};\nAuthorityEditor.childContextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  selectedItemsLookup: PropTypes.object.isRequired\n};\nexport default AuthorityEditor;","import AuthorityEditor from './AuthorityEditor';\nexport default AuthorityEditor;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'material-ui/TextField/TextField';\nimport Checkbox from 'material-ui/Checkbox/Checkbox';\nimport SelectField from 'material-ui/SelectField/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport SearchableGroupEditor from '../components/SearchableGroupEditor';\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree';\nimport { orange500 } from 'material-ui/styles/colors';\nimport AuthorityEditor from '../components/AuthorityEditor';\nconst styles = {\n  checkbox: {\n    marginTop: '32px',\n    fontSize: '16px'\n  },\n  warning: {\n    color: orange500\n  }\n};\n/**\n * Helper functions used as \"component\" props for redux-form Field components.\n * @name fieldRenderers\n * @memberof module:utils\n */\n\nexport const renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    asyncValidating\n  },\n  ...other\n}) => {\n  const errorText = asyncValidating ? i18n.t('Validating...') : touched && error;\n\n  if (asyncValidating) {\n    other.errorStyle = styles.warning;\n  }\n\n  return <TextField floatingLabelText={label} hintText={label} fullWidth={true} errorText={errorText} {...other} {...input} />;\n};\nexport const renderAuthorityEditor = ({\n  input\n}) => {\n  const initiallySelected = input.value === '' ? [] : input.value;\n  return <AuthorityEditor initiallySelected={initiallySelected} reduxFormOnChange={input.onChange} reduxFormOnBlur={input.onBlur} />;\n};\nexport const renderCheckbox = ({\n  input,\n  label\n}) => {\n  return <Checkbox checked={Boolean(input.value)} onCheck={input.onChange} label={label} {...input} style={styles.checkbox} />;\n};\nexport const renderSelectField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    asyncValidating\n  },\n  options,\n  style\n}) => {\n  const errorText = asyncValidating ? i18n.t('Validating...') : touched && error;\n  const errorStyle = asyncValidating ? styles.warning : undefined;\n  return <SelectField floatingLabelText={label} fullWidth={true} value={input.value} name={input.name} onChange={(event, index, value) => {\n    input.onChange(value); // Trigger onBlur after a value is selected, in order to trigger\n    // a validator to run if the SelectField is in the asyncBlurFields list\n\n    setTimeout(() => input.onBlur(value), 1);\n  }} style={style} errorText={errorText} errorStyle={errorStyle}>\n            {options.map(({\n      id,\n      label\n    }, i) => <MenuItem key={`option_${i}`} value={id} primaryText={label} />)}\n        </SelectField>;\n};\nexport const renderSearchableGroupEditor = ({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  availableItemsQuery,\n  availableItemsLabel,\n  assignedItemsLabel,\n  initialValues,\n  ...other\n}) => {\n  return <SearchableGroupEditor initiallyAssignedItems={initialValues} onChange={input.onChange} onBlur={input.onBlur} availableItemsQuery={availableItemsQuery} availableItemsHeader={availableItemsLabel} assignedItemsHeader={assignedItemsLabel} errorText={touched && error} {...other} />;\n};\nexport const renderSearchableOrgUnitTree = ({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  label,\n  wrapperStyle,\n  initialValues,\n  orgUnitType\n}) => {\n  return <SearchableOrgUnitTree selectedOrgUnits={initialValues} onChange={input.onChange} wrapperStyle={wrapperStyle} headerText={label} orgUnitType={orgUnitType} errorText={touched && error} onBlur={input.onBlur} />;\n};\nexport const renderText = ({\n  name,\n  label,\n  style\n}) => {\n  return <p key={name} style={style}>\n            {label}\n        </p>;\n};\nconst sharedPropTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool.isRequired,\n    asyncValidating: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderTextField.propTypes = sharedPropTypes;\nrenderCheckbox.propTypes = sharedPropTypes;\nrenderSelectField.propTypes = { ...sharedPropTypes,\n  options: PropTypes.array.isRequired\n};\nrenderSearchableGroupEditor.propTypes = { ...sharedPropTypes,\n  availableItemsQuery: PropTypes.func.isRequired,\n  initialValues: PropTypes.array.isRequired,\n  assignedItemsLabel: PropTypes.string,\n  availableItemsLabel: PropTypes.string\n};\nrenderSearchableOrgUnitTree.propTypes = { ...sharedPropTypes,\n  initialValues: PropTypes.array.isRequired,\n  wrapperStyle: PropTypes.object\n};\nrenderAuthorityEditor.propTypes = { ...sharedPropTypes\n};\nrenderText.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired\n};","import { renderTextField, renderSearchableGroupEditor } from '../../utils/fieldRenderers';\nimport asArray from '../../utils/asArray';\nimport i18n from '@dhis2/d2-i18n';\nexport const FORM_NAME = 'groupForm';\nexport const NAME = 'name';\nexport const USERS = 'users';\nexport const CODE = 'code';\nexport const MANAGED_GROUPS = 'managedGroups';\nexport const GROUP_PROPS = [NAME, CODE, USERS, MANAGED_GROUPS];\nexport const STYLES = {\n  loaderWrap: {\n    paddingTop: '2rem',\n    textAlign: 'center'\n  }\n};\nexport const getFields = () => [{\n  name: NAME,\n  label: i18n.t('Name'),\n  fieldRenderer: renderTextField,\n  isRequiredField: true\n}, {\n  name: CODE,\n  label: i18n.t('Code'),\n  fieldRenderer: renderTextField\n}, {\n  name: USERS,\n  fieldRenderer: renderSearchableGroupEditor,\n  isRequiredField: true,\n  initialItemsSelector: group => asArray(group[USERS]),\n  availableItemsQuery: 'getManagedUsers',\n  availableItemsLabel: i18n.t('Available users'),\n  assignedItemsLabel: i18n.t('Group members')\n}, {\n  name: MANAGED_GROUPS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: group => asArray(group[MANAGED_GROUPS]),\n  availableItemsQuery: 'getAvailableUserGroups',\n  availableItemsLabel: i18n.t('Available user groups'),\n  assignedItemsLabel: i18n.t('Managed user groups')\n}];","/**\n * A collection of selector functions that return derived state slices. Results are memoized where possible.\n * @module selectors\n */\nimport memoize from 'lodash.memoize';\nimport isUndefined from 'lodash.isundefined';\nimport i18n from '@dhis2/d2-i18n';\nimport { USER_PROPS, USER_CRED_PROPS, INTERFACE_LANGUAGE, DATABASE_LANGUAGE, INVITE, INVITE_USER, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, SET_PASSWORD } from '../containers/UserForm/config';\nimport { getFields as getUserGroupFields } from '../containers/GroupForm/config';\nimport asArray from '../utils/asArray';\nimport getNestedProp from '../utils/getNestedProp';\n/**\n * @param {Object} pager - A d2 Pager instance\n * @returns {Object} The d2 Pager instance with an appended 'currentlyShown' property\n * @function\n */\n\nexport const pagerSelector = memoize(pager => {\n  if (pager === null) {\n    return pager;\n  }\n\n  const {\n    total,\n    pageCount,\n    page,\n    query: {\n      pageSize\n    }\n  } = pager;\n  const pageCalculationValue = total - (total - (pageCount - (pageCount - page)) * pageSize);\n  const startItem = 1 + pageCalculationValue - pageSize;\n  const endItem = pageCalculationValue;\n  pager.currentlyShown = `${startItem} - ${endItem > total ? total : endItem}`;\n  return pager;\n});\n/**\n * @param {Object} list - A d2 list ModelCollection instance\n * @param {Object} [groupMemberships] - An array of groupMembership IDs (userGroup only)\n * @returns {Array} An array of d2 model instances with properties appended for use in the List component\n * @function\n */\n\nexport const listSelector = (list, groupMemberships) => {\n  if (!list || typeof list === 'string') {\n    return list;\n  }\n\n  const listType = list.modelDefinition.name;\n  return list.toArray().map(item => listMappings[listType](item, groupMemberships));\n};\nconst listMappings = {\n  user: item => {\n    item.userName = item.userCredentials.username;\n    item.disabled = item.userCredentials.disabled;\n    item.lastLogin = item.userCredentials.lastLogin;\n    return item;\n  },\n  userRole: item => item,\n  userGroup: (item, groupMemberships) => {\n    item.currentUserIsMember = groupMemberships.includes(item.id);\n    return item;\n  }\n};\n/**\n * @param {Object} orgUnits - an array of d2 organisation unit instances\n * @returns {String} Either a comma delimited list of organisation unit names, or a count of selected organisation units phrase\n * @function\n */\n\nexport const orgUnitsAsStringSelector = memoize(orgUnits => {\n  return orgUnits.length < 3 ? orgUnits.map(unit => unit.displayName).join(', ') : i18n.t('{{count}} selected', {\n    count: orgUnits.length\n  });\n});\n\nconst addInitialValueFrom = (sourceObject, initialValues, propName) => {\n  if (propName === DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS) {\n    initialValues[propName] = [...sourceObject.catDimensionConstraints, ...sourceObject.cogsDimensionConstraints];\n  } else if (sourceObject[propName] && !isUndefined(sourceObject[propName].size) || Array.isArray(sourceObject[propName])) {\n    initialValues[propName] = asArray(sourceObject[propName]).map(({\n      id\n    }) => id);\n  } else {\n    initialValues[propName] = sourceObject[propName];\n  }\n};\n/**\n * Produces initial values for redux form\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @param {Object} locales - Contains available and selected locales for the UI and DB\n * @returns {Object} Initial values for the redux form wrapping the UserForm component\n * @function\n */\n\n\nexport const userFormInitialValuesSelector = memoize((user, locales, attributeFields) => {\n  const initialValues = {\n    [INVITE]: SET_PASSWORD\n  };\n\n  if (user.id) {\n    USER_PROPS.forEach(propName => {\n      addInitialValueFrom(user, initialValues, propName);\n    });\n    USER_CRED_PROPS.forEach(propName => {\n      addInitialValueFrom(user.userCredentials, initialValues, propName);\n    });\n    attributeFields.forEach(field => initialValues[field.name] = field.value);\n  } // 'en' is a fallback for systems that have no default system UI locale specified\n\n\n  initialValues[INTERFACE_LANGUAGE] = locales.ui.selected || 'en';\n  initialValues[DATABASE_LANGUAGE] = locales.db.selected;\n  return initialValues;\n});\nexport const userGroupFormInitialValuesSelector = memoize((userGroup, attributeFields) => {\n  const initialValues = {};\n  getUserGroupFields().forEach(field => {\n    addInitialValueFrom(userGroup, initialValues, field.name);\n  });\n  attributeFields.forEach(field => initialValues[field.name] = field.value);\n  return initialValues;\n});\n/**\n * Used to combine cat and cog dimension restrictions into a single array\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @returns {Object} An array of cat and cog IDs\n * @function\n */\n\nexport const analyticsDimensionsRestrictionsSelector = memoize(user => {\n  const catConstraints = asArray(getNestedProp('userCredentials.catDimensionConstraints', user));\n  const cogsConstraints = asArray(getNestedProp('userCredentials.cogsDimensionConstraints', user));\n  return [...catConstraints, ...cogsConstraints];\n});\n/**\n * A short item is a basic version of state.currentItem, derived from a list.\n * It is used to display basic information in a FormLoader or DetailSummary component\n * while the full version of the currentItem is being fetched.\n * @param {String} id - The id of the model selected in a list\n * @param {Object} list - A d2  model collection instance instance (state.list)\n * @returns {Object} A d2 model instance containing only a few basic properties\n * @function\n */\n\nexport const shortItemSelector = memoize((id, list) => {\n  if (!list || !id) {\n    return null;\n  }\n\n  return list.get(id);\n});\n/**\n * Organisation unit trees should have different roots depending on the context.\n * @param {String} orgUnitType - The type orgUnits to return\n * @param {Object} currentUser - state.currentUser\n * @returns {Array|null} The roots of the organisation unit tree to be displayed\n * @function\n */\n\nexport const orgUnitRootsSelector = (orgUnitType, currentUser) => {\n  const systemOrgRoots = currentUser.systemOrganisationUnitRoots;\n  const requestedOrgUnitRoots = currentUser[orgUnitType];\n  const fallBackOrgUnitRoots = currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS];\n  let orgUnitRoots = null;\n\n  if (currentUser.authorities.has('ALL')) {\n    orgUnitRoots = systemOrgRoots;\n  } else if (requestedOrgUnitRoots.size === 0) {\n    orgUnitRoots = fallBackOrgUnitRoots.toArray();\n  } else if (fallBackOrgUnitRoots.size > 0) {\n    orgUnitRoots = fallBackOrgUnitRoots.toArray();\n  }\n\n  return orgUnitRoots;\n};\n/**\n * The redux form `formValueSelector` was returning incorrect values,\n * so this selector was born.\n * @param {Object} formState - state.form.userForm\n * @returns {Boolean} - True if select box was switched to 'Invite user'\n * @function\n */\n\nexport const inviteUserValueSelector = formState => {\n  const fields = formState && formState.registeredFields;\n  const values = formState && formState.values;\n  const isRenderedField = Boolean(fields && fields[INVITE]);\n  const fieldValue = isRenderedField && values && values[INVITE];\n  return fieldValue === INVITE_USER;\n};","import { blue600 } from 'material-ui/styles/colors';\nimport asArray from '../../utils/asArray';\nimport i18n from '@dhis2/d2-i18n';\nimport getNestedProp from '../../utils/getNestedProp';\nimport { analyticsDimensionsRestrictionsSelector } from '../../selectors';\nimport { renderTextField, renderCheckbox, renderSelectField, renderSearchableGroupEditor, renderSearchableOrgUnitTree, renderText } from '../../utils/fieldRenderers';\nexport const STYLES = {\n  loaderWrap: {\n    paddingTop: '2rem',\n    textAlign: 'center'\n  },\n  toggler: {\n    color: blue600\n  },\n  orgUnitTree: {\n    width: 'calc(50% - 60px)',\n    float: 'left',\n    minHeight: '100px',\n    maxHeight: '1200px'\n  },\n  togglerWrap: {\n    clear: 'both',\n    paddingTop: '1.2rem',\n    marginBottom: '1.5rem'\n  },\n  additionalFieldsWrap: {\n    clear: 'both',\n    paddingTop: '1.5rem'\n  }\n};\nexport const FORM_NAME = 'userForm';\nexport const USERNAME = 'username';\nexport const EMAIL = 'email';\nexport const DISABLED = 'disabled';\nexport const INVITE = 'inviteUser';\nexport const EXTERNAL_AUTH = 'externalAuth';\nexport const PASSWORD = 'password';\nexport const REPEAT_PASSWORD = 'repeatPassword';\nexport const SURNAME = 'surname';\nexport const FIRST_NAME = 'firstName';\nexport const OPEN_ID = 'openId';\nexport const LDAP_ID = 'ldapId';\nexport const PHONE_NUMBER = 'phoneNumber';\nexport const INTERFACE_LANGUAGE = 'interfaceLanguage';\nexport const DATABASE_LANGUAGE = 'databaseLanguage';\nexport const ASSIGNED_ROLES = 'userRoles';\nexport const DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS = 'organisationUnits';\nexport const DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS = 'dataViewOrganisationUnits';\nexport const TEI_SEARCH_ORG_UNITS = 'teiSearchOrganisationUnits';\nexport const ASSIGNED_USER_GROUPS = 'userGroups';\nexport const DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS = 'catCogsDimensionConstraints';\nexport const WHATS_APP = 'whatsApp';\nexport const FACEBOOK_MESSENGER = 'facebookMessenger';\nexport const SKYPE = 'skype';\nexport const TELEGRAM = 'telegram';\nexport const TWITTER = 'twitter';\nexport const USER_PROPS = [SURNAME, FIRST_NAME, EMAIL, PHONE_NUMBER, WHATS_APP, FACEBOOK_MESSENGER, SKYPE, TELEGRAM, TWITTER, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS, ASSIGNED_USER_GROUPS, TEI_SEARCH_ORG_UNITS];\nexport const USER_CRED_PROPS = [USERNAME, DISABLED, EXTERNAL_AUTH, PASSWORD, OPEN_ID, LDAP_ID, ASSIGNED_ROLES, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS];\nexport const ALWAYS_REQUIRED = 'ALWAYS_REQUIRED';\nexport const INVITE_REQUIRED = 'INVITE_REQUIRED';\nexport const CREATE_REQUIRED = 'CREATE_REQUIRED';\nexport const USE_DB_LOCALE = 'use_db_locale';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const INVITE_USER = 'INVITE_USER';\n\nconst getBaseCaption = () => ({\n  label: i18n.t('Selecting an organisation unit provides access to all units in the sub-hierarchy'),\n  fieldRenderer: renderText,\n  style: {\n    clear: 'both',\n    paddingTop: '0.8rem',\n    fontStyle: 'italic',\n    fontSize: '0.9rem'\n  }\n});\n\nexport const getInviteFields = () => [{\n  name: INVITE,\n  label: i18n.t('Create account or email invitation'),\n  fieldRenderer: renderSelectField,\n  options: [{\n    id: SET_PASSWORD,\n    label: i18n.t('Create account with user details')\n  }, {\n    id: INVITE_USER,\n    label: i18n.t('Email invitation to create account')\n  }],\n  props: {\n    style: {// backgroundColor: 'rgb(110,188,253)',\n    }\n  }\n}];\nexport const getBaseFields = () => [{\n  name: USERNAME,\n  label: i18n.t('Username'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED\n}, {\n  name: EMAIL,\n  label: i18n.t('E-mail'),\n  fieldRenderer: renderTextField,\n  isRequiredField: INVITE_REQUIRED\n}, {\n  name: EXTERNAL_AUTH,\n  label: i18n.t('External authentication only (OpenID or LDAP)'),\n  fieldRenderer: renderCheckbox\n}, {\n  name: DISABLED,\n  label: i18n.t('Disabled'),\n  fieldRenderer: renderCheckbox\n}, {\n  name: PASSWORD,\n  label: i18n.t('Password'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED,\n  props: {\n    type: 'password',\n    autoComplete: 'new-password'\n  }\n}, {\n  name: REPEAT_PASSWORD,\n  label: i18n.t('Retype password'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED,\n  props: {\n    type: 'password',\n    autoComplete: 'new-password'\n  }\n}, {\n  name: SURNAME,\n  label: i18n.t('Surname'),\n  isRequiredField: ALWAYS_REQUIRED,\n  fieldRenderer: renderTextField\n}, {\n  name: FIRST_NAME,\n  label: i18n.t('First name'),\n  isRequiredField: ALWAYS_REQUIRED,\n  fieldRenderer: renderTextField\n}, {\n  name: OPEN_ID,\n  label: i18n.t('OpenID'),\n  fieldRenderer: renderTextField\n}, {\n  name: LDAP_ID,\n  label: i18n.t('LDAP identifier'),\n  fieldRenderer: renderTextField\n}, {\n  name: PHONE_NUMBER,\n  label: i18n.t('Mobile phone number'),\n  fieldRenderer: renderTextField\n}, {\n  name: WHATS_APP,\n  label: i18n.t('WhatsApp'),\n  fieldRenderer: renderTextField\n}, {\n  name: FACEBOOK_MESSENGER,\n  label: i18n.t('Facebook Messenger'),\n  fieldRenderer: renderTextField\n}, {\n  name: SKYPE,\n  label: i18n.t('Skype'),\n  fieldRenderer: renderTextField\n}, {\n  name: TELEGRAM,\n  label: i18n.t('Telegram'),\n  fieldRenderer: renderTextField\n}, {\n  name: TWITTER,\n  label: i18n.t('Twitter'),\n  fieldRenderer: renderTextField\n}, {\n  name: INTERFACE_LANGUAGE,\n  label: i18n.t('Interface language'),\n  fieldRenderer: renderSelectField,\n  optionsSelector: 'locales.ui.available',\n  isRequiredField: ALWAYS_REQUIRED\n}, {\n  name: DATABASE_LANGUAGE,\n  label: i18n.t('Database language'),\n  fieldRenderer: renderSelectField,\n  optionsSelector: 'locales.db.available',\n  isRequiredField: ALWAYS_REQUIRED\n}, {\n  name: ASSIGNED_ROLES,\n  fieldRenderer: renderSearchableGroupEditor,\n  isRequiredField: ALWAYS_REQUIRED,\n  initialItemsSelector: user => asArray(getNestedProp('userCredentials.userRoles', user) || []),\n  availableItemsQuery: 'getAvailableUserRoles',\n  availableItemsLabel: i18n.t('Available roles'),\n  assignedItemsLabel: i18n.t('Selected roles')\n}, {\n  name: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n  label: i18n.t('Data capture and maintenance organisation units'),\n  isRequiredField: ALWAYS_REQUIRED,\n  orgUnitType: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingRight: '60px'\n  }\n}, {\n  name: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n  label: i18n.t('Data output and analytic organisation units'),\n  orgUnitType: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingLeft: '60px'\n  }\n}, { ...getBaseCaption(),\n  name: 'org_unit_info_1'\n}];\nexport const getAdditionalFields = () => [{\n  name: TEI_SEARCH_ORG_UNITS,\n  label: i18n.t('Search Organisation Units'),\n  orgUnitType: TEI_SEARCH_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingRight: '60px'\n  }\n}, { ...getBaseCaption(),\n  name: 'org_unit_info_2'\n}, {\n  name: ASSIGNED_USER_GROUPS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: user => asArray(user.userGroups) || [],\n  availableItemsQuery: 'getAvailableUserGroups',\n  availableItemsLabel: i18n.t('Available user groups'),\n  assignedItemsLabel: i18n.t('Selected user groups')\n}, {\n  name: DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: user => analyticsDimensionsRestrictionsSelector(user),\n  availableItemsQuery: 'getAvailableDataAnalyticsDimensionRestrictions',\n  availableItemsLabel: i18n.t('Available dimension restrictions for data analytics'),\n  assignedItemsLabel: i18n.t('Selected dimension restrictions for data analytics'),\n  returnModelsOnUpdate: true\n}];","export const USER = 'user';\nexport const USER_ROLE = 'userRole';\nexport const USER_GROUP = 'userGroup';","import i18n from '@dhis2/d2-i18n';\nimport { PASSWORD, REPEAT_PASSWORD } from '../containers/UserForm/config';\nconst EMAIL_ADDRESS_PATTERN = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\nconst INTERNATIONAL_PHONE_NUMBER_PATTERN = /^\\+(?:[0-9].?){4,14}[0-9]$/;\nconst DATE_PATTERN = /[0-9]{4}-[0-9]{2}-[0-9]{2}/;\nconst LOWER_CASE_PATTERN = /^(?=.*[a-z]).+$/;\nconst UPPER_CASE_PATTERN = /^(?=.*[A-Z]).+$/;\nconst DIGIT_PATTERN = /^(?=.*[0-9]).+$/; // Using this regex to match all non-alphanumeric characters to match server-side implementation\n// https://github.com/dhis2/dhis2-core/blob/master/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/SpecialCharacterValidationRule.java#L39\n\nconst SPECIAL_CHARACTER_PATTERN = /[^a-zA-Z0-9]/; // validators (ordered alphabetically)\n\nexport function code(value) {\n  if (hasValue(value) && value.length > 50) {\n    return i18n.t('Exceeds maximum character limit of 50');\n  }\n}\nexport function date(value) {\n  if (hasValue(value) && !DATE_PATTERN.test(value)) {\n    return i18n.t('Please enter a valid date with the following format yyyy-mm-dd');\n  }\n}\nexport function email(value) {\n  if (hasValue(value) && !EMAIL_ADDRESS_PATTERN.test(value.toLowerCase())) {\n    return i18n.t('Please provide a valid email address');\n  }\n}\nexport function integer(value) {\n  if (hasValue(value) && !isInteger(value)) {\n    return i18n.t('Value should be an integer');\n  }\n}\nexport function negativeInteger(value) {\n  if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) >= 0)) {\n    return i18n.t('Value should be a nagative integer');\n  }\n}\nexport function number(value) {\n  if (hasValue(value) && isNaN(value)) {\n    return i18n.t('Value should be a number');\n  }\n}\nexport function password(value, allValues, props) {\n  if (!shouldValidatePassword(allValues, props)) {\n    return undefined;\n  }\n\n  const passwordError = checkPasswordForErrors(allValues[PASSWORD]);\n\n  if (passwordError) {\n    return passwordError;\n  }\n}\nexport function positiveInteger(value) {\n  if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) <= 0)) {\n    return i18n.t('Value should be a positive integer');\n  }\n}\nexport function repeatPassword(value, allValues) {\n  if (allValues[REPEAT_PASSWORD] !== allValues[PASSWORD]) {\n    return i18n.t('Passwords do not match');\n  }\n}\nexport function required(value) {\n  return !hasValue(value) ? i18n.t('This field is required') : undefined;\n}\nexport function requiredArray(value) {\n  if (!(Array.isArray(value) && value.length > 0)) {\n    return i18n.t('This field is required. Please select at least one');\n  }\n}\nexport function username(value) {\n  if (hasValue(value) && value.length < 2) {\n    return i18n.t('A username should be at least 2 characters long');\n  }\n\n  if (hasValue(value) && value.length > 140) {\n    return i18n.t('Username may not exceed 140 characters');\n  }\n}\nexport function whatsApp(value) {\n  if (hasValue(value) && !INTERNATIONAL_PHONE_NUMBER_PATTERN.test(value)) {\n    return i18n.t('Please provide a valid international phone number (+0123456789)');\n  }\n} // Helpers\n\n/**\n * Tests if a given password is compliant with the password restrictions. This function checks all restrictions below, but returns when the first violation was found:\n * - At least 8 characters\n * - No more than 34 characters\n * - Contains at least 1 lowercase character\n * - Contains at least 1 UPPERCASE character\n * - Contains at least 1 number\n * - Contains at least 1 special character\n * @param {String} password\n * @return {null|String} Null if password is OK, otherwise an error message\n * @memberof module:utils\n * @function\n */\n\nfunction checkPasswordForErrors(password) {\n  if (!hasValue(password)) {\n    return i18n.t('This field is required');\n  }\n\n  if (password.length < 8) {\n    return i18n.t('Password should be at least 8 characters long');\n  }\n\n  if (password.length > 35) {\n    return i18n.t('Password should be no longer than 34 characters');\n  }\n\n  if (!LOWER_CASE_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one lowercase letter');\n  }\n\n  if (!UPPER_CASE_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one UPPERCASE letter');\n  }\n\n  if (!DIGIT_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one number');\n  }\n\n  if (!SPECIAL_CHARACTER_PATTERN.test(password)) {\n    return i18n.t('Password should have at least one special character');\n  }\n\n  return null;\n}\n\nfunction isInteger(value) {\n  if (isNaN(value)) {\n    return false;\n  }\n\n  const x = parseFloat(value);\n  return (x | 0) === x;\n}\n\nfunction shouldValidatePassword(allValues, props) {\n  if (props.inviteUser) {\n    return false;\n  }\n\n  const isEditingUser = Boolean(props.user.id);\n  const isEmptyOnEdit = isEditingUser && !allValues[PASSWORD] && !allValues[REPEAT_PASSWORD];\n  return isEmptyOnEdit ? false : true;\n}\n\nfunction hasValue(value) {\n  return typeof value !== 'undefined' && value !== null && value !== '';\n}","const notADateValue = 'not-a-date';\nlet hasDateInputSupport;\nexport default function browserHasDateInputSupport() {\n  // Return cached result if available\n  if (typeof hasDateInputSupport !== 'undefined') {\n    return hasDateInputSupport;\n  }\n\n  let input = document.createElement('input');\n  input.setAttribute('type', 'date');\n  input.setAttribute('value', notADateValue); // Cache result\n\n  hasDateInputSupport = input.value !== notADateValue;\n  input = null;\n  return hasDateInputSupport;\n}","import i18n from '@dhis2/d2-i18n';\nimport { renderTextField, renderCheckbox, renderSelectField } from './fieldRenderers';\nimport { number, integer, positiveInteger, negativeInteger, date } from './validators';\nimport browserHasDateInputSupport from './browserHasDateInputSupport';\nexport const USER_ATTRIBUTE_FIELD_PREFIX = 'userAttibute_';\nexport const NO_VALUE_OPTION = 'no_value';\n/**************************************************************************\n    Attributes can be either based on an optionSet, or based on a valueType.\n    Attributes based on optionSets are supported.\n    Attributes based on valueTypes are partially supported, see below:\n        [X] TEXT\n        [X] LONG_TEXT\n        [ ] LETTER\n        [ ] PHONE_NUMBER\n        [ ] EMAIL\n        [X] BOOLEAN\n        [X] TRUE_ONLY\n        [X] DATE\n        [ ] DATETIME\n        [ ] TIME\n        [X] NUMBER\n        [ ] UNIT_INTERVAL\n        [ ] PERCENTAGE\n        [X] INTEGER\n        [X] INTEGER_POSITIVE\n        [X] INTEGER_NEGATIVE\n        [ ] INTEGER_ZERO_OR_POSITIVE\n        [ ] TRACKER_ASSOCIATE\n        [ ] USERNAME\n        [ ] COORDINATE\n        [ ] ORGANISATION_UNIT\n        [ ] AGE\n        [ ] URL\n        [ ] FILE_RESOURCE\n        [ ] IMAGE\n****************************************************************************/\n\nexport function generateAttributeFields(attributes, userAttributeValues) {\n  return attributes.map(attribute => generateAttributeField(attribute, userAttributeValues));\n}\nexport function addUniqueAttributesToAsyncBlurFields(attributeFields, asyncBlurFields) {\n  attributeFields.forEach(({\n    shouldBeUnique,\n    name\n  }) => {\n    if (shouldBeUnique) {\n      // It seems hacky to push to props, but seems to be the way to do it:\n      // https://github.com/erikras/redux-form/issues/708#issuecomment-191446641\n      asyncBlurFields.push(name);\n    }\n  });\n}\nexport function parseAttributeValues(values, attributeFields) {\n  const fieldTypeLookup = attributeFields.reduce((lookup, {\n    attributeId,\n    valueType\n  }) => {\n    lookup[attributeId] = valueType;\n    return lookup;\n  }, {});\n  return Object.keys(values).reduce((attributeValues, key) => {\n    const isUserAttribute = key.indexOf(USER_ATTRIBUTE_FIELD_PREFIX) !== -1;\n\n    if (isUserAttribute) {\n      const id = key.replace(USER_ATTRIBUTE_FIELD_PREFIX, '');\n      const value = values[key];\n      const isClearedTrueOnlyField = fieldTypeLookup[id] === 'TRUE_ONLY' && !value;\n      const isClearedOptionalDropDown = value === NO_VALUE_OPTION;\n\n      if (!isClearedTrueOnlyField && !isClearedOptionalDropDown) {\n        attributeValues.push({\n          value: value,\n          attribute: {\n            id: id\n          }\n        });\n      }\n    }\n\n    return attributeValues;\n  }, []);\n}\n\nconst createValueTypeMapping = () => ({\n  OPTION_SET: {\n    fieldRenderer: renderSelectField\n  },\n  TEXT: {\n    fieldRenderer: renderTextField\n  },\n  LONG_TEXT: {\n    fieldRenderer: renderTextField,\n    props: {\n      multiLine: true,\n      rows: 3,\n      rowsMax: 6\n    }\n  },\n  DATE: {\n    fieldRenderer: renderTextField,\n    props: {\n      type: 'date',\n      // If browser supports <input type=\"date\"/>, the label should always float above the input\n      // because the date input has some text that overlaps with the hintText\n      floatingLabelFixed: browserHasDateInputSupport(),\n      hintText: null\n    },\n    fieldValidators: [date]\n  },\n  BOOLEAN: {\n    fieldRenderer: renderSelectField,\n    props: {\n      options: [{\n        id: 'true',\n        label: i18n.t('Yes')\n      }, {\n        id: 'false',\n        label: i18n.t('No')\n      }]\n    }\n  },\n  TRUE_ONLY: {\n    fieldRenderer: renderCheckbox\n  },\n  NUMBER: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [number]\n  },\n  INTEGER: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [integer]\n  },\n  INTEGER_POSITIVE: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [positiveInteger]\n  },\n  INTEGER_NEGATIVE: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [negativeInteger]\n  }\n});\n\nconst getValueTypeMapping = (() => {\n  let valueTypeMapping = null;\n  return () => {\n    if (!valueTypeMapping) {\n      valueTypeMapping = createValueTypeMapping();\n    }\n\n    return valueTypeMapping;\n  };\n})();\n\nfunction generateAttributeField({\n  id,\n  valueType,\n  displayName,\n  mandatory,\n  unique,\n  optionSet\n}, userAttributeValues) {\n  const userAttribute = userAttributeValues && userAttributeValues.find(attributeValue => attributeValue.attribute.id === id);\n  const valueTypeProps = getValueTypeProps(valueType, optionSet, mandatory);\n  return {\n    name: USER_ATTRIBUTE_FIELD_PREFIX + id,\n    isAttributeField: true,\n    label: displayName,\n    isRequiredField: mandatory,\n    shouldBeUnique: unique,\n    attributeId: id,\n    value: userAttribute && userAttribute.value || null,\n    valueType,\n    ...valueTypeProps\n  };\n}\n\nfunction getValueTypeProps(valueType, optionSet, mandatory) {\n  const valueTypeMapping = getValueTypeMapping(); // Attributes based on an option-set have TEXT as their valueType but need to render a select/dropdown with the options\n\n  const valueTypeProps = optionSet ? { ...valueTypeMapping.OPTION_SET,\n    props: {\n      options: optionSet.options.map(option => ({\n        id: option.id,\n        label: option.displayName\n      }))\n    }\n  } : // Use valueTypeMapping.TEXT as fallback field renderer.\n  // This way all attributes will always be editable, albeit not necesarrily enforcing the correct formatting\n  valueTypeMapping[valueType] || valueTypeMapping.TEXT; // Optional dropdown fields need a way to be cleared, so we create an empty option\n\n  if (valueTypeProps.fieldRenderer === renderSelectField && !mandatory && valueTypeProps.props.options[0].id !== NO_VALUE_OPTION) {\n    valueTypeProps.props.options = [{\n      id: NO_VALUE_OPTION,\n      label: i18n.t('<No value>')\n    }, ...valueTypeProps.props.options];\n  }\n\n  return valueTypeProps;\n}","/* eslint-disable max-params */\n\n/**\n * This module includes helper functions used by the API class\n * @module Api/utils\n */\nimport snakeCase from 'lodash.snakecase';\nimport isUndefined from 'lodash.isundefined';\nimport store from '../store';\nimport { PAGE as DEFAULT_PAGE, PAGE_SIZE as DEFAULT_PAGE_SIZE } from '../constants/defaults';\nimport FIELDS from '../constants/queryFields';\nimport { USER_PROPS, USER_CRED_PROPS, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, PASSWORD, REPEAT_PASSWORD, EXTERNAL_AUTH } from '../containers/UserForm/config';\nimport { USER } from '../constants/entityTypes';\nimport { parseAttributeValues } from '../utils/attributeFieldHelpers';\n/**\n * Helper function that produces a \"fields\" array used in the api request payload\n * @param {String} entityName - \"user\" \"userRole\" or \"userGroup\"\n * @param {Boolean} detailFields - Should be true if caller want to get field\n * @return {Array} An array of fields/properties that should be included in the api response\n * @function\n */\n\nexport const getQueryFields = (entityName, detailFields) => {\n  const formattedEntityName = snakeCase(entityName).toUpperCase();\n  const varName = detailFields ? `${formattedEntityName}_DETAILS` : `${formattedEntityName}_LIST`;\n  return FIELDS[varName];\n};\n/**\n * Helper function that prepares the request payload for a getList api call.\n * Combines the\n * @param {Number} page - The page number that should be requested\n * @param {Object} filter - Parameters to filter the result set with on the server\n * @param {Array} fields - Properties that should be returned for each object\n * @returns {Object} A valid request payload for api list calls\n * @function\n */\n\nexport const createListRequestData = (page = DEFAULT_PAGE, filter, fields, entityName, currentUser) => {\n  const {\n    query,\n    inactiveMonths,\n    selfRegistered,\n    invitationStatus,\n    organisationUnits\n  } = filter;\n  const requestData = {\n    pageSize: DEFAULT_PAGE_SIZE,\n    fields,\n    page,\n    order: entityName === USER ? ['firstName:asc', 'surname:asc'] : 'name:asc'\n  };\n\n  if (entityName === USER && !isSuperUser(currentUser)) {\n    requestData.userOrgUnits = true;\n    requestData.includeChildren = true;\n  }\n\n  if (query) requestData.query = query;\n  if (inactiveMonths) requestData.inactiveMonths = inactiveMonths;\n  if (selfRegistered) requestData.selfRegistered = selfRegistered;\n  if (invitationStatus) requestData.invitationStatus = invitationStatus;\n\n  if (organisationUnits.length) {\n    const ids = organisationUnits.map(unit => unit.id).join();\n    requestData.filter = `organisationUnits.id:in:[${ids}]`;\n  }\n\n  return requestData;\n};\n\nconst isSuperUser = ({\n  authorities\n}) => authorities.has('ALL');\n\nconst addValueAsProp = (data, value, propName) => {\n  if (!isUndefined(value)) {\n    data[propName] = Array.isArray(value) ? value.map(id => ({\n      id\n    })) : value;\n  }\n};\n/**\n * This function prepares a the payload object used for saving a user\n * @param {Object} values - Key-value with form values produced by redux-form\n * @param {Object} user - D2 user model instance\n * @returns {Object}  Object that may be PUT/POSTed to the server to save a user\n * @function\n */\n\n\nexport const parseUserSaveData = (values, user, inviteUser, attributeFields) => {\n  const isNewUser = !user.id;\n  const userModelOwnedProperties = user.modelDefinition.getOwnedPropertyNames();\n  const data = isNewUser ? {\n    userCredentials: {\n      cogsDimensionConstraints: [],\n      catDimensionConstraints: []\n    }\n  } : {\n    id: user.id,\n    userCredentials: {\n      id: user.userCredentials && user.userCredentials.id,\n      userInfo: {\n        id: user.id\n      },\n      cogsDimensionConstraints: [],\n      catDimensionConstraints: []\n    }\n  };\n  const cred = data.userCredentials; // catCogsDimensionConstraints are combined into a single input component,\n  // but need to be stored separately\n\n  if (Array.isArray(values.catCogsDimensionConstraints)) {\n    values.catCogsDimensionConstraints.forEach(constraint => {\n      if (constraint.dimensionType === 'CATEGORY_OPTION_GROUP_SET') {\n        cred.cogsDimensionConstraints.push({\n          id: constraint.id\n        });\n      } else {\n        cred.catDimensionConstraints.push({\n          id: constraint.id\n        });\n      }\n    });\n  }\n\n  USER_PROPS.forEach(propName => addValueAsProp(data, values[propName], propName));\n  USER_CRED_PROPS.forEach(propName => addValueAsProp(cred, values[propName], propName));\n  data.attributeValues = parseAttributeValues(values, attributeFields); // This property was appended to the model by hand but needs to be removed before saving the user\n\n  delete cred[DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS];\n\n  if (inviteUser || values[EXTERNAL_AUTH]) {\n    delete cred[PASSWORD];\n    delete cred[REPEAT_PASSWORD];\n  } // Because the data object is used as the payload of a PUT request, properties that are omitted will be removed\n  // To prevent this, all remaining owned properties are copied from the user to the data object\n  // This is only required when editing users, because new users can't have such properties\n\n\n  if (!isNewUser) {\n    for (const ownedPropName of userModelOwnedProperties) {\n      if (user[ownedPropName] && !(ownedPropName in data)) {\n        data[ownedPropName] = user[ownedPropName];\n      }\n    }\n  }\n\n  return data;\n};\nexport const parseLocaleUrl = (type, username, val) => {\n  return `/userSettings/key${type}Locale?user=${username}&value=${val}`;\n};\nexport const mapLocale = ({\n  locale,\n  name\n}) => {\n  return {\n    id: locale,\n    label: name\n  };\n};\n/**\n * When querying the server for organisation units that match a certain query string, the server returns all units from the system root.\n * However, the current user should only be able to see organisation units that he has access to.\n * @param {Object} orgUnits - A d2 ModelCollection instance of organisation units which has been filtered on the server by a query string\n * @param {*} orgUnitType - The type of organisation unit that should be used to restrict the results by\n * @returns {Array} - An filtered array of d2 models only including organisation units that the current user has access to\n * @function\n */\n\nexport const getRestrictedOrgUnits = (orgUnits, orgUnitType) => {\n  const {\n    currentUser\n  } = store.getState(); // Superuser can always see all org units\n\n  if (currentUser.authorities.has('ALL')) {\n    return orgUnits.toArray();\n  } // Try the requested orgUnitType first and use currentUser.organisationUnits as fallback\n\n\n  const availableOrgUnits = currentUser[orgUnitType].size > 0 ? currentUser[orgUnitType] : currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS];\n  return orgUnits.toArray().filter(unit => {\n    const isAvailableUnit = Boolean(availableOrgUnits.get(unit.id));\n    const hasAvailableAncestor = !isAvailableUnit && unit.ancestors.toArray().some(ancestor => Boolean(availableOrgUnits.get(ancestor.id)));\n    return isAvailableUnit || hasAvailableAncestor;\n  });\n};\nexport const appendUsernameToDisplayName = user => {\n  const userName = user.userCredentials.username;\n  const displayName = `${user.displayName} (${userName})`;\n  return { ...user,\n    displayName\n  };\n};\nexport const parse200Error = response => {\n  const messages = [];\n\n  for (const typeReport of response.typeReports) {\n    for (const objectReport of typeReport.objectReports) {\n      for (const errorReport of objectReport.errorReports) {\n        messages.push({\n          message: errorReport.message\n        });\n      }\n    }\n  }\n\n  return {\n    messages\n  };\n};\nexport const getAttributesWithValueAndId = (userCollection, value, attributeId) => userCollection.toArray().reduce((list, user) => list.concat(user.attributeValues.filter(attributeValue => value === attributeValue.value && attributeId === attributeValue.attribute.id)), []);","/* eslint-disable max-params */\nimport i18n from '@dhis2/d2-i18n';\nimport { getQueryFields, createListRequestData, parseUserSaveData, parseLocaleUrl, getRestrictedOrgUnits, mapLocale, appendUsernameToDisplayName, parse200Error, getAttributesWithValueAndId } from './utils';\nimport { PAGE_SIZE as DEFAULT_PAGE_SIZE } from '../constants/defaults';\nimport groupAuthorities from '../components/AuthorityEditor/utils/groupAuthorities';\nimport { ORG_UNITS_QUERY_CONFIG, CURRENT_USER_ORG_UNITS_FIELDS } from '../constants/queryFields';\nimport { INTERFACE_LANGUAGE, DATABASE_LANGUAGE, USE_DB_LOCALE } from '../containers/UserForm/config';\nimport { USER_GROUP } from '../constants/entityTypes';\n/**\n * The Api class exposes all necessary functions to get the required data from the DHIS2 web api.\n */\n\nclass Api {\n  /**\n   * On instantiation d2 and the d2-api instance are attached to the this scope, so they are easily accessible by its members.\n   */\n  init(d2) {\n    this.d2 = d2;\n    this.d2Api = d2.Api.getApi(); // In development you can access d2 and d2Api via the console\n\n    if (process.env.NODE_ENV === 'development') {\n      window.d2 = this.d2;\n      window.d2Api = this.d2Api;\n    }\n  }\n  /**************************\n   ********* GENERIC ********\n   **************************/\n\n\n  getD2 = () => {\n    return this.d2;\n  };\n  getContextPath = () => {\n    return this.d2.system.systemInfo.contextPath;\n  };\n  getList = (entityName, page, filter) => {\n    const fields = getQueryFields(entityName);\n    const requestData = createListRequestData(page, filter, fields, entityName, this.getCurrentUser());\n    return this.d2.models[entityName].list(requestData);\n  };\n  getItem = (entityName, id) => {\n    const data = {\n      fields: getQueryFields(entityName, true)\n    };\n\n    if (entityName === USER_GROUP) {\n      return this.getUserGroupItem(entityName, id, data);\n    }\n\n    return this.d2.models[entityName].get(id, data);\n  };\n  getUserGroupItem = (entityName, id, data) => {\n    const modelDefinition = this.d2.models[entityName];\n    const url = `userGroups/${id}`;\n    return this.d2Api.get(url, data).then(response => {\n      return { ...response,\n        users: response.users.map(user => ({\n          id: user.id,\n          displayName: `${user.displayName} (${user.username})`\n        })),\n        modelDefinition\n      };\n    });\n  };\n  genericFind = (entityName, propertyName, value) => {\n    return this.d2.models[entityName].filter().on(propertyName).equals(value).list({\n      fields: ['id']\n    });\n  };\n  /**************************\n   ********* USERS **********\n   **************************/\n\n  replicateUser = (id, username, password) => {\n    const url = `/users/${id}/replica`;\n    const data = {\n      username,\n      password\n    };\n    return this.d2Api.post(url, data);\n  };\n  /**\n   * Fetches organisation units matching the query string from the server.\n   * Once the results are returned they are filtered client-side\n   * to only contain organisation units available to the current user.\n   * Used by SearchableOrgUnitTree in UserForm and UserList.\n   * @param {String} query - They search string to let the server query on\n   * @param {String} orgUnitType - The type of organisation unit to use for client side filtering\n   * @returns {Array} A filtered array of organisation units\n   */\n\n  queryOrgUnits = (query, orgUnitType) => {\n    const listConfig = { ...ORG_UNITS_QUERY_CONFIG,\n      query\n    };\n    return this.d2.models.organisationUnits.list(listConfig).then(orgUnits => getRestrictedOrgUnits(orgUnits, orgUnitType));\n  };\n  getAvailableUserRoles = (page, filterStr) => {\n    const data = {\n      canIssue: true,\n      fields: ['id', 'displayName'],\n      paging: true,\n      pageSize: DEFAULT_PAGE_SIZE,\n      page\n    };\n\n    if (filterStr) {\n      data.filter = `identifiable:token:${filterStr}`;\n    }\n\n    return this.d2Api.get('userRoles', data).then(({\n      userRoles,\n      pager\n    }) => ({\n      pager,\n      items: userRoles\n    }));\n  };\n  getAvailableDataAnalyticsDimensionRestrictions = (page, filterStr) => {\n    const url = '/dimensions/constraints';\n    const data = {\n      fields: ['id', 'name', 'dimensionType'],\n      paging: true,\n      pageSize: DEFAULT_PAGE_SIZE,\n      page\n    };\n\n    if (filterStr) {\n      data.filter = `identifiable:token:${filterStr}`;\n    }\n\n    return this.d2Api.get(url, data).then(({\n      pager,\n      dimensions\n    }) => ({\n      pager,\n      items: dimensions\n    }));\n  };\n  updateDisabledState = (id, disabled) => {\n    const url = `/users/${id}`;\n    const data = {\n      userCredentials: {\n        disabled: disabled\n      }\n    };\n    return this.d2Api.patch(url, data);\n  };\n  disable2FA = id => {\n    const url = `/users/${id}`;\n    const data = {\n      userCredentials: {\n        twoFA: false\n      }\n    };\n    return this.d2Api.patch(url, data);\n  };\n  getSelectedAndAvailableLocales = username => {\n    username = username ? encodeURIComponent(username) : null;\n    const useDbLocaleOption = {\n      id: USE_DB_LOCALE,\n      label: i18n.t('Use database locale / no translation')\n    };\n    const dbLocales = this.d2Api.get('/locales/db');\n    const uiLocales = this.d2Api.get('/locales/ui');\n    const uiLocale = username ? this.d2Api.get(`/userSettings/keyUiLocale?user=${username}`) : this.d2.system.settings.get('keyUiLocale');\n    const dbLocale = username ? this.d2Api.get(`/userSettings/keyDbLocale?user=${username}`) : Promise.resolve(USE_DB_LOCALE);\n    return Promise.all([dbLocales, uiLocales, dbLocale, uiLocale]).then(([dbLocales, uiLocales, dbLocale, uiLocale]) => ({\n      db: {\n        available: [useDbLocaleOption, ...dbLocales.map(mapLocale)],\n        selected: dbLocale || USE_DB_LOCALE\n      },\n      ui: {\n        available: uiLocales.map(mapLocale),\n        selected: uiLocale\n      }\n    }));\n  };\n\n  getAttributes(entityType) {\n    return this.d2Api.get('attributes', {\n      fields: ['id', 'displayName', 'mandatory', 'unique', 'valueType', 'optionSet[options[id,displayName]]'],\n      filter: `${entityType}Attribute:eq:true`,\n      paging: false\n    }).then(resp => resp.attributes);\n  }\n\n  isAttributeUnique(entityType, modelId, attributeId, value) {\n    return this.d2.models[entityType] // All users/userGroups but current\n    .filter().on('id').notEqual(modelId) // Attribute id being validated\n    // NB: this only means we are filtering users that have ANY value\n    // on the current attributeId\n    .filter().on('attributeValues.attribute.id').equals(attributeId) // Value on form\n    .filter().on('attributeValues.value').equals(value).list({\n      paging: false,\n      fields: ['id', 'attributeValues[value, attribute[id]]']\n    }).then(userCollection => {\n      // If no users are found at this point, the attribute value is definitely unique\n      if (userCollection.size === 0) {\n        return true;\n      } // If users are returned, this can still include records with the SAME value\n      // on ANOTHER attribute. So we have to filter on the current value and attributeId\n\n\n      const attributesWithValueAndId = getAttributesWithValueAndId(userCollection, value, attributeId);\n      return attributesWithValueAndId.length === 0;\n    });\n  }\n  /**\n   * Will first execute a create/update user request, and if any locale values have been set will add subsequent request to update these too.\n   * @param {Object} values - Form data produced by redux-form\n   * @param {Object} user - A d2 user model instance\n   * @param {String} initialUiLocale - Locale string for the UI, i.e. 'en'\n   * @param {String} initialDbLocale - Locale string for the DB, i.e. 'fr'\n   * @returns {Promise} Promise object for the combined ajax calls to save a user\n   * @method\n   */\n\n\n  saveOrInviteUser = (values, user, inviteUser, initialUiLocale, initialDbLocale, attributeFields) => {\n    const userData = parseUserSaveData(values, user, inviteUser, attributeFields);\n    const postUrl = inviteUser ? '/users/invite' : '/users';\n    const saveUserPromise = user.id ? this.d2Api.update(`/users/${user.id}`, userData) : this.d2Api.post(postUrl, userData);\n    return saveUserPromise.then(response => {\n      if (response.status === 'ERROR') {\n        return Promise.reject(parse200Error(response));\n      }\n\n      const localePromises = [];\n      const username = encodeURIComponent(values.username); // Add follow-up request for setting uiLocale if needed\n\n      const uiLocale = values[INTERFACE_LANGUAGE];\n\n      if (uiLocale !== initialUiLocale) {\n        localePromises.push(this.d2Api.post(parseLocaleUrl('Ui', username, uiLocale)));\n      } // Add follow-up request for setting dbLocale if needed\n\n\n      const dbLocale = values[DATABASE_LANGUAGE];\n\n      if (dbLocale !== initialDbLocale) {\n        const dbLocalePromise = dbLocale === USE_DB_LOCALE ? this.d2Api.delete(`/userSettings/keyDbLocale?user=${username}`) : this.d2Api.post(parseLocaleUrl('Db', username, dbLocale));\n        localePromises.push(dbLocalePromise);\n      } // Dummy follow-up request to prevent Promise.all error\n      // if neither locale fields need updating\n\n\n      if (localePromises.length === 0) {\n        localePromises.push(Promise.resolve('No locale changes detected'));\n      } // Updating locales after user in case the user is new\n\n\n      return Promise.all(localePromises);\n    });\n  };\n  /**************************\n   ***** USER GROUPS ********\n   **************************/\n\n  getManagedUsers = (page, filterStr) => {\n    const data = {\n      fields: ['id', 'displayName', 'userCredentials[username]'],\n      paging: true,\n      pageSize: DEFAULT_PAGE_SIZE,\n      page\n    };\n\n    if (filterStr) {\n      data.filter = `identifiable:token:${filterStr}`;\n    }\n\n    return this.d2Api.get('users', data).then(({\n      users,\n      pager\n    }) => ({\n      items: users.map(appendUsernameToDisplayName),\n      pager\n    }));\n  }; // Also used by GroupForm\n\n  getAvailableUserGroups = (page, filterStr) => {\n    const data = {\n      fields: ['id', 'displayName'],\n      paging: true,\n      pageSize: DEFAULT_PAGE_SIZE,\n      page\n    };\n\n    if (filterStr) {\n      data.filter = `identifiable:token:${filterStr}`;\n    }\n\n    return this.d2Api.get('userGroups', data).then(({\n      pager,\n      userGroups\n    }) => ({\n      pager,\n      items: userGroups\n    }));\n  };\n\n  saveUserGroup(dataWithModelDefinition) {\n    // We appended the modeldefinition to the group because it is needed\n    // by the sectionheader, but this is not a serialisable object and also\n    // not required for the POST/PUT call.\n    const data = Object.keys(dataWithModelDefinition).reduce((acc, key) => {\n      if (key !== 'modelDefinition') {\n        acc[key] = dataWithModelDefinition[key];\n      }\n\n      return acc;\n    }, {});\n    const isUpdate = !!data.id;\n\n    if (isUpdate) {\n      return this.d2Api.update(`userGroups/${data.id}`, data);\n    }\n\n    return this.d2Api.post('userGroups', data);\n  }\n  /**************************\n   ****** USER ROLES ********\n   **************************/\n  // TODO: A proper API endpoint will be made available for this call once ALL struts apps\n  // have been ported to React. Once this is done we need to update this method.\n\n\n  getGroupedAuthorities = () => {\n    if (this.groupedAuths) {\n      // Return cached version if available\n      return Promise.resolve(this.groupedAuths);\n    }\n\n    const url = `${this.getContextPath()}/dhis-web-commons/security/getSystemAuthorities.action`;\n    return this.d2Api.request('GET', url).then(({\n      systemAuthorities\n    }) => {\n      // Store on instance for subsequent requests\n      return this.groupedAuths = groupAuthorities(systemAuthorities);\n    });\n  }; // Calling role.save() would result in an error in d2 because d2 expects you always want to\n  // save { id: <ID> } objects but authorities should be saved as a plain JSON array\n\n  saveRole(data) {\n    if (data.id) {\n      return this.d2Api.update(`/userRoles/${data.id}`, data);\n    } else {\n      return this.d2Api.post('/userRoles/', data);\n    }\n  }\n  /**************************\n   ****** CURRENT USER ******\n   **************************/\n\n\n  getCurrentUser = () => {\n    return this.d2.currentUser;\n  };\n  getCurrentUserGroupsAndRoles = () => {\n    return this.d2Api.get('me', {\n      fields: 'userGroups[id],userCredentials[userRoles[id]]'\n    }).then(res => ({\n      userGroupIds: res.userGroups.map(({\n        id\n      }) => id),\n      userRoleIds: res.userCredentials.userRoles.map(({\n        id\n      }) => id)\n    }));\n  };\n  initCurrentUser = () => {\n    return Promise.all([this.getCurrentUserGroupsAndRoles(), this.getCurrentUserOrgUnits(), this.getSystemOrgUnitRoots()]).then(([{\n      userGroupIds,\n      userRoleIds\n    }, {\n      organisationUnits,\n      dataViewOrganisationUnits,\n      teiSearchOrganisationUnits\n    }, systemOrganisationUnitRoots]) => {\n      return Object.assign(this.d2.currentUser, {\n        userGroupIds,\n        userRoleIds,\n        organisationUnits,\n        dataViewOrganisationUnits,\n        teiSearchOrganisationUnits,\n        systemOrganisationUnitRoots\n      });\n    });\n  };\n  refreshCurrentUser = () => {\n    const CurrentUserClass = Object.getPrototypeOf(this.d2.currentUser).constructor;\n    const meFields = [':all', '!userGroups', '!organisationUnits', 'userCredentials[:all,!user,!userRoles]'];\n    const models = this.d2.models;\n    return Promise.all([this.d2Api.get('me', {\n      fields: meFields\n    }), this.d2Api.get('me/authorization'), this.d2Api.get('userSettings')]).then(([me, authorities, userSettings]) => {\n      this.d2.currentUser = CurrentUserClass.create(me, authorities, models, userSettings);\n      return this.initCurrentUser();\n    });\n  };\n  getCurrentUserOrgUnits = () => {\n    return this.d2.models.users.get(this.d2.currentUser.id, CURRENT_USER_ORG_UNITS_FIELDS);\n  };\n  getSystemOrgUnitRoots = () => {\n    return this.d2.models.organisationUnits.list({\n      paging: false,\n      level: 1,\n      fields: 'id,path,displayName,children::isNotEmpty'\n    }).then(modelCollection => {\n      return modelCollection.toArray();\n    });\n  };\n  updateCurrentUserGroupMembership = (groupId, deleteMembership) => {\n    const method = deleteMembership ? 'delete' : 'post';\n    const url = `/users/${this.d2.currentUser.id}/userGroups/${groupId}`;\n    return this.d2Api[method](url);\n  };\n}\n\nexport default new Api();","import { createHashHistory } from 'history';\n/**\n * Creates and exports an empty hash history object that will be used by the Router\n * This history object can be imported and addressed directly outside of components\n * For example, it is used by navigateTo in ../utils/index\n * @name history\n * @memberof module:utils\n */\n\nexport default createHashHistory();","/* eslint-disable max-params */\n\n/**\n * This module contains the actions that may be dispatched to reducers. Only functions that are out of the ordinary have been documented.\n * @module actions\n */\nimport * as ACTIONS from '../constants/actionTypes';\nimport { PAGE as DEFAULT_PAGE } from '../constants/defaults';\nimport api from '../api';\n/**\n * Convenience function for creating a redux action\n * @param {String} type - The action type\n * @param {any} payload - The action payload\n * @return {Object} - An action object with type and payload property\n * @function\n */\n\nconst createAction = (type, payload) => ({\n  type,\n  payload\n});\n/**********\n * THUNKS *\n **********/\n\n/**\n * Helper function for fetching lists. Used by getList, incrementPage and decrementPage.\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @param {Object} promise - The promise to await\n * @param {String} type - The type of list that was requested\n * @param {Boolean} silent - Flag by which dispatching the LIST_REQUESTED action can be skipped\n * @function\n */\n\n\nconst createListActionSequence = async (dispatch, promise, type, silent) => {\n  if (!silent) dispatch(createAction(ACTIONS.LIST_REQUESTED, type));\n\n  try {\n    const items = await promise;\n    dispatch(createAction(ACTIONS.LIST_RECEIVED, {\n      type,\n      items\n    }));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.LIST_ERRORED, {\n      type,\n      error\n    }));\n  }\n};\n\nexport const getList = (entityName, silent) => (dispatch, getState) => {\n  const {\n    filter,\n    pager\n  } = getState();\n  const page = pager ? pager.page : DEFAULT_PAGE;\n  const promise = api.getList(entityName, page, filter);\n  createListActionSequence(dispatch, promise, entityName, silent);\n};\nexport const incrementPage = pager => (dispatch, getState) => {\n  const {\n    list: {\n      type\n    }\n  } = getState();\n  createListActionSequence(dispatch, pager.getNextPage(), type);\n};\nexport const decrementPage = pager => (dispatch, getState) => {\n  const {\n    list: {\n      type\n    }\n  } = getState();\n  createListActionSequence(dispatch, pager.getPreviousPage(), type);\n};\n/**\n * Helper function for general fetch scenarios. Used by `getItem`, `initCurrentUser` and `refreshCurrentUser`.\n * @param {Object} actions - The action types to dispatch\n * @param {String} actions.requested - The name of the action to dispatch when initializing the request\n * @param {String} actions.received - The name of the action to dispatch on successfull response\n * @param {String} actions.errored - The name of the action to dispatch when request failed\n * @param {Object} promise - The promise to await\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @function\n */\n\nconst createAsyncActionSequence = async (actionTypes, promise, dispatch) => {\n  dispatch(createAction(actionTypes.requested));\n\n  try {\n    const payload = await promise;\n    dispatch(createAction(actionTypes.received, payload));\n  } catch (error) {\n    dispatch(createAction(actionTypes.errored, error));\n  }\n};\n/**\n * Gets an item of a specified type and dispatches actions on request, response and error\n * @param {String} entityName - The type of item to fetch, i.e. user / userRole / userGroup\n * @param {String} id - The item ID\n * @function\n */\n\n\nexport const getItem = (entityName, id) => dispatch => {\n  createAsyncActionSequence({\n    requested: ACTIONS.ITEM_REQUESTED,\n    received: ACTIONS.ITEM_RECEIVED,\n    errored: ACTIONS.ITEM_ERRORED\n  }, api.getItem(entityName, id), dispatch);\n};\nconst currentUserActions = {\n  requested: ACTIONS.CURRENT_USER_REQUESTED,\n  received: ACTIONS.CURRENT_USER_RECEIVED,\n  errored: ACTIONS.CURRENT_USER_ERRORED\n};\nexport const initCurrentUser = () => dispatch => {\n  createAsyncActionSequence(currentUserActions, api.initCurrentUser(), dispatch);\n};\nexport const refreshCurrentUser = () => dispatch => {\n  createAsyncActionSequence(currentUserActions, api.refreshCurrentUser(), dispatch);\n};\n/*****************\n * PLAIN ACTIONS *\n *****************/\n\nexport const initNewItem = entityType => {\n  const newItem = api.getD2().models[entityType].create();\n  return createAction(ACTIONS.INIT_NEW_ITEM, newItem);\n};\nexport const clearItem = () => {\n  return createAction(ACTIONS.CLEAR_ITEM);\n};\nexport const updateFilter = (updateKey, updateValue) => {\n  return createAction(ACTIONS.FILTER_UPDATED, {\n    updateKey,\n    updateValue\n  });\n};\nexport const resetFilter = () => {\n  return createAction(ACTIONS.FILTER_RESET);\n};\nexport const resetPager = () => {\n  return createAction(ACTIONS.PAGER_RESET);\n};\nexport const showSnackbar = props => {\n  return createAction(ACTIONS.SHOW_SNACKBAR, props);\n};\nexport const hideSnackbar = () => {\n  return createAction(ACTIONS.HIDE_SNACKBAR);\n};\nexport const showDialog = (content, props) => {\n  return createAction(ACTIONS.SHOW_DIALOG, {\n    content,\n    props\n  });\n};\nexport const hideDialog = () => {\n  return createAction(ACTIONS.HIDE_DIALOG);\n};\nexport const showSharingDialog = (id, type) => {\n  return createAction(ACTIONS.SHOW_SHARING_DIALOG, {\n    id,\n    type\n  });\n};\nexport const hideSharingDialog = () => {\n  return createAction(ACTIONS.HIDE_SHARING_DIALOG);\n};","import history from './history';\n/**\n * Pushed new routes to the hashHistory object.\n * Can be used to imperatively trigger route changes in the Router.\n * @param {String} path - Route path to navigate to\n * @memberof module:utils\n * @function\n */\n\nconst navigateTo = path => {\n  history.push(path);\n};\n\nexport default navigateTo;","/**\n * If you import this module into a component that renders a DataTable,\n * it will render MaterialUI checkboxes for TRUE values and keep FALSE values empty.\n * @module List/booleanValueRenderer\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckIcon from 'material-ui/svg-icons/navigation/check';\nimport { addValueRenderer } from '@dhis2/d2-ui-table/data-value/valueRenderers';\n/**\n * Defines behavior for the DataTable when receiving boolean values\n * @param {Object} DataTableCell - A DataTableCell containing a value property\n * @param {Boolean} DataTableCell.value - The cell value\n * @returns Either a CheckIcon or null\n */\n\nconst BooleanCellField = ({\n  value\n}) => value ? <div style={{\n  width: '40px'\n}}>\n            <CheckIcon />\n        </div> : null;\n\nBooleanCellField.propTypes = {\n  value: PropTypes.bool\n};\naddValueRenderer(({\n  value\n}) => typeof value === 'boolean', BooleanCellField);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { connect } from 'react-redux';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport DataTable from '@dhis2/d2-ui-table';\nimport { LoadingMask, Heading, Pagination } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport { listSelector, pagerSelector } from '../../selectors';\nimport { getList, resetFilter, resetPager, incrementPage, decrementPage, showSnackbar, hideSnackbar } from '../../actions';\nimport ErrorMessage from '../ErrorMessage';\nimport './booleanValueRenderer';\nimport '@dhis2/d2-ui-core/css/Table.css';\nimport '@dhis2/d2-ui-core/css/Pagination.css';\nconst styles = {\n  dataTableWrap: {\n    flex: 1,\n    marginBottom: '4rem'\n  },\n  clearBoth: {\n    clear: 'both'\n  },\n  filterBar: {\n    display: 'table',\n    marginBottom: '1rem',\n    width: '100%'\n  },\n  headerBarPagination: {\n    float: 'right',\n    marginTop: '14px'\n  },\n  headerBarFilterWrap: {\n    display: 'table',\n    marginRight: '230px'\n  },\n  pagination: {\n    userSelect: 'none'\n  }\n};\n/**\n * Generic component that fetches list data, and displays this in a DataTable with paging and filtering\n */\n\nclass List extends Component {\n  componentDidMount() {\n    const {\n      items,\n      getList,\n      resetFilter,\n      resetPager,\n      entityType,\n      listType\n    } = this.props; // Only fetch when there is no suitable list available\n\n    if (items === null || listType !== entityType) {\n      // If list type is defined but doesn't match current entity\n      // this means the user has switched section so pager and filter must be reset\n      if (listType !== entityType) {\n        resetFilter();\n        resetPager();\n      }\n\n      getList(entityType);\n    }\n  }\n\n  executeEditIfAllowed = model => {\n    const {\n      isContextActionAllowed,\n      primaryAction,\n      showSnackbar,\n      hideSnackbar\n    } = this.props;\n\n    if (isContextActionAllowed(model, 'edit')) {\n      primaryAction(model);\n    } else {\n      showSnackbar({\n        message: `${i18n.t('You are not allowed to edit')} ${model.displayName}`,\n        action: i18n.t('Confirm'),\n        autoHideDuration: null,\n        onActionClick: hideSnackbar\n      });\n    }\n  };\n\n  getPagerConfig(pager) {\n    if (!pager) {\n      return {\n        page: null,\n        pageCount: null,\n        total: null,\n        currentlyShown: null\n      };\n    }\n\n    return pager;\n  }\n\n  renderPagination() {\n    const {\n      pager,\n      items,\n      incrementPage,\n      decrementPage\n    } = this.props;\n    const {\n      page,\n      pageCount,\n      total,\n      currentlyShown\n    } = this.getPagerConfig(pager);\n    const shouldHide = !items || items.length === 0 || typeof items === 'string';\n    const style = shouldHide ? { ...styles.pagination,\n      visibility: 'hidden'\n    } : styles.pagination;\n    const paginationProps = {\n      hasNextPage: () => page && items && items.length && page < pageCount,\n      hasPreviousPage: () => page && items && items.length && page > 1,\n      onNextPageClick: () => {\n        incrementPage(pager);\n      },\n      onPreviousPageClick: () => {\n        decrementPage(pager);\n      },\n      total,\n      currentlyShown,\n      style\n    };\n    return <div style={style}>\n                <Pagination {...paginationProps} />\n            </div>;\n  }\n\n  renderHeaderBar() {\n    const {\n      filterComponent: FilterComponent,\n      entityType\n    } = this.props;\n    return <div className=\"data-table__filter-bar\" style={styles.filterBar}>\n                <div style={styles.headerBarPagination}>\n                    {this.renderPagination()}\n                </div>\n                <div style={styles.headerBarFilterWrap}>\n                    <FilterComponent entityType={entityType} />\n                </div>\n            </div>;\n  }\n\n  renderDataTable() {\n    const {\n      items,\n      columns,\n      contextMenuActions,\n      contextMenuIcons,\n      isContextActionAllowed\n    } = this.props;\n\n    if (typeof items === 'string') {\n      const introText = i18n.t('There was an error fetching the list');\n      return <ErrorMessage introText={introText} errorMessage={items} />;\n    }\n\n    if (items === null) {\n      return <LoadingMask />;\n    }\n\n    if (items.length === 0) {\n      return <div style={styles.clearBoth}>No results found.</div>;\n    }\n\n    return <DataTable rows={items} columns={columns} primaryAction={this.executeEditIfAllowed} contextMenuActions={contextMenuActions} contextMenuIcons={contextMenuIcons} isContextActionAllowed={isContextActionAllowed} />;\n  }\n\n  render() {\n    const {\n      sectionName,\n      newItemPath,\n      className\n    } = this.props;\n    return <div style={styles.dataTableWrap} className={className}>\n                <Heading>{sectionName}</Heading>\n                {this.renderHeaderBar()}\n                {this.renderDataTable()}\n                {this.renderPagination()}\n                <FloatingActionButton className=\"entity-list__add-new-entity\" onClick={() => navigateTo(newItemPath)}>\n                    <ContentAdd />\n                </FloatingActionButton>\n            </div>;\n  }\n\n}\n\nList.propTypes = {\n  columns: PropTypes.arrayOf(String).isRequired,\n  contextMenuActions: PropTypes.object.isRequired,\n  contextMenuIcons: PropTypes.object.isRequired,\n  decrementPage: PropTypes.func.isRequired,\n  entityType: PropTypes.string.isRequired,\n  filterComponent: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  hideSnackbar: PropTypes.func.isRequired,\n  incrementPage: PropTypes.func.isRequired,\n  isContextActionAllowed: PropTypes.func.isRequired,\n  newItemPath: PropTypes.string.isRequired,\n  primaryAction: PropTypes.func.isRequired,\n  resetFilter: PropTypes.func.isRequired,\n  resetPager: PropTypes.func.isRequired,\n  sectionName: PropTypes.string.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  listType: PropTypes.string,\n  pager: PropTypes.object\n};\nList.defaultProps = {\n  className: 'paged-filterable-data-table'\n};\n\nconst mapStateToProps = state => {\n  return {\n    listType: state.list.type,\n    items: listSelector(state.list.items, state.currentUser.userGroupIds),\n    pager: pagerSelector(state.pager)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getList,\n  resetFilter,\n  resetPager,\n  incrementPage,\n  decrementPage,\n  showSnackbar,\n  hideSnackbar\n})(List);","import List from './List';\nexport default List;","import store from '../store';\nimport api from '../api';\nimport { refreshCurrentUser as refresh } from '../actions';\nimport { USER, USER_ROLE, USER_GROUP } from '../constants/entityTypes';\n/**\n * This function can be called after users/ userRoles/ urserGroups have been updated or deleted.\n * It will determine if these changes impact the current user.\n * If so, an action is dispatched that will trigger the currentUser state to be refreshed.\n * Or, in case a currentUser was disabled or removed it will trigger a page refresh\n * Currently this function is used by:\n * - `UserForm.saveGroup`\n * - `GroupForm.saveGroup`\n * - `RoleForm.saveRole`\n * - `onRemoveConfirm` in `sharedActions`\n * - `updateDisabledState` in `UserContextMenuActions`\n *\n * @param {String} entityType - The type of object that was changed\n * @param {Object} model - A d2 model or POJO that provides at least the ID of the entity that was changed\n * @param {String} [changeType] - The type of change that happened\n * @memberof module:utils\n * @function\n */\n\nconst detectCurrentUserChanges = (model, disable) => {\n  const {\n    currentUser\n  } = store.getState();\n  const entityType = model.modelDefinition.name;\n\n  if (entityType === USER && model.id === currentUser.id) {\n    disable ? logout() : refreshCurrentUser();\n  }\n\n  if (entityType === USER_ROLE && currentUser.userRoleIds.includes(model.id)) {\n    refreshCurrentUser();\n  }\n\n  if (entityType === USER_GROUP && currentUser.userGroupIds.includes(model.id)) {\n    refreshCurrentUser();\n  }\n};\n\nconst refreshCurrentUser = () => {\n  store.dispatch(refresh());\n};\n\nconst logout = () => {\n  const contextPath = api.getContextPath();\n  const logoutSuffix = '/dhis-web-commons-security/logout.action';\n  const logoutUrl = contextPath + logoutSuffix;\n  window.location.assign(logoutUrl);\n};\n\nexport default detectCurrentUserChanges;","/* eslint-disable max-params */\nimport store from '../store';\nimport { getList, showSnackbar, hideSnackbar, showSharingDialog } from '../actions';\nimport createHumanErrorMessage from './createHumanErrorMessage';\nimport detectCurrentUserChanges from './detectCurrentUserChanges';\nimport i18n from '@dhis2/d2-i18n';\nexport const deleteModel = ({\n  model,\n  entityType\n}) => {\n  const interpolator = {\n    type: model.modelDefinition.displayName,\n    displayName: model.displayName\n  };\n  const confirmMsg = i18n.t('Are you sure you want to remove the {{type}} \"{{displayName}}\"?', interpolator);\n  const successMsg = i18n.t('{{type}} \"{{displayName}}\" removed successfully', interpolator);\n  const errorMsg = i18n.t('There was a problem removing {{type}} \"{{displayName}}\"?', interpolator);\n  const snackbarProps = {\n    message: confirmMsg,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onRemoveConfirm(model, successMsg, errorMsg, entityType)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onRemoveConfirm = async (model, successMsg, errorMsg, entityType) => {\n  store.dispatch(hideSnackbar());\n\n  try {\n    await model.delete();\n    store.dispatch(showSnackbar({\n      message: successMsg\n    }));\n    store.dispatch(getList(entityType));\n    detectCurrentUserChanges(model);\n  } catch (error) {\n    const msg = createHumanErrorMessage(error, errorMsg);\n    store.dispatch(showSnackbar({\n      message: msg\n    }));\n  }\n};\n\nexport const openSharingSettings = ({\n  data: model\n}) => {\n  store.dispatch(showSharingDialog(model.id, model.modelDefinition.name));\n};","/* eslint-disable max-params */\nimport i18n from '@dhis2/d2-i18n';\nimport capitalize from 'lodash.capitalize';\nimport api from '../api';\nimport { USER, USER_GROUP } from '../constants/entityTypes';\nimport { USER_ATTRIBUTE_FIELD_PREFIX } from './attributeFieldHelpers';\nimport { USERNAME, FORM_NAME as USER_FORM } from '../containers/UserForm/config';\nimport { CODE, NAME, FORM_NAME as GROUP_FORM } from '../containers/GroupForm/config';\nimport { FORM_NAME as REPLICATE_USER_FORM } from '../components/ReplicateUserForm';\nimport createHumanErrorMessage from './createHumanErrorMessage';\nexport async function asyncValidatorSwitch(values, _, props, blurredField) {\n  const priorErrors = props.asyncErrors; // Skip aSync validation when submitting the form because all fields have been\n  // validated on blur anyway, and the server will reject them\n\n  if (!blurredField && !priorErrors) {\n    return Promise.resolve();\n  }\n\n  let newError;\n\n  if (props.form === USER_FORM && blurredField === USERNAME) {\n    newError = await getUserNameError(values, props);\n  } else if (props.form === GROUP_FORM && (blurredField === CODE || blurredField === NAME)) {\n    newError = await getGenericUniquenessError(values, props, blurredField);\n  } else {\n    newError = await getAttributeUniquenessError(values, props, blurredField);\n  }\n\n  const errors = priorErrors || newError ? { ...priorErrors,\n    ...newError\n  } : undefined;\n\n  if (errors) {\n    throw errors;\n  } else {\n    return Promise.resolve();\n  }\n}\nexport async function asyncValidateUsername(values, _, props, blurredField) {\n  return asyncSingleFieldValidator(values, props, blurredField, getUserNameError);\n}\nexport async function asyncValidateUniqueness(values, _, props, blurredField) {\n  return asyncSingleFieldValidator(values, props, blurredField, getGenericUniquenessError);\n}\n\nasync function asyncSingleFieldValidator(values, props, blurredField, apiMethod) {\n  if (!blurredField) {\n    return Promise.resolve();\n  }\n\n  const error = await apiMethod(values, props, blurredField);\n\n  if (error) {\n    throw error;\n  } else {\n    return Promise.resolve();\n  }\n}\n\nasync function getUserNameError(values, props) {\n  const newUserName = values[USERNAME];\n  const editingExistingUser = props.form !== REPLICATE_USER_FORM && props.user && props.user.id;\n\n  if (!newUserName || editingExistingUser) {\n    return Promise.resolve();\n  }\n\n  try {\n    const modelCollection = await api.genericFind('users', 'userCredentials.username', newUserName);\n\n    if (modelCollection.size > 0) {\n      return {\n        [USERNAME]: i18n.t('Username already taken')\n      };\n    }\n  } catch (error) {\n    return {\n      [USERNAME]: i18n.t('There was a problem whilst checking the availability of this username')\n    };\n  }\n}\n/**\n * Calls the genericFind method of the Api instance to find out whether a userRole/userGroup model instance with the same property value exists\n * @param {Object} values - redux form values object\n * @param {Object} props - Component properties, containing either a userRole or userGroup model\n * @param {Object} fieldName - The property name to check on uniqueness\n * @returns {Object} errors - Will be empty of the entry was unique. Otherwise will contain error message  for duplicate property values.\n * @memberof module:utils\n * @function\n */\n\n\nasync function getGenericUniquenessError(values, props, fieldName) {\n  const {\n    group,\n    role\n  } = props;\n  const model = role || group;\n  const entityName = model.modelDefinition.name;\n  const fieldValue = values[fieldName];\n  const fieldDisplayName = capitalize(fieldName);\n\n  if (!fieldValue) {\n    return Promise.resolve();\n  }\n\n  try {\n    const modelCollection = await api.genericFind(entityName, fieldName, fieldValue);\n\n    if (modelCollection.size > 0) {\n      const foundId = modelCollection.values().next().value.id;\n\n      if (foundId !== model.id) {\n        return {\n          [fieldName]: i18n.t('{{fieldDisplayName}} is already taken', {\n            fieldDisplayName\n          })\n        };\n      }\n    }\n  } catch (error) {\n    const fallBackMsg = i18n.t('Could not verify if this {{fieldDisplayName}} is unique', {\n      fieldDisplayName\n    });\n    return {\n      [fieldName]: createHumanErrorMessage(error, fallBackMsg)\n    };\n  }\n}\n\nasync function getAttributeUniquenessError(values, props, blurredField) {\n  const value = values[blurredField];\n\n  if (!value) {\n    return Promise.resolve();\n  }\n\n  const entityType = props.form === USER_FORM ? USER : USER_GROUP;\n  const id = entityType === USER ? props.user.id || '_' : props.group.id || '_';\n  const attributeId = blurredField.replace(USER_ATTRIBUTE_FIELD_PREFIX, '');\n\n  try {\n    const isUnique = await api.isAttributeUnique(entityType, id, attributeId, value);\n\n    if (!isUnique) {\n      return {\n        [blurredField]: i18n.t('Attribute value needs to be unique, value already taken.')\n      };\n    }\n  } catch (error) {\n    return {\n      [blurredField]: i18n.t('There was a problem checking if this attribute value is unique')\n    };\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { RaisedButton } from 'material-ui';\nimport { renderTextField } from '../utils/fieldRenderers';\nimport i18n from '@dhis2/d2-i18n';\nimport api from '../api';\nimport { connect } from 'react-redux';\nimport { USER } from '../constants/entityTypes';\nimport { USERNAME, PASSWORD } from '../containers/UserForm/config';\nimport { username, password } from '../utils/validators';\nimport { asyncValidateUsername } from '../utils/validatorsAsync';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport { getList, hideDialog, showSnackbar, hideSnackbar } from '../actions';\nexport const FORM_NAME = 'replicateUserForm';\n/**\n * Form component for replicating a using redux-form and displayed in a Dialog\n */\n\nclass ReplicateUserForm extends Component {\n  replicateUser = async data => {\n    const {\n      user,\n      hideDialog\n    } = this.props;\n    const {\n      username,\n      password\n    } = data;\n\n    try {\n      await api.replicateUser(user.id, username, password);\n      this.replicateSuccesHandler(user.displayName);\n    } catch (error) {\n      this.replicateErrorHandler(error);\n    }\n\n    hideDialog();\n  };\n  replicateSuccesHandler = displayName => {\n    const {\n      getList,\n      showSnackbar\n    } = this.props;\n    const message = i18n.t('User \"{{displayName}}\" replicated successfuly', {\n      displayName\n    });\n    showSnackbar({\n      message\n    });\n    getList(USER, true);\n  };\n  replicateErrorHandler = error => {\n    const {\n      showSnackbar\n    } = this.props;\n    showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem replicating the user'))\n    });\n  };\n\n  render() {\n    const {\n      submitting,\n      pristine,\n      valid,\n      handleSubmit,\n      hideDialog,\n      asyncValidating\n    } = this.props;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    return <form autoComplete=\"off\" onSubmit={handleSubmit(this.replicateUser)}>\n                <Field name={USERNAME} component={renderTextField} label={i18n.t('Username')} hintText={i18n.t('Username for new user')} validate={[username]} autoComplete=\"new-password\" />\n                <Field name={PASSWORD} component={renderTextField} label={i18n.t('Password')} hintText={i18n.t('Password for new user')} validate={[password]} type=\"password\" autoComplete=\"new-password\" />\n                <div style={{\n        marginTop: 16\n      }}>\n                    <RaisedButton label={i18n.t('Replicate')} type=\"submit\" disabled={disableSubmit} primary={true} />\n                    <RaisedButton label={i18n.t('Cancel')} onClick={hideDialog} style={{\n          marginLeft: 8\n        }} />\n                </div>\n            </form>;\n  }\n\n}\n\nReplicateUserForm.propTypes = {\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hideDialog: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncValidating: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\n\nconst mapStateToProps = state => ({\n  formState: state.form[FORM_NAME]\n});\n\nconst ReduxFormWrapped = reduxForm({\n  form: FORM_NAME,\n  asyncValidate: asyncValidateUsername,\n  asyncBlurFields: [USERNAME]\n})(ReplicateUserForm);\nexport default connect(mapStateToProps, {\n  getList,\n  hideDialog,\n  showSnackbar,\n  hideSnackbar\n})(ReduxFormWrapped);","/**\n * Defines the UserList context menu for current user on a given UserUser model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/UserList/UserContextMenuActions\n */\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport store from '../../store';\nimport api from '../../api';\nimport { deleteModel } from '../../utils/sharedActions';\nimport { USER } from '../../constants/entityTypes';\nimport { showDialog, hideDialog, showSnackbar, hideSnackbar, getList } from '../../actions';\nimport ReplicateUserForm from '../../components/ReplicateUserForm';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nconst profile = 'profile';\nconst edit = 'edit';\nconst remove = 'remove';\nconst replicate = 'replicate';\nconst disable = 'disable';\nconst enable = 'enable';\nconst disable_2fa = 'disable_2fa';\n/**\n * Determines whether a specific user action should be visible for current user and given a User Model instance\n * @param {Object} model - d2 User model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isUserContextActionAllowed = (model, action) => {\n  const {\n    currentUser\n  } = store.getState();\n\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access,\n    userCredentials: {\n      disabled,\n      twoFA\n    }\n  } = model;\n\n  switch (action) {\n    case profile:\n      return access.read;\n\n    case edit:\n      return access.update;\n\n    case remove:\n      return currentUser.id !== model.id && access.delete;\n\n    case replicate:\n      return access.update && currentUser.authorities.has('F_REPLICATE_USER');\n\n    case disable:\n      return access.update && !disabled;\n\n    case enable:\n      return access.update && disabled;\n\n    case disable_2fa:\n      return access.update && twoFA;\n\n    default:\n      return true;\n  }\n};\nexport const userContextMenuIcons = {\n  [profile]: 'account_circle',\n  [edit]: 'edit',\n  [remove]: 'delete',\n  [replicate]: 'content_copy',\n  [disable]: 'block',\n  [enable]: 'playlist_add_check',\n  [disable_2fa]: 'phonelink_erase'\n};\nexport const userContextMenuActions = Action.createActionsFromNames([profile, edit, remove, replicate, disable, enable, disable_2fa]);\nuserContextMenuActions.profile.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/users/view/${id}`);\n});\nuserContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/users/edit/${id}`);\n});\nuserContextMenuActions.remove.subscribe(({\n  data: user\n}) => {\n  const params = {\n    model: user,\n    entityType: USER\n  };\n  deleteModel(params);\n});\nuserContextMenuActions.replicate.subscribe(({\n  data: user\n}) => {\n  const content = <ReplicateUserForm user={user} />;\n  const props = {\n    onRequestClose: () => store.dispatch(hideDialog()),\n    title: i18n.t('Replicate user')\n  };\n  store.dispatch(showDialog(content, props));\n});\nuserContextMenuActions.disable.subscribe(({\n  data\n}) => {\n  updateDisabledState(data, true);\n});\nuserContextMenuActions.enable.subscribe(({\n  data\n}) => {\n  updateDisabledState(data, false);\n});\nuserContextMenuActions.disable_2fa.subscribe(({\n  data\n}) => {\n  showDisable2FAConfirmation(data);\n});\n\nconst showDisable2FAConfirmation = model => {\n  const baseMsg = i18n.t('Are you sure you want to disable two factor authentication for');\n  const snackbarProps = {\n    message: `${baseMsg} ${model.displayName}`,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onDisable2FAConfirm(model)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onDisable2FAConfirm = async model => {\n  store.dispatch(hideSnackbar());\n  const {\n    displayName,\n    id\n  } = model;\n\n  try {\n    await api.disable2FA(id);\n    const baseMsg = i18n.t('Succesfully disabled two factor authentication for');\n    store.dispatch(showSnackbar({\n      message: `${baseMsg} ${displayName}`\n    }));\n    store.dispatch(getList(USER));\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating two factor authentication'))\n    }));\n  }\n};\n\nconst updateDisabledState = (model, shouldDisable) => {\n  const baseMsg = shouldDisable ? i18n.t('Are you sure you want to disable') : i18n.t('Are you sure you want to enable');\n  const snackbarProps = {\n    message: `${baseMsg} ${model.displayName}`,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onDisableConfirm(model, shouldDisable)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onDisableConfirm = async (model, shouldDisable) => {\n  store.dispatch(hideSnackbar());\n  const {\n    displayName,\n    id\n  } = model;\n\n  try {\n    await api.updateDisabledState(id, shouldDisable);\n    const baseMsg = shouldDisable ? i18n.t('sucessfully disabled') : i18n.t('successfully enabled');\n    store.dispatch(showSnackbar({\n      message: `${displayName} ${baseMsg}`\n    }));\n    store.dispatch(getList(USER));\n\n    if (shouldDisable) {\n      detectCurrentUserChanges(model, true);\n    }\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating the enabled state'))\n    }));\n  }\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { USER } from '../constants/entityTypes';\nimport { connect } from 'react-redux';\nimport { updateFilter, hideDialog, getList } from '../actions';\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree';\nimport { TEI_SEARCH_ORG_UNITS } from '../containers/UserForm/config';\n/**\n * Displayed inside of a Dialog and displayed by clicking the OrganisationUnitInput.\n * This component renders a SearchableOrgUnitTree and lets a user select one or more organisation units.\n * When this selection is applied the filter state is updated.\n */\n\nclass OrganisationUnitFilter extends Component {\n  applyFilter = newSelectedOrgUnits => {\n    const {\n      updateFilter,\n      hideDialog,\n      getList,\n      selectedOrgUnits\n    } = this.props;\n\n    if (!isEqual(newSelectedOrgUnits, selectedOrgUnits)) {\n      updateFilter('organisationUnits', newSelectedOrgUnits);\n      getList(USER);\n    }\n\n    hideDialog();\n  };\n\n  render() {\n    const {\n      selectedOrgUnits,\n      hideDialog\n    } = this.props;\n    return <SearchableOrgUnitTree orgUnitType={TEI_SEARCH_ORG_UNITS} selectedOrgUnits={selectedOrgUnits} confirmSelection={this.applyFilter} cancel={hideDialog} />;\n  }\n\n}\n\nOrganisationUnitFilter.propTypes = {\n  getList: PropTypes.func.isRequired,\n  hideDialog: PropTypes.func.isRequired,\n  selectedOrgUnits: PropTypes.array.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  selectedOrgUnits: state.filter.organisationUnits\n});\n\nexport default connect(mapStateToProps, {\n  updateFilter,\n  hideDialog,\n  getList\n})(OrganisationUnitFilter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from 'material-ui/TextField';\nimport ActionOpenInNew from 'material-ui/svg-icons/action/open-in-new';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { showDialog, hideDialog } from '../actions';\nimport OrganisationUnitFilter from './OrganisationUnitFilter';\nimport { orgUnitsAsStringSelector } from '../selectors';\nconst styles = {\n  wrap: {\n    position: 'relative',\n    lineHeight: '24px',\n    height: '72px',\n    cursor: 'pointer',\n    float: 'left',\n    marginRight: '1rem'\n  },\n  icon: {\n    position: 'absolute',\n    right: 0,\n    top: 38,\n    width: 20,\n    height: 20,\n    color: 'rgba(0, 0, 0, 0.3)',\n    cursor: 'pointer'\n  },\n  textField: {\n    cursor: 'pointer',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '152px'\n  },\n  input: {\n    width: 'calc(100% - 20px)',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n};\n/**\n * Part of the UserFilter. This component renders the displayNames of the organisation units that have been set in the filter state.\n * If 3 or more units are selected in the filter, only the length of this array will be displayed.\n */\n\nclass OrganisationUnitInput extends Component {\n  inputRef = React.createRef();\n  focusOrgUnitInput = () => {\n    this.inputRef.current.orgUnitInput.focus();\n  };\n  showOrgTreeInDialog = () => {\n    const {\n      showDialog,\n      hideDialog\n    } = this.props;\n    const content = <OrganisationUnitFilter />;\n    const props = {\n      onRequestClose: hideDialog,\n      title: i18n.t('Select an organisation unit'),\n      contentStyle: {\n        // This doesn't actually influence the height of the dialogue\n        // but it will force it upwards, enabling it to have more height\n        // The actual height is determined by a scrollbox inside the filter component\n        minHeight: '100vh'\n      }\n    };\n    showDialog(content, props);\n  };\n\n  render() {\n    const {\n      organisationUnits\n    } = this.props;\n    return <div style={styles.wrap} onClick={this.focusOrgUnitInput}>\n                <ActionOpenInNew style={styles.icon} />\n                <TextField ref={this.inputRef} style={styles.textField} floatingLabelText={i18n.t('Organisation unit')} onFocus={this.showOrgTreeInDialog} value={organisationUnits} inputStyle={styles.input} />\n            </div>;\n  }\n\n}\n\nOrganisationUnitInput.propTypes = {\n  hideDialog: PropTypes.func.isRequired,\n  organisationUnits: PropTypes.string.isRequired,\n  showDialog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  organisationUnits: orgUnitsAsStringSelector(state.filter.organisationUnits)\n});\n\nexport default connect(mapStateToProps, {\n  showDialog,\n  hideDialog\n})(OrganisationUnitInput);","export const QUERY = 'query';\nexport const INACTIVE_MONTHS = 'inactiveMonths';\nexport const INVITATION_STATUS = 'invitationStatus';\nexport const SELF_REGISTERED = 'selfRegistered';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'material-ui/TextField/TextField';\nimport debounce from 'lodash.debounce';\nimport { updateFilter, getList } from '../actions';\nimport { QUERY } from '../constants/filterFieldNames';\nconst style = {\n  float: 'left',\n  marginRight: '1rem',\n  width: '236px'\n};\n/**\n * Generic search filter component that is used by the RoleList and the GroupList\n */\n\nclass SearchFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localQueryStr: props.filter.query\n    };\n    this.updateSearchFilter = debounce(this.updateSearchFilter, 375);\n  }\n\n  updateSearchFilter = newValue => {\n    const {\n      getList,\n      entityType,\n      updateFilter\n    } = this.props;\n    updateFilter(QUERY, newValue);\n    getList(entityType);\n  };\n  onQueryStrChange = event => {\n    const value = event.target.value;\n    this.setState({\n      localQueryStr: value\n    });\n    this.updateSearchFilter(value);\n  };\n\n  render() {\n    const {\n      localQueryStr\n    } = this.state;\n    return <TextField className=\"search-input\" floatingLabelText={i18n.t('Search by name')} style={style} hintText={''} value={localQueryStr} type=\"search\" onChange={this.onQueryStrChange} />;\n  }\n\n}\n\nSearchFilter.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  getList: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getList,\n  updateFilter\n})(SearchFilter);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Checkbox } from 'material-ui';\nimport { DropDown } from '@dhis2/d2-ui-core';\nimport { updateFilter, getList } from '../../actions';\nimport OrganisationUnitInput from '../../components/OrganisationUnitInput';\nimport SearchFilter from '../../components/SearchFilter';\nimport { INACTIVE_MONTHS, INVITATION_STATUS, SELF_REGISTERED } from '../../constants/filterFieldNames';\nconst style = {\n  float: 'left',\n  marginRight: '1rem'\n};\nconst selfRegisteredStyle = { ...style,\n  display: 'inline-block',\n  float: 'left',\n  width: '182px',\n  paddingTop: '37px',\n  height: '35px'\n};\n/**\n * Renders a SearchFilter, OrganisationUnitInput, dropdowns for inactive months and invitation status, and a checkbox for self registration.\n * Controlled by the filter state and updates this on change.\n */\n\nclass UserFilter extends Component {\n  onFilterChange = (fieldName, newValue) => {\n    const {\n      getList,\n      entityType,\n      updateFilter,\n      filter\n    } = this.props;\n\n    if (filter[fieldName] === newValue) {\n      return;\n    }\n\n    updateFilter(fieldName, newValue);\n    getList(entityType);\n  };\n\n  createInactiveMonthsOptions() {\n    const month = i18n.t('month');\n    const months = i18n.t('months');\n    return Array(12).fill().map((_, index) => {\n      const id = index + 1;\n      const displayName = id === 1 ? `${id} ${month}` : `${id} ${months}`;\n      return {\n        id,\n        displayName\n      };\n    });\n  }\n\n  renderDropDown(config) {\n    const mergedConfig = { ...config,\n      includeEmpty: true,\n      emptyLabel: i18n.t('<No value>')\n    };\n    return <DropDown {...mergedConfig} />;\n  }\n\n  renderInactiveMonthsFilter() {\n    const dropDownConfig = {\n      menuItems: this.createInactiveMonthsOptions(),\n      floatingLabelText: i18n.t('Inactivity'),\n      value: this.props.filter.inactiveMonths,\n      onChange: event => this.onFilterChange(INACTIVE_MONTHS, event.target.value),\n      style: { ...style,\n        width: '132px'\n      }\n    };\n    return this.renderDropDown(dropDownConfig);\n  }\n\n  renderInvitationStatusFilter() {\n    const dropDownConfig = {\n      menuItems: [{\n        id: 'all',\n        displayName: i18n.t('All invitations')\n      }, {\n        id: 'expired',\n        displayName: i18n.t('Expired invitations')\n      }],\n      floatingLabelText: i18n.t('Invitations'),\n      value: this.props.filter.invitationStatus,\n      onChange: event => this.onFilterChange(INVITATION_STATUS, event.target.value),\n      style: { ...style,\n        width: '172px'\n      }\n    };\n    return this.renderDropDown(dropDownConfig);\n  }\n\n  renderSelfRegisteredFilter() {\n    const value = this.props.filter.selfRegistered;\n    const baseClassName = 'data-table__filter-bar__checkbox';\n    const checkedClassName = `${baseClassName}--checked`;\n    return <Checkbox value={value} onCheck={(event, value) => this.onFilterChange(SELF_REGISTERED, value)} label={i18n.t('Self registrations')} className={value ? checkedClassName : baseClassName} style={selfRegisteredStyle} />;\n  }\n\n  render() {\n    const {\n      entityType\n    } = this.props;\n    return <div>\n                <SearchFilter entityType={entityType} />\n                <OrganisationUnitInput />\n                {this.renderInactiveMonthsFilter()}\n                {this.renderInvitationStatusFilter()}\n                {this.renderSelfRegisteredFilter()}\n            </div>;\n  }\n\n}\n\nUserFilter.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  getList: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateFilter,\n  getList\n})(UserFilter);","import React from 'react';\nimport { USER } from '../../constants/entityTypes';\nimport List from '../../components/List';\nimport i18n from '@dhis2/d2-i18n';\nimport { userContextMenuActions, userContextMenuIcons, isUserContextActionAllowed } from './UserContextMenuActions';\nimport UserFilter from './UserFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of Users\n * @class\n */\n\nconst UserList = () => <List entityType={USER} columns={['displayName', 'userName', 'lastLogin', 'disabled']} filterComponent={UserFilter} primaryAction={userContextMenuActions.edit} contextMenuActions={userContextMenuActions} contextMenuIcons={userContextMenuIcons} isContextActionAllowed={isUserContextActionAllowed} sectionName={i18n.t('User Management')} newItemPath={'/users/new'} className=\"user-list\" />;\n\nexport default UserList;","import UserList from './UserList';\nexport default UserList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconButton from 'material-ui/IconButton';\n/**\n * A component that renders a React-Router Link with an MUI IconButton inside it\n * @class\n */\n\nconst IconLink = ({\n  to,\n  tooltip,\n  icon\n}) => {\n  const iconButton = <IconButton iconClassName=\"material-icons\" tooltip={tooltip}>\n            {icon}\n        </IconButton>;\n  return to ? <Link to={to}>{iconButton}</Link> : iconButton;\n};\n\nIconLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  tooltip: PropTypes.string.isRequired,\n  to: PropTypes.string\n};\nexport default IconLink;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, reduxForm } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport api from '../../api';\nimport navigateTo from '../../utils/navigateTo';\nimport { asyncValidateUniqueness } from '../../utils/validatorsAsync';\nimport { required } from '../../utils/validators';\nimport { clearItem, showSnackbar, getList } from '../../actions';\nimport { NAME, DESCRIPTION, AUTHORITIES, getFields } from './config';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass RoleForm extends Component {\n  fields = getFields();\n  saveRole = async (values, _, props) => {\n    const {\n      role,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    const data = { ...role.toJSON(),\n      [NAME]: values[NAME],\n      [DESCRIPTION]: values[DESCRIPTION],\n      [AUTHORITIES]: values[AUTHORITIES]\n    };\n\n    try {\n      await api.saveRole(data);\n      const msg = i18n.t('User role \"{{displayName}}\" saved successfully', {\n        displayName: data[NAME]\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER_ROLE);\n      this.backToList();\n      detectCurrentUserChanges(role);\n    } catch (error) {\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user role.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/user-roles');\n  };\n\n  renderFields() {\n    return this.fields.map(fieldConfig => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        ...conf\n      } = fieldConfig;\n      const suffix = isRequiredField ? ' *' : '';\n      const labelText = label + suffix;\n      const validators = name === NAME ? [required] : [];\n      return <Field name={name} key={name} component={fieldRenderer} label={labelText} validate={validators} {...conf} />;\n    });\n  }\n\n  render = () => {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid\n    } = this.props;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.saveRole)}>\n                    {this.renderFields()}\n                    <div style={{\n          marginTop: '2rem'\n        }}>\n                        <RaisedButton label={i18n.t('Save')} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  };\n}\n\nRoleForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  clearItem: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  role: PropTypes.object.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  valid: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  role: state.currentItem,\n  initialValues: {\n    [NAME]: state.currentItem[NAME],\n    [DESCRIPTION]: state.currentItem[DESCRIPTION],\n    [AUTHORITIES]: state.currentItem[AUTHORITIES] || []\n  }\n});\n\nconst ReduxFormWrappedRoleForm = reduxForm({\n  form: 'roleForm',\n  asyncValidate: asyncValidateUniqueness,\n  asyncBlurFields: [NAME]\n})(RoleForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedRoleForm);","import { renderTextField, renderAuthorityEditor } from '../../utils/fieldRenderers';\nimport i18n from '@dhis2/d2-i18n';\nexport const NAME = 'name';\nexport const DESCRIPTION = 'description';\nexport const AUTHORITIES = 'authorities';\nexport const ROLE_PROPS = [NAME, DESCRIPTION, AUTHORITIES];\nexport const getFields = () => [{\n  name: NAME,\n  label: i18n.t('Name'),\n  fieldRenderer: renderTextField,\n  isRequiredField: true\n}, {\n  name: DESCRIPTION,\n  label: i18n.t('Description'),\n  fieldRenderer: renderTextField\n}, {\n  name: AUTHORITIES,\n  label: i18n.t('Authorities'),\n  fieldRenderer: renderAuthorityEditor\n}];","import RoleForm from './RoleForm';\nexport default RoleForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, reduxForm } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport makeTrashable from 'trashable';\nimport navigateTo from '../../utils/navigateTo';\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync';\nimport { renderSearchableGroupEditor } from '../../utils/fieldRenderers';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport { clearItem, showSnackbar, getList } from '../../actions';\nimport { FORM_NAME, NAME, CODE, USERS, MANAGED_GROUPS, getFields } from './config';\nimport { userGroupFormInitialValuesSelector } from '../../selectors';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport { generateAttributeFields, parseAttributeValues, addUniqueAttributesToAsyncBlurFields } from '../../utils/attributeFieldHelpers';\nimport * as CONFIG from './config';\nimport collectValidators from './collectValidators';\nimport api from '../../api';\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass GroupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributeFields: null\n    };\n    this.trashableAttributesPromise = null;\n    this.fields = getFields();\n  }\n\n  async componentDidMount() {\n    const {\n      group,\n      showSnackbar,\n      initialize\n    } = this.props;\n    this.trashableAttributesPromise = makeTrashable(api.getAttributes(USER_GROUP));\n\n    try {\n      const attributes = await this.trashableAttributesPromise;\n      const attributeFields = generateAttributeFields(attributes, group.attributeValues);\n      addUniqueAttributesToAsyncBlurFields(attributeFields, this.props.asyncBlurFields);\n      this.setState({\n        attributeFields\n      });\n      initialize(userGroupFormInitialValuesSelector(group, attributeFields));\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('Could not load the user group data. Please refresh the page.'))\n      });\n    }\n  }\n\n  createIdValueObject(value) {\n    return {\n      id: typeof value === 'string' ? value : value.id\n    };\n  }\n\n  saveGroup = async (values, _, props) => {\n    const {\n      group,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    group[NAME] = values[NAME];\n    group[CODE] = values[CODE];\n    group[USERS] = values[USERS].map(this.createIdValueObject);\n    group[MANAGED_GROUPS] = values[MANAGED_GROUPS].map(this.createIdValueObject);\n    group.attributeValues = parseAttributeValues(values, this.state.attributeFields);\n\n    try {\n      const data = group.toJSON ? group.toJSON() : group;\n      await api.saveUserGroup(data);\n      const msg = i18n.t('User group \"{{displayName}}\" saved successfully', {\n        displayName: group.name\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER_GROUP);\n      this.backToList();\n      detectCurrentUserChanges(group);\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user group.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/user-groups');\n  };\n\n  renderFields(fields) {\n    const {\n      group\n    } = this.props;\n    return fields.map(fieldConfig => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        isAttributeField,\n        fieldValidators,\n        ...conf\n      } = fieldConfig;\n      const suffix = isRequiredField ? ' *' : '';\n      const labelText = label + suffix;\n      const validators = [];\n\n      if (fieldRenderer === renderSearchableGroupEditor) {\n        conf.availableItemsQuery = api[conf.availableItemsQuery];\n\n        if (isRequiredField) {\n          conf.assignedItemsLabel += ' *';\n        }\n\n        conf.initialValues = fieldConfig.initialItemsSelector(group);\n      }\n\n      conf.validate = collectValidators(this.props, name, isRequiredField, isAttributeField, fieldValidators);\n      return <Field name={name} key={name} component={fieldRenderer} label={labelText} validate={validators} {...conf} />;\n    });\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid\n    } = this.props;\n    const {\n      attributeFields\n    } = this.state;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n\n    if (!attributeFields) {\n      return <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.saveGroup)}>\n                    {this.renderFields(this.fields)}\n                    {this.renderFields(attributeFields)}\n                    <div style={{\n          marginTop: '2rem'\n        }}>\n                        <RaisedButton label={i18n.t('Save')} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  }\n\n}\n\nGroupForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  clearItem: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n  initialize: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  group: state.currentItem\n});\n\nconst ReduxFormWrappedGroupForm = reduxForm({\n  form: FORM_NAME,\n  asyncValidate: asyncValidatorSwitch,\n  asyncBlurFields: [NAME, CODE]\n})(GroupForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedGroupForm);","/* eslint-disable max-params */\nimport { required, requiredArray, code } from '../../utils/validators';\nimport { USERS, NAME, CODE } from './config';\nexport default function collectValidators(props, name, isRequiredField, isAttributeField, fieldValidators) {\n  const validatorsToApply = [];\n  const isRequiredAttributeField = isAttributeField && isRequiredField;\n\n  if (name === NAME) {\n    validatorsToApply.push(required);\n  }\n\n  if (name === USERS) {\n    validatorsToApply.push(requiredArray);\n  }\n\n  if (name === CODE) {\n    validatorsToApply.push(code);\n  }\n\n  if (isRequiredAttributeField) {\n    validatorsToApply.push(required);\n  }\n\n  if (isAttributeField && fieldValidators) {\n    validatorsToApply.push(...fieldValidators);\n  }\n\n  return validatorsToApply;\n}","import GroupForm from './GroupForm';\nexport default GroupForm;","/* eslint-disable max-params */\nimport * as validators from '../../utils/validators';\nimport { USERNAME, PASSWORD, REPEAT_PASSWORD, SURNAME, FIRST_NAME, EMAIL } from './config'; // Use this to make sure validator names match form field names (see const fieldSpecificValidator)\n\nconst validatorLookup = { ...validators,\n  userRoles: validators.requiredArray,\n  organisationUnits: validators.requiredArray\n}; // When creating a user, a password is required, because there is no step to create\n// a password, which a user does get when he is invited by email. On the other hand,\n// the email field is optional, because the user can just use his username to login.\n// And for this reason, the username field is required too.\n\nconst CREATE_REQUIRED_FIELDS = new Set([USERNAME, PASSWORD, REPEAT_PASSWORD, SURNAME, FIRST_NAME]); // When inviting a user, email, firstname and surname is sufficient.\n// The user can setup a username and password when clicking on the invite link.\n\nconst INVITE_REQUIRED_FIELDS = new Set([EMAIL, SURNAME, FIRST_NAME]); // In edit mode, the username field is disabled, because this is create-only.\n// The password fields are also optional, we just keep the current password\n// if no new values are provided. Only firstname and surname are required,\n// to prevent these fields from being cleared.\n\nconst EDIT_REQUIRED_FIELDS = new Set([SURNAME, FIRST_NAME]);\nexport default function collectValidators(props, name, isRequiredField, isAttributeField, fieldValidators) {\n  const validatorsToApply = [];\n  const isEditingUser = Boolean(props.user.id);\n  const isRequiredAttributeField = isAttributeField && isRequiredField;\n  const fieldSpecificValidator = validatorLookup[name];\n  const isRequiredStaticField = !isAttributeField && isEditingUser ? EDIT_REQUIRED_FIELDS.has(name) : props.inviteUser ? INVITE_REQUIRED_FIELDS.has(name) : CREATE_REQUIRED_FIELDS.has(name);\n\n  if (fieldSpecificValidator) {\n    validatorsToApply.push(fieldSpecificValidator);\n  }\n\n  if (isRequiredAttributeField || isRequiredStaticField) {\n    validatorsToApply.push(validators.required);\n  }\n\n  if (isAttributeField && fieldValidators) {\n    validatorsToApply.push(...fieldValidators);\n  }\n\n  return validatorsToApply;\n}","/* eslint-disable max-params */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport HardwareKeyboardArrowUp from 'material-ui/svg-icons/hardware/keyboard-arrow-up';\nimport HardwareKeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down';\nimport i18n from '@dhis2/d2-i18n';\nimport makeTrashable from 'trashable';\nimport navigateTo from '../../utils/navigateTo';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport asArray from '../../utils/asArray';\nimport getNestedProp from '../../utils/getNestedProp';\nimport api from '../../api';\nimport { userFormInitialValuesSelector } from '../../selectors';\nimport { clearItem, getList, showSnackbar } from '../../actions';\nimport { USER } from '../../constants/entityTypes';\nimport * as CONFIG from './config';\nimport collectValidators from './collectValidators';\nimport { inviteUserValueSelector } from '../../selectors';\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync';\nimport { generateAttributeFields, addUniqueAttributesToAsyncBlurFields } from '../../utils/attributeFieldHelpers';\nimport { renderTextField, renderText, renderSearchableOrgUnitTree, renderSearchableGroupEditor, renderSelectField } from '../../utils/fieldRenderers';\n/**\n * Container component that is controlled by redux-form. When mounting, it will fetch available and selected locales.\n * Once these are loaded, it renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass UserForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMore: false,\n      locales: null,\n      attributeFields: null\n    };\n    this.trashableAttributesPromise = null;\n    this.trashableLocalePromise = null;\n    this.inviteFields = CONFIG.getInviteFields();\n    this.baseFields = CONFIG.getBaseFields();\n    this.additionalFields = CONFIG.getAdditionalFields();\n  }\n\n  async componentDidMount() {\n    const {\n      user,\n      showSnackbar,\n      initialize\n    } = this.props;\n    const username = user.id ? user.userCredentials.username : null;\n    this.trashableLocalePromise = makeTrashable(api.getSelectedAndAvailableLocales(username));\n    this.trashableAttributesPromise = makeTrashable(api.getAttributes(USER));\n\n    try {\n      const locales = await this.trashableLocalePromise;\n      const attributes = await this.trashableAttributesPromise;\n      const attributeFields = generateAttributeFields(attributes, user.attributeValues);\n      addUniqueAttributesToAsyncBlurFields(attributeFields, this.props.asyncBlurFields);\n      this.setState({\n        locales,\n        attributeFields\n      });\n      initialize(userFormInitialValuesSelector(user, locales, attributeFields));\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('Could not load the user data. Please refresh the page.'))\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.trashableLocalePromise.trash();\n    this.trashableAttributesPromise.trash();\n  }\n\n  toggleShowMore = () => {\n    this.setState({\n      showMore: !this.state.showMore\n    });\n  };\n  handleSubmit = async (values, _, props) => {\n    const {\n      user,\n      inviteUser,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    const initialUiLocale = this.state.locales.ui.selected;\n    const initialDbLocale = this.state.locales.db.selected;\n\n    try {\n      await api.saveOrInviteUser(values, user, inviteUser, initialUiLocale, initialDbLocale, this.state.attributeFields);\n      const msg = i18n.t('User \"{{displayName}}\" saved successfully', {\n        displayName: `${values.firstName} ${values.surname}`\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER);\n      this.backToList();\n      detectCurrentUserChanges(user);\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/users');\n  };\n\n  getLabelText(label, user, isRequiredField) {\n    const {\n      inviteUser\n    } = this.props;\n    return isRequiredField === CONFIG.ALWAYS_REQUIRED || inviteUser && isRequiredField === CONFIG.INVITE_REQUIRED || isRequiredField === CONFIG.CREATE_REQUIRED && !user.id && !inviteUser || typeof isRequiredField === 'boolean' && isRequiredField ? `${label} *` : label;\n  }\n\n  prepareGroupEditor(conf, fieldConfig, user, isRequiredField) {\n    conf.assignedItemsLabel = this.getLabelText(conf.assignedItemsLabel, user, isRequiredField);\n    conf.availableItemsQuery = api[conf.availableItemsQuery];\n    conf.initialValues = fieldConfig.initialItemsSelector(user);\n  }\n\n  exludeField(fieldName) {\n    const {\n      user,\n      inviteUser,\n      externalAuthOnly\n    } = this.props;\n    const systemCanEmail = this.context.d2.system.systemInfo.emailConfigured;\n\n    if ((!systemCanEmail || user.id) && fieldName === CONFIG.INVITE) {\n      return true;\n    }\n\n    if ((inviteUser || externalAuthOnly) && (fieldName === CONFIG.PASSWORD || fieldName === CONFIG.REPEAT_PASSWORD)) {\n      return true;\n    }\n\n    if (inviteUser && [CONFIG.EXTERNAL_AUTH, CONFIG.OPEN_ID, CONFIG.LDAP_ID].includes(fieldName)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderFields(fields) {\n    const {\n      user\n    } = this.props;\n    return fields.reduce((filteredFields, fieldConfig) => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        isAttributeField,\n        fieldValidators,\n        ...conf\n      } = fieldConfig;\n      const labelText = this.getLabelText(label, user, isRequiredField);\n\n      if (this.exludeField(name)) {\n        return filteredFields;\n      }\n\n      if (fieldRenderer === renderText) {\n        filteredFields.push(renderText(fieldConfig));\n        return filteredFields;\n      }\n\n      switch (fieldRenderer) {\n        case renderTextField:\n          if (!conf.hintText) {\n            conf.hintText = label;\n          }\n\n          conf.disabled = Boolean(name === CONFIG.USERNAME && user.id);\n          break;\n\n        case renderSearchableOrgUnitTree:\n          conf.initialValues = asArray(user[fieldConfig.name]);\n          break;\n\n        case renderSearchableGroupEditor:\n          this.prepareGroupEditor(conf, fieldConfig, user, isRequiredField);\n          break;\n\n        case renderSelectField:\n          conf.options = fieldConfig.optionsSelector ? getNestedProp(fieldConfig.optionsSelector, this.state) : fieldConfig.options;\n          break;\n\n        default:\n          break;\n      }\n\n      conf.validate = collectValidators(this.props, name, isRequiredField, isAttributeField, fieldValidators);\n      filteredFields.push(<Field name={name} key={name} component={fieldRenderer} label={labelText} {...conf} />);\n      return filteredFields;\n    }, []);\n  }\n\n  renderCreateOrInviteField() {\n    return this.renderFields(this.inviteFields);\n  }\n\n  renderAttributeFields() {\n    return this.renderFields(this.state.attributeFields);\n  }\n\n  renderBaseFields() {\n    return this.renderFields(this.baseFields);\n  }\n\n  renderAdditionalFields(showMore) {\n    if (!showMore) {\n      return null;\n    }\n\n    return <div style={CONFIG.STYLES.additionalFieldsWrap}>\n                {this.renderFields(this.additionalFields)}\n            </div>;\n  }\n\n  renderToggler(showMore) {\n    const togglerText = showMore ? i18n.t('Show fewer options') : i18n.t('Show more options');\n    const icon = showMore ? <HardwareKeyboardArrowUp /> : <HardwareKeyboardArrowDown />;\n    return <div style={CONFIG.STYLES.togglerWrap}>\n                <FlatButton onClick={this.toggleShowMore} label={togglerText} style={CONFIG.STYLES.toggler} icon={icon} />\n            </div>;\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid,\n      inviteUser\n    } = this.props;\n    const {\n      showMore,\n      locales\n    } = this.state;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    const submitText = inviteUser === true ? i18n.t('Send invite') : i18n.t('Save');\n\n    if (!locales) {\n      return <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.handleSubmit)}>\n                    {this.renderCreateOrInviteField()}\n                    {this.renderBaseFields()}\n                    {this.renderAttributeFields()}\n                    {this.renderAdditionalFields(showMore)}\n                    {this.renderToggler(showMore)}\n                    <div>\n                        <RaisedButton label={submitText} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  }\n\n}\n\nUserForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  change: PropTypes.func.isRequired,\n  clearItem: PropTypes.func.isRequired,\n  externalAuthOnly: PropTypes.bool.isRequired,\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  initialize: PropTypes.func.isRequired,\n  inviteUser: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n  fallbackOrgUnits: PropTypes.object\n};\nUserForm.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nconst selector = formValueSelector(CONFIG.FORM_NAME);\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentItem,\n    fallbackOrgUnits: state.currentUser[CONFIG.DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS],\n    inviteUser: inviteUserValueSelector(state.form[CONFIG.FORM_NAME]),\n    externalAuthOnly: Boolean(selector(state, CONFIG.EXTERNAL_AUTH))\n  };\n};\n\nconst ReduxFormWrappedUserForm = reduxForm({\n  form: CONFIG.FORM_NAME,\n  asyncValidate: asyncValidatorSwitch,\n  asyncBlurFields: [CONFIG.USERNAME]\n})(UserForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedUserForm);","import UserForm from './UserForm';\nexport default UserForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, CircularProgress } from 'material-ui';\nimport { connect } from 'react-redux';\nimport { getItem, initNewItem } from '../actions';\nimport { USER, USER_GROUP, USER_ROLE } from '../constants/entityTypes';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport IconLink from './IconLink';\nimport i18n from '@dhis2/d2-i18n';\nimport kebabCase from 'lodash.kebabcase';\nimport capitalize from 'lodash.capitalize';\nimport ErrorMessage from './ErrorMessage';\nimport RoleForm from '../containers/RoleForm';\nimport GroupForm from '../containers/GroupForm';\nimport UserForm from '../containers/UserForm';\nimport { shortItemSelector } from '../selectors';\nconst styles = {\n  main: {\n    width: '100%',\n    paddingLeft: '2rem'\n  },\n  heading: {\n    paddingBottom: '1rem'\n  },\n  paper: {\n    padding: '2rem 5rem 4rem'\n  }\n};\n\nclass FormLoader extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item,\n      getItem,\n      initNewItem,\n      entityType\n    } = this.props;\n\n    if (id && !(item && item.id === id)) {\n      getItem(entityType, id);\n    } else if (!id) {\n      initNewItem(entityType);\n    }\n\n    this.formNotFoundErrorMsg = i18n.t('There was an error getting the form:');\n  }\n\n  renderForm() {\n    const {\n      entityType\n    } = this.props;\n\n    switch (entityType) {\n      case USER:\n        return <UserForm />;\n\n      case USER_ROLE:\n        return <RoleForm />;\n\n      case USER_GROUP:\n        return <GroupForm />;\n\n      default:\n        return <ErrorMessage introText={this.formNotFoundErrorMsg} errorMessage={''} />;\n    }\n  }\n\n  renderHeader() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item,\n      shortItem,\n      entityType\n    } = this.props;\n    const baseItem = item && item.id === id ? item : shortItem;\n    const entityTxt = baseItem ? baseItem.modelDefinition.displayName : capitalize(entityType);\n    const displayName = baseItem ? baseItem.displayName : '';\n    const updateMsg = `${i18n.t('Update')} ${entityTxt}: ${displayName}`;\n    const createMsg = `${i18n.t('Create new')} ${entityTxt}`;\n    const msg = id ? updateMsg : createMsg;\n    const link = baseItem ? `/${kebabCase(baseItem.modelDefinition.plural)}` : null;\n    const linkTooltip = `${i18n.t('Back to')} ${entityTxt}s`;\n    return <Heading style={styles.heading}>\n                <IconLink to={link} tooltip={linkTooltip} disabled={Boolean(link)} icon=\"arrow_back\" />\n                {msg}\n            </Heading>;\n  }\n\n  renderContent() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item\n    } = this.props;\n\n    if (typeof item === 'string') {\n      return <ErrorMessage introText={this.formNotFoundErrorMsg} errorMessage={item} />;\n    }\n\n    if (!item || item && item.id !== id) {\n      return <div style={{\n        textAlign: 'center',\n        paddingTop: '2rem'\n      }}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return this.renderForm();\n  }\n\n  render() {\n    return <main style={styles.main}>\n                {this.renderHeader()}\n                <Paper style={styles.paper}>{this.renderContent()}</Paper>\n            </main>;\n  }\n\n}\n\nFormLoader.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  getItem: PropTypes.func.isRequired,\n  initNewItem: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  item: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  shortItem: PropTypes.object\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    item: state.currentItem,\n    // shortItem is available when navigating from a list but not after refesh\n    shortItem: shortItemSelector(props.match.params.id, state.list.items)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItem,\n  initNewItem\n})(FormLoader);","import api from '../api';\n/**\n * Receives a full UTC data string and return a formatted version according to the user's locale\n * @param {String} utcString - UTC Date String\n * @param {String} includeTime - Include time if true\n * @returns {String} Formatted date string\n * @memberof module:utils\n * @function\n */\n\nconst parseDateFromUTCString = (utcString, includeTime) => {\n  const d2 = api.getD2();\n  const locale = d2.currentUser.userSettings.settings.keyUiLocale;\n  const date = new Date(utcString);\n  const dateOptions = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  };\n  const timeOptions = {\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  const options = includeTime ? { ...dateOptions,\n    ...timeOptions\n  } : dateOptions;\n  return new Intl.DateTimeFormat(locale, options).format(date);\n};\n\nexport default parseDateFromUTCString;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper } from 'material-ui';\nimport kebabCase from 'lodash.kebabcase';\nimport capitalize from 'lodash.capitalize';\nimport api from '../api';\nimport i18n from '@dhis2/d2-i18n';\nimport parseDateFromUTCString from '../utils/parseDateFromUTCString';\nimport { LoadingMask, Heading } from '@dhis2/d2-ui-core';\nimport ErrorMessage from './ErrorMessage';\nimport IconLink from './IconLink';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport ImageEdit from 'material-ui/svg-icons/image/edit';\nimport ContentSend from 'material-ui/svg-icons/content/send';\nimport { Link } from 'react-router-dom';\nimport { USER, USER_GROUP, USER_ROLE } from '../constants/entityTypes';\nimport { connect } from 'react-redux';\nimport { getItem } from '../actions';\nconst styles = {\n  main: {\n    width: '100%',\n    paddingLeft: '2rem'\n  },\n  heading: {\n    paddingBottom: '1rem'\n  },\n  raisedButton: {\n    height: '36px',\n    transform: 'translateY(10px)',\n    float: 'right',\n    marginLeft: '1rem'\n  },\n  paper: {\n    padding: '1.4rem'\n  },\n  cell: {\n    fontSize: '1rem',\n    padding: '0.8rem',\n    verticalAlign: 'top'\n  },\n  valueCell: {\n    textAlign: 'right',\n    color: '#757575'\n  }\n};\n/**\n * This component reads specified properties of an object and displays this in a table\n */\n\nclass DetailSummary extends Component {\n  componentDidMount() {\n    const {\n      baseName,\n      routeId,\n      getItem\n    } = this.props;\n    getItem(baseName, routeId);\n  }\n\n  getLabelForEntity(baseName) {\n    switch (baseName) {\n      case USER:\n        return i18n.t('Edit user');\n\n      case USER_GROUP:\n        return i18n.t('Edit user group');\n\n      case USER_ROLE:\n        return i18n.t('Edit user role');\n\n      default:\n        return '';\n    }\n  }\n  /**\n   * Renders a button wrapped in a link.\n   * The link points to a location outside of the user-app where a message can be sent to a user with a given id.\n   * @param {string} userId\n   */\n\n\n  renderSendMessageBtn(userId) {\n    const url = `${api.getContextPath()}/dhis-web-messaging/#/PRIVATE/create/${userId}`;\n    return <RaisedButton style={styles.raisedButton} label={i18n.t('Send message')} secondary={true} containerElement={<a href={url}> </a>} icon={<ContentSend />} />;\n  }\n\n  renderPropertyFields() {\n    const {\n      summaryObject,\n      config\n    } = this.props;\n    const labelCellStyle = { ...styles.cell,\n      ...styles.valueCell\n    };\n    return config.map((field, index) => {\n      const {\n        key,\n        removeText,\n        parseDate,\n        parseDateTime,\n        nestedPropselector,\n        parseArrayAsCommaDelimitedString,\n        count\n      } = field;\n      let {\n        label\n      } = field;\n      label = i18n.t(label);\n      let value = summaryObject[key];\n\n      if (typeof value === 'undefined') {\n        value = '';\n      } else {\n        if (nestedPropselector) {\n          nestedPropselector.forEach(selector => {\n            value = value[selector];\n          });\n        }\n\n        if (parseArrayAsCommaDelimitedString) {\n          // Some nested lists come through as a modelCollection but others are already arrays\n          if (typeof value.toArray === 'function') {\n            value = value.toArray();\n          }\n\n          value = value.map(item => item[parseArrayAsCommaDelimitedString]).join(', ');\n        }\n\n        if (removeText) {\n          value = capitalize(value.replace(removeText, ''));\n        }\n\n        if ((parseDate || parseDateTime) && typeof value === 'string') {\n          value = parseDateFromUTCString(value, parseDateTime);\n        }\n\n        if (count) {\n          if (typeof value.size === 'number') {\n            value = value.size;\n          } else if (typeof value.length === 'number') {\n            value = value.length;\n          }\n        }\n      }\n\n      return <tr key={index}>\n                    <td style={labelCellStyle}>{label}</td>\n                    <td style={styles.cell}>{value}</td>\n                </tr>;\n    });\n  }\n\n  render() {\n    const {\n      summaryObject,\n      baseName\n    } = this.props;\n\n    if (summaryObject === null) {\n      return <LoadingMask />;\n    }\n\n    if (typeof summaryObject === 'string') {\n      const errorText = i18n.t(`There was an error fetching the ${baseName}`);\n      return <ErrorMessage introText={errorText} errorMessage={summaryObject} />;\n    }\n\n    const {\n      id,\n      displayName,\n      access\n    } = summaryObject;\n    const plural = `${baseName}s`,\n          baseRoute = `/${kebabCase(plural)}`,\n          backTooltip = i18n.t(`Back to ${plural}`),\n          editLink = `${baseRoute}/edit/${id}`,\n          editLabel = this.getLabelForEntity(baseName);\n    return <main style={styles.main}>\n                <Heading style={styles.heading}>\n                    <IconLink to={baseRoute} tooltip={backTooltip} icon=\"arrow_back\" />\n                    {displayName}\n\n                    {access.update ? <RaisedButton style={styles.raisedButton} label={editLabel} primary={true} containerElement={<Link to={editLink} />} icon={<ImageEdit />} /> : null}\n\n                    {baseName === USER ? this.renderSendMessageBtn(id) : null}\n                </Heading>\n                <Paper style={styles.paper}>\n                    <table>\n                        <tbody>{this.renderPropertyFields()}</tbody>\n                    </table>\n                </Paper>\n            </main>;\n  }\n\n}\n\nDetailSummary.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  config: PropTypes.array.isRequired,\n  getItem: PropTypes.func.isRequired,\n  routeId: PropTypes.string.isRequired,\n  summaryObject: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  summaryObject: state.currentItem\n});\n\nexport default connect(mapStateToProps, {\n  getItem\n})(DetailSummary);","import i18n from '@dhis2/d2-i18n';\n\nconst getBaseFields = () => [{\n  key: 'displayName',\n  label: i18n.t('Display name')\n}, {\n  key: 'id',\n  label: i18n.t('ID')\n}];\n\nexport const getUserProfile = () => [...getBaseFields(), {\n  key: 'userCredentials',\n  nestedPropselector: ['lastLogin'],\n  label: i18n.t('Last login'),\n  parseDateTime: true\n}, {\n  key: 'created',\n  label: i18n.t('Created'),\n  parseDate: true\n}, {\n  key: 'surname',\n  label: i18n.t('Surname')\n}, {\n  key: 'firstName',\n  label: i18n.t('First name')\n}, {\n  key: 'introduction',\n  label: i18n.t('Introduction')\n}, {\n  key: 'jobTitle',\n  label: i18n.t('Job title')\n}, {\n  key: 'employer',\n  label: i18n.t('Works at')\n}, {\n  key: 'education',\n  label: i18n.t('Education')\n}, {\n  key: 'interests',\n  label: i18n.t('Interests')\n}, {\n  key: 'nationality',\n  label: i18n.t('Nationality')\n}, {\n  key: 'birthday',\n  label: i18n.t('Birthday'),\n  parseDate: true\n}, {\n  key: 'gender',\n  label: i18n.t('Gender'),\n  removeText: 'gender_'\n}, {\n  key: 'languages',\n  label: i18n.t('Speaks')\n}, {\n  key: 'email',\n  label: i18n.t('E-mail')\n}, {\n  key: 'phoneNumber',\n  label: i18n.t('Mobile phone number')\n}, {\n  key: 'organisationUnits',\n  label: i18n.t('Organisations units'),\n  parseArrayAsCommaDelimitedString: 'displayName'\n}, {\n  key: 'userCredentials',\n  label: i18n.t('User roles'),\n  nestedPropselector: ['userRoles'],\n  parseArrayAsCommaDelimitedString: 'displayName'\n}];\nexport const getUserRoleDetails = () => [...getBaseFields(), {\n  key: 'users',\n  label: i18n.t('Members'),\n  count: true\n}];\nexport const getUserGroupDetails = () => [...getBaseFields(), {\n  key: 'users',\n  label: i18n.t('Number of users'),\n  count: true\n}];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserProfile } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a User instance\n * @class\n */\n\nconst UserProfile = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserProfile()} baseName={USER} />;\n\nUserProfile.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default UserProfile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Link } from 'react-router-dom';\nconst style = {\n  width: '100%',\n  textAlign: 'center',\n  padding: '1.5rem 1.5rem 1rem'\n};\n/**\n * Will display when no matching route was found.\n * Renders text and the pathname that is in the URL after the `/#`\n * @class\n */\n\nconst PageNotFound = ({\n  location\n}) => <div style={style}>\n        <h1>{i18n.t('Page not found.')}</h1>\n        <h3>\n            {i18n.t('No match for')}\n            <code> {location.pathname}</code>\n        </h3>\n        <Link to=\"/\"> {i18n.t('Go back home')}</Link>\n    </div>;\n\nPageNotFound.propTypes = {\n  location: PropTypes.object.isRequired\n};\nexport default PageNotFound;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Card from 'material-ui/Card/Card';\nimport CardHeader from 'material-ui/Card/CardHeader';\nimport CardText from 'material-ui/Card/CardText';\nimport CardActions from 'material-ui/Card/CardActions';\nimport IconButton from 'material-ui/IconButton/IconButton';\nimport navigateTo from '../utils/navigateTo';\nimport { getSections } from '../constants/routeConfig';\nconst cardStyle = {\n  padding: '0',\n  margin: '.5rem',\n  marginTop: '1rem',\n  float: 'left',\n  width: '230px'\n};\nconst headerStyle = {\n  padding: '1rem',\n  height: 'auto',\n  borderBottom: '1px solid #ddd',\n  cursor: 'pointer',\n  fontWeight: 'bold'\n};\nconst textStyle = {\n  height: '85px',\n  padding: '.5rem 1rem'\n};\nconst actionStyle = {\n  textAlign: 'right'\n};\n/**\n * Conditionally renders cards representing the different sections present in the user-app\n * Cards will only be displayed if the current user can create or delete a model type.\n */\n\nclass CardLinks extends Component {\n  renderActionButtons(card, canList, canCreate) {\n    const actionButtons = [];\n    const createPath = `${card.path}/new`;\n\n    if (canCreate) {\n      actionButtons.push(<IconButton key=\"add\" iconClassName=\"material-icons\" tooltip={i18n.t('Add')} tooltipPosition=\"top-center\" onClick={() => navigateTo(createPath)}>\n                    &#xE145;\n                </IconButton>);\n    }\n\n    if (canList) {\n      actionButtons.push(<IconButton key=\"list\" iconClassName=\"material-icons\" tooltip={i18n.t('list')} tooltipPosition=\"top-center\" onClick={() => navigateTo(card.path)}>\n                    &#xE8EF;\n                </IconButton>);\n    }\n\n    return actionButtons;\n  }\n\n  renderCard = (card, index) => {\n    const {\n      currentUser,\n      models\n    } = this.context.d2; // Based on input from Lars:\n    // \"you should hide menu items for which the user has no \"add\" or \"delete\" authority\"\n\n    const canCreate = currentUser.canCreate(models[card.entityType]);\n    const canDelete = currentUser.canDelete(models[card.entityType]);\n    const canList = canCreate || canDelete;\n\n    if (!canList) {\n      return null;\n    }\n\n    return <Card key={`card-${index}`} style={cardStyle}>\n                <CardHeader onClick={() => navigateTo(card.path)} style={headerStyle} title={card.label} />\n                <CardText style={textStyle}>{card.description}</CardText>\n                <CardActions style={actionStyle}>\n                    {this.renderActionButtons(card, canList, canCreate)}\n                </CardActions>\n            </Card>;\n  };\n\n  render() {\n    const cards = getSections().map(this.renderCard);\n\n    if (cards.length === 0) {\n      return <div>\n                    {i18n.t('You do not have access to any section of the DHIS 2 User Management App')}\n                </div>;\n    }\n\n    return cards;\n  }\n\n}\n\nCardLinks.contextTypes = {\n  d2: PropTypes.object\n};\nexport default CardLinks;","/**\n * Defines the RoleList context menu for current user on a given UserRole model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/RoleList/RoleContextMenuActions\n */\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions';\nconst show_details = 'show_details';\nconst sharing_settings = 'sharing_settings';\nconst edit = 'edit';\nconst remove = 'remove';\n/**\n * Determines whether a specific user role action should be visible for current user and given UserRole instance\n * @param {Object} model - d2 UserRole model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isRoleContextActionAllowed = (model, action) => {\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access\n  } = model;\n\n  switch (action) {\n    case show_details:\n      return access.read;\n\n    case sharing_settings:\n      return access.manage;\n\n    case edit:\n      return access.update;\n\n    case remove:\n      return access.delete;\n\n    default:\n      return true;\n  }\n};\nexport const roleContextMenuIcons = {\n  [show_details]: 'info',\n  [sharing_settings]: 'share',\n  [edit]: 'edit',\n  [remove]: 'delete'\n};\nexport const roleContextMenuActions = Action.createActionsFromNames([[show_details], [sharing_settings], [edit], [remove]]);\nroleContextMenuActions.show_details.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-roles/view/${id}`);\n});\nroleContextMenuActions.sharing_settings.subscribe(openSharingSettings);\nroleContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-roles/edit/${id}`);\n});\nroleContextMenuActions.remove.subscribe(({\n  data: role\n}) => {\n  const params = {\n    model: role,\n    entityType: USER_ROLE\n  };\n  deleteModel(params);\n});","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport List from '../../components/List';\nimport { roleContextMenuActions, roleContextMenuIcons, isRoleContextActionAllowed } from './RoleContextMenuActions';\nimport SearchFilter from '../../components/SearchFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserRoles\n * @class\n */\n\nconst RoleList = () => <List entityType={USER_ROLE} filterComponent={SearchFilter} columns={['displayName', 'description']} primaryAction={roleContextMenuActions.edit} contextMenuActions={roleContextMenuActions} contextMenuIcons={roleContextMenuIcons} isContextActionAllowed={isRoleContextActionAllowed} sectionName={i18n.t('User Role Management')} newItemPath={'/user-roles/new'} className={'role-list'} />;\n\nexport default RoleList;","import RoleList from './RoleList';\nexport default RoleList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER_ROLE } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserRoleDetails } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a UserRole instance\n * @class\n */\n\nconst RoleDetails = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserRoleDetails()} baseName={USER_ROLE} />;\n\nRoleDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default RoleDetails;","/**\n * Defines the GroupList context menu for current user on a given UserGroup model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/GroupList/GroupContextMenuActions\n */\nimport i18n from '@dhis2/d2-i18n';\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport api from '../../api';\nimport store from '../../store';\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport { showSnackbar, refreshCurrentUser } from '../../actions';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nconst show_details = 'show_details';\nconst sharing_settings = 'sharing_settings';\nconst edit = 'edit';\nconst join_group = 'join_group';\nconst leave_group = 'leave_group';\nconst remove = 'remove';\n/**\n * Determines whether a specific user group action should be visible for current user and given UserGroup instance\n * @param {Object} model - d2 UserGroup model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isGroupContextActionAllowed = (model, action) => {\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access\n  } = model;\n\n  switch (action) {\n    case show_details:\n      return access.read;\n\n    case sharing_settings:\n      return access.manage;\n\n    case edit:\n      return access.update;\n\n    case join_group:\n      return access.update && !model.currentUserIsMember;\n\n    case leave_group:\n      return access.update && model.currentUserIsMember;\n\n    case remove:\n      return access.delete;\n\n    default:\n      return true;\n  }\n};\nexport const groupContextMenuIcons = {\n  [show_details]: 'info',\n  [sharing_settings]: 'share',\n  [edit]: 'edit',\n  [join_group]: 'group_add',\n  [leave_group]: 'exit_to_app',\n  [remove]: 'delete'\n};\nexport const groupContextMenuActions = Action.createActionsFromNames([show_details, sharing_settings, edit, join_group, leave_group, remove]);\n\nconst updateGroupMembership = async ({\n  displayName,\n  id\n}, deleteMembership) => {\n  try {\n    await api.updateCurrentUserGroupMembership(id, deleteMembership);\n    const baseMsg = deleteMembership ? i18n.t('You left group') : i18n.t('You joined group');\n    store.dispatch(showSnackbar({\n      message: `${baseMsg} ${displayName}`\n    }));\n    store.dispatch(refreshCurrentUser());\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating your group membership'))\n    }));\n  }\n};\n\ngroupContextMenuActions.show_details.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-groups/view/${id}`);\n});\ngroupContextMenuActions.sharing_settings.subscribe(openSharingSettings);\ngroupContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-groups/edit/${id}`);\n});\ngroupContextMenuActions.join_group.subscribe(({\n  data\n}) => {\n  updateGroupMembership(data, false);\n});\ngroupContextMenuActions.leave_group.subscribe(({\n  data\n}) => {\n  updateGroupMembership(data, true);\n});\ngroupContextMenuActions.remove.subscribe(({\n  data: group\n}) => {\n  const params = {\n    model: group,\n    entityType: USER_GROUP\n  };\n  deleteModel(params);\n});","import React, { Component } from 'react';\nimport List from '../../components/List';\nimport i18n from '@dhis2/d2-i18n';\nimport { isGroupContextActionAllowed, groupContextMenuIcons, groupContextMenuActions } from './GroupContextMenuActions';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport SearchFilter from '../../components/SearchFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserGroups\n */\n\nclass GroupList extends Component {\n  render() {\n    return <List entityType={USER_GROUP} filterComponent={SearchFilter} columns={['displayName', 'currentUserIsMember']} primaryAction={groupContextMenuActions.edit} contextMenuActions={groupContextMenuActions} contextMenuIcons={groupContextMenuIcons} isContextActionAllowed={isGroupContextActionAllowed} sectionName={i18n.t('User Group Management')} newItemPath={'/user-groups/new'} className={'group-list'} />;\n  }\n\n}\n\nexport default GroupList;","import GroupList from './GroupList';\nexport default GroupList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER_GROUP } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserGroupDetails } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a UserGroup instance\n * @class\n */\n\nconst GroupDetails = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserGroupDetails()} baseName={USER_GROUP} />;\n\nGroupDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default GroupDetails;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport UserList from '../containers/UserList';\nimport FormLoader from '../components/FormLoader';\nimport UserProfile from '../containers/UserProfile';\nimport PageNotFound from '../components/PageNotFound';\nimport CardLinks from '../components/CardLinks';\nimport RoleList from '../containers/RoleList';\nimport RoleDetails from '../containers/RoleDetails';\nimport GroupList from '../containers/GroupList';\nimport GroupDetails from '../containers/GroupDetails';\nimport { USER, USER_ROLE, USER_GROUP } from './entityTypes';\n\nconst getUserSection = () => ({\n  key: 'user_section',\n  label: i18n.t('User'),\n  icon: 'person',\n  path: '/users',\n  description: i18n.t('Create, modify, view and delete Users'),\n  component: UserList,\n  entityType: USER\n});\n\nconst getUserRoleSection = () => ({\n  key: 'user_role_section',\n  label: i18n.t('User role'),\n  icon: 'folder_shared',\n  path: '/user-roles',\n  description: i18n.t('Create, modify, view and delete User Roles'),\n  component: RoleList,\n  entityType: USER_ROLE\n});\n\nconst getUserGroupSection = () => ({\n  key: 'user_group_section',\n  label: i18n.t('User group'),\n  icon: 'group',\n  path: '/user-groups',\n  description: i18n.t('Create, modify, view and delete User Groups'),\n  component: GroupList,\n  entityType: USER_GROUP\n}); // Label property is used in sidebar, so routes without a label will be omitted\n\n\nconst createRouteConfig = () => [// USER\n{\n  key: 'user_new_view',\n  path: '/users/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER} {...props} />,\n  entityType: USER\n}, {\n  key: 'user_edit_view',\n  path: '/users/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER} {...props} />,\n  entityType: USER\n}, {\n  key: 'user_profile_view',\n  path: '/users/view/:id',\n  component: UserProfile,\n  entityType: USER\n}, getUserSection(), // ROLE\n{\n  key: 'user_role_new_view',\n  path: '/user-roles/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n  entityType: USER_ROLE\n}, {\n  key: 'user_role_edit_view',\n  path: '/user-roles/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n  entityType: USER_ROLE\n}, {\n  key: 'user_role_details_view',\n  path: '/user-roles/view/:id',\n  component: RoleDetails,\n  entityType: USER_ROLE\n}, getUserRoleSection(), // GROUP\n{\n  key: 'user_group_new_view',\n  path: '/user-groups/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n  entityType: USER_GROUP\n}, {\n  key: 'user_group_edit_view',\n  path: '/user-groups/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n  entityType: USER_GROUP\n}, {\n  key: 'user_group_details_view',\n  path: '/user-groups/view/:id',\n  component: GroupDetails,\n  entityType: USER_GROUP\n}, getUserGroupSection(), // Other\n{\n  key: 'landing_page',\n  path: '/',\n  component: CardLinks\n}, {\n  key: 'not_found',\n  component: PageNotFound\n}];\n\nexport const getSections = (() => {\n  let sections = null;\n  return () => {\n    if (!sections) {\n      sections = [getUserSection(), getUserRoleSection(), getUserGroupSection()];\n    }\n\n    return sections;\n  };\n})();\nexport default (() => {\n  let routeConfig = null;\n  return () => {\n    if (!routeConfig) {\n      routeConfig = createRouteConfig();\n    }\n\n    return routeConfig;\n  };\n})();","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Sidebar } from '@dhis2/d2-ui-core';\nconst style = {\n  display: 'flex',\n  flex: '0 0 320px'\n};\n/**\n * Renders the sidebar containing the available sections.\n * If its on a path/route that doesn't match any section it will render null.\n * This is because when a form or the CardLinks are displayed, the sidebar should not show.\n */\n\nclass SideNav extends Component {\n  changeSectionHandler = key => {\n    const {\n      sections,\n      history\n    } = this.props;\n    const section = sections.find(section => section.key === key);\n    history.push(section.path);\n  };\n\n  render() {\n    const {\n      sections,\n      location: {\n        pathname\n      }\n    } = this.props;\n    const sectionForPath = sections.find(section => section.path === pathname);\n    const onLandingPage = pathname === '/';\n    const sectionKey = sectionForPath ? sectionForPath.key : null;\n\n    if (!sectionForPath && !onLandingPage) {\n      return null;\n    }\n\n    return <div style={style}>\n                <Sidebar sections={sections} onChangeSection={this.changeSectionHandler} currentSection={sectionKey} />\n            </div>;\n  }\n\n}\n\nSideNav.propTypes = {\n  history: PropTypes.object.isRequired,\n  sections: PropTypes.array.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  })\n};\nexport default withRouter(SideNav);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { initCurrentUser } from '../actions';\nimport { LoadingMask } from '@dhis2/d2-ui-core';\nimport ErrorMessage from './ErrorMessage';\nimport getRouteConfig from '../constants/routeConfig';\nimport SideNav from './SideNav';\nimport navigateTo from '../utils/navigateTo';\nconst style = {\n  display: 'flex',\n  flex: '1 1 0%',\n  paddingRight: '2rem',\n  paddingTop: '1rem'\n};\n/**\n * This component prepares the user-app sections and routes based on the current user's authorities\n * The sections will be rendered in the SideNav and the routes within a react-router Switch component\n */\n\nclass SectionLoader extends Component {\n  componentDidMount() {\n    const {\n      initCurrentUser,\n      currentUser\n    } = this.props;\n\n    if (!currentUser) {\n      initCurrentUser();\n    } else {\n      this.setRouteConfig(currentUser);\n    }\n  }\n\n  componentWillReceiveProps({\n    currentUser,\n    location: {\n      pathname\n    }\n  }) {\n    this.setRouteConfig(currentUser); // Navigate home if the current user has edited a setting that restricts\n    // him from an active section. I.e. adjusting his own user role\n    // so he cannot edit user roles anymore\n\n    if (currentUser && currentUser !== this.props.currentUser && pathname !== '/' && !this.pathHasAvailableSection(pathname)) {\n      navigateTo('/');\n    }\n  }\n\n  pathHasAvailableSection(pathname) {\n    if (!this.routeConfig) {\n      return false;\n    }\n\n    const {\n      sections\n    } = this.routeConfig;\n    return Boolean(sections && sections.find(section => pathname.includes(section.path.split(':')[0])));\n  }\n\n  setRouteConfig(currentUser) {\n    this.routeConfig = !currentUser ? null : getRouteConfig().reduce((routeConfig, configItem) => {\n      const {\n        routes,\n        sections\n      } = routeConfig;\n\n      if (this.userHasAuthorities(configItem, currentUser)) {\n        routes.push(configItem);\n\n        if (configItem.label) {\n          sections.push(configItem);\n        }\n      }\n\n      return routeConfig;\n    }, {\n      routes: [],\n      sections: []\n    });\n  }\n\n  userHasAuthorities({\n    entityType\n  }, currentUser) {\n    if (!entityType) {\n      return true;\n    }\n\n    const {\n      models\n    } = this.context.d2;\n    const canCreate = currentUser.canCreate(models[entityType]);\n    const canDelete = currentUser.canDelete(models[entityType]);\n    return canCreate || canDelete;\n  }\n\n  renderRoutes(routes) {\n    return routes.map(section => <Route key={section.key} exact strict {...section} />);\n  }\n\n  renderContent() {\n    const {\n      currentUser\n    } = this.props;\n\n    if (!currentUser) {\n      return <LoadingMask />;\n    }\n\n    if (typeof currentUser === 'string') {\n      const introText = i18n.t('There was an error loading the current user');\n      return <ErrorMessage introText={introText} errorMessage={currentUser} />;\n    }\n\n    const {\n      routes,\n      sections\n    } = this.routeConfig;\n\n    if (sections && sections.length === 0) {\n      const introText = i18n.t('You do not have authorities to see users, user roles or user groups');\n      return <ErrorMessage introText={introText} errorMessage=\"\" />;\n    }\n\n    return [<SideNav key=\"sidenav\" sections={sections} />, <Switch key=\"routeswitch\">{this.renderRoutes(routes)}</Switch>];\n  }\n\n  render() {\n    return <main style={style}>{this.renderContent()}</main>;\n  }\n\n}\n\nSectionLoader.contextTypes = {\n  d2: PropTypes.object\n};\nSectionLoader.propTypes = {\n  initCurrentUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nconst mapStateToProps = ({\n  currentUser\n}) => ({\n  currentUser\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  initCurrentUser\n})(SectionLoader));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\nimport { hideSnackbar } from '../actions';\n/**\n * A small wrapper around the  MUI Snackbar so it can easily be controlled by state\n * @class\n */\n\nconst SnackbarContainer = ({\n  open,\n  snackbarProps,\n  hideSnackbar\n}) => {\n  const defaults = {\n    autoHideDuration: 6000,\n    onRequestClose: hideSnackbar,\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    // Forces text to stay on one line\n    bodyStyle: {\n      maxWidth: '100%'\n    },\n    // Overrides the default max-width of 587px\n    contentStyle: {\n      display: 'flex'\n    } // Forces the confirm button to be on the same line as the text\n\n  };\n  const finalProps = { ...defaults,\n    ...snackbarProps\n  };\n  return <Snackbar open={open} {...finalProps} />;\n};\n\nSnackbarContainer.propTypes = {\n  hideSnackbar: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  snackbarProps: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.snackbar.show,\n  snackbarProps: state.popups.snackbar.props\n});\n\nexport default connect(mapStateToProps, {\n  hideSnackbar\n})(SnackbarContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Dialog from 'material-ui/Dialog';\n/**\n * A thin wrapper around the MUI Dialog component so it can easily be controlled by redux state\n * @class\n */\n\nconst DialogContainer = ({\n  open,\n  dialogProps,\n  content\n}) => <Dialog key=\"dialog\" open={open} {...dialogProps}>\n        {content}\n    </Dialog>;\n\nDialogContainer.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  content: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.dialog.show,\n  dialogProps: state.popups.dialog.props,\n  content: state.popups.dialog.content\n});\n\nexport default connect(mapStateToProps)(DialogContainer);","import SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport api from '../api';\nimport { hideSharingDialog } from '../actions';\n/**\n * A small wrapper around the d2-ui SharingDialog so it can easily be controlled by state\n * @class\n */\n\nconst SharingDialogContainer = ({\n  open,\n  id,\n  type,\n  hideSharingDialog\n}) => {\n  return <SharingDialog open={open} id={id} type={type} onRequestClose={hideSharingDialog} d2={api.getD2()} />;\n};\n\nSharingDialogContainer.propTypes = {\n  hideSharingDialog: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  id: PropTypes.string,\n  type: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.sharing.show,\n  id: state.popups.sharing.id,\n  type: state.popups.sharing.type\n});\n\nexport default connect(mapStateToProps, {\n  hideSharingDialog\n})(SharingDialogContainer);","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport history from './utils/history';\nimport SectionLoader from './components/SectionLoader';\nimport SnackbarContainer from './components/SnackbarContainer';\nimport DialogContainer from './components/DialogContainer';\nimport SharingDialogContainer from './components/SharingDialogContainer';\n/**\n * Main Component\n * @class\n */\n\nconst App = () => <div>\n        <Router history={history} hashType={'noslash'}>\n            <SectionLoader />\n        </Router>\n        <SnackbarContainer />\n        <DialogContainer />\n        <SharingDialogContainer />\n    </div>;\n\nexport default App;","import Spacing from 'material-ui/styles/spacing';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { blue100, blue500, blue700, grey100, grey400, orange500, orangeA200, darkBlack, white } from 'material-ui/styles/colors';\nimport { fade } from 'material-ui/utils/colorManipulator';\nconst theme = {\n  spacing: Spacing,\n  fontFamily: 'Roboto, sans-serif',\n  palette: {\n    primary1Color: blue500,\n    primary2Color: blue700,\n    primary3Color: blue100,\n    accent1Color: orange500,\n    accent2Color: grey100,\n    accent3Color: orangeA200,\n    textColor: darkBlack,\n    alternateTextColor: white,\n    canvasColor: white,\n    borderColor: grey400,\n    disabledColor: fade(darkBlack, 0.3)\n  }\n};\nconst muiTheme = getMuiTheme(theme);\nexport default Object.assign({}, muiTheme, {\n  forms: {\n    minWidth: 350,\n    maxWidth: 750\n  },\n  formInput: {\n    fontWeight: 100\n  }\n});","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport PropTypes from 'prop-types';\nimport theme from '../theme';\n/**\n * Component that adds d2 to the context and applies the dhis2 theme\n * @param {Object} props\n * @param {Object} props.d2 - The d2 instance to add to the context of children\n * @class\n */\n\nclass AppWithD2ContextAndTheme extends Component {\n  getChildContext = () => ({\n    d2: this.props.d2\n  });\n  render = () => <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>;\n}\n\nAppWithD2ContextAndTheme.childContextTypes = {\n  d2: PropTypes.object\n};\nAppWithD2ContextAndTheme.propTypes = {\n  children: PropTypes.object.isRequired,\n  d2: PropTypes.object\n};\nexport default AppWithD2ContextAndTheme;","import React from 'react';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Provider } from 'react-redux';\nimport api from './api';\nimport App from './App';\nimport store from './store';\nimport AppWithD2ContextAndTheme from './components/AppWithD2ContextAndTheme';\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\nimport './styles/styles.css';\nimport { CircularProgress } from 'material-ui';\n\nconst AppWrapper = () => {\n  const {\n    d2\n  } = useD2({\n    d2Config: {\n      schemas: ['userRole', 'user', 'userGroup', 'userCredentials', 'organisationUnit']\n    },\n    i18nRoot: './d2i18n',\n    onInitialized: d2 => {\n      api.init(d2);\n    }\n  });\n\n  if (!d2) {\n    return <AppWithD2ContextAndTheme>\n                <div className=\"page-loader-wrap\">\n                    <CircularProgress size={48} />\n                </div>\n            </AppWithD2ContextAndTheme>;\n  }\n\n  return <Provider store={store}>\n            <AppWithD2ContextAndTheme d2={d2}>\n                <App />\n            </AppWithD2ContextAndTheme>\n        </Provider>;\n};\n\nexport default AppWrapper;"],"sourceRoot":""}