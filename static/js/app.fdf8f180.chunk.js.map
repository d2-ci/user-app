{"version":3,"sources":["D2App/constants/actionTypes.js","D2App/reducers/list.js","D2App/constants/defaults.js","D2App/reducers/filter.js","D2App/reducers/pager.js","D2App/reducers/currentItem.js","D2App/reducers/currentUser.js","D2App/reducers/popups/snackbar.js","D2App/reducers/popups/dialog.js","D2App/reducers/popups/sharing.js","D2App/reducers/popups/index.js","D2App/store.js","D2App/constants/queryFields.js","D2App/utils/asArray.js","D2App/utils/getNestedProp.js","D2App/components/ErrorMessage.js","D2App/utils/createHumanErrorMessage.js","D2App/components/SearchableGroupEditor.js","D2App/components/AsyncAutoComplete.js","D2App/components/SearchableOrgUnitTree.js","D2App/components/AuthorityEditor/AuthorityFilter.js","D2App/components/AuthorityEditor/utils/filterAuthorities.js","D2App/components/AuthorityEditor/HighlightableText.js","D2App/components/AuthorityEditor/AuthorityItem.js","D2App/components/AuthorityEditor/utils/authorityGroupNames.js","D2App/components/AuthorityEditor/utils/groupAuthorities.js","D2App/components/AuthorityEditor/AuthorityGroup.js","D2App/components/AuthorityEditor/AuthoritySection.js","D2App/components/AuthorityEditor/FilteredAuthoritySections.js","D2App/components/AuthorityEditor/AuthorityEditor.js","D2App/components/AuthorityEditor/index.js","D2App/utils/fieldRenderers.js","D2App/containers/GroupForm/config.js","D2App/selectors/index.js","D2App/containers/UserForm/config.js","D2App/constants/entityTypes.js","D2App/utils/validators.js","D2App/utils/browserHasDateInputSupport.js","D2App/utils/attributeFieldHelpers.js","D2App/api/utils.js","D2App/api/index.js","D2App/utils/history.js","D2App/actions/index.js","D2App/utils/navigateTo.js","D2App/components/List/booleanValueRenderer.js","D2App/components/List/List.js","D2App/components/List/index.js","D2App/utils/detectCurrentUserChanges.js","D2App/utils/sharedActions.js","D2App/utils/validatorsAsync.js","D2App/components/ReplicateUserForm.js","D2App/containers/UserList/UserContextMenuActions.js","D2App/components/OrganisationUnitFilter.js","D2App/components/OrganisationUnitInput.js","D2App/constants/filterFieldNames.js","D2App/components/SearchFilter.js","D2App/containers/UserList/UserFilter.js","D2App/containers/UserList/UserList.js","D2App/containers/UserList/index.js","D2App/components/IconLink.js","D2App/containers/RoleForm/RoleForm.js","D2App/containers/RoleForm/config.js","D2App/containers/RoleForm/index.js","D2App/containers/GroupForm/GroupForm.js","D2App/containers/GroupForm/collectValidators.js","D2App/containers/GroupForm/index.js","D2App/containers/UserForm/collectValidators.js","D2App/containers/UserForm/UserForm.js","D2App/containers/UserForm/index.js","D2App/components/FormLoader.js","D2App/utils/parseDateFromUTCString.js","D2App/components/DetailSummary.js","D2App/constants/detailFieldConfigs.js","D2App/containers/UserProfile.js","D2App/components/PageNotFound.js","D2App/components/CardLinks.js","D2App/containers/RoleList/RoleContextMenuActions.js","D2App/containers/RoleList/RoleList.js","D2App/containers/RoleList/index.js","D2App/containers/RoleDetails.js","D2App/containers/GroupList/GroupContextMenuActions.js","D2App/containers/GroupList/GroupList.js","D2App/containers/GroupList/index.js","D2App/containers/GroupDetails.js","D2App/constants/routeConfig.js","D2App/components/SideNav.js","D2App/components/SectionLoader.js","D2App/components/SnackbarContainer.js","D2App/components/DialogContainer.js","D2App/components/SharingDialogContainer.js","D2App/App.js","D2App/theme.js","D2App/components/AppWithD2ContextAndTheme.js","D2App/AppWrapper.js"],"names":["initialState","type","items","listReducer","state","payload","message","LIST_FILTER","query","inactiveMonths","selfRegistered","invitationStatus","organisationUnits","INITIAL_SNACKBAR_STATE","show","props","INITIAL_DIALOG_STATE","content","INITIAL_SHARING_STATE","id","filterReducer","DEFAULT_FILTER","updateKey","updateValue","pagerReducer","pager","currentItemReducer","currentUserReducer","snackbarReducer","dialogReducer","sharingReducer","popupsReducer","combineReducers","snackbar","dialog","sharing","middlewares","ReduxThunk","rootReducer","list","filter","currentItem","currentUser","popups","form","formReducer","createStore","applyMiddleware","USER_GROUP_LIST","USER_ROLE_LIST","CURRENT_USER_ORG_UNITS_FIELDS","fields","ORG_UNITS_QUERY_CONFIG","paging","FIELDS","USER_LIST","USER_DETAILS","USER_GROUP_DETAILS","USER_ROLE_DETAILS","asArray","input","toArray","getNestedProp","propertyPathStr","parent","split","reduce","currentLevel","propName","style","clear","color","backgroundColor","padding","fontSize","width","ErrorMessage","introText","errorMessage","createHumanErrorMessage","messages","httpStatusCode","fallbackMsg","fallback","i18n","t","useMessage","length","map","join","styles","outerWrap","paddingTop","paddingBottom","headerWrap","display","headerSpacer","flex","header","error","red500","errorText","marginLeft","SearchableGroupEditor","Component","constructor","super","availableItemsReceivedHandler","response","initiallyAssignedItems","returnModelsOnUpdate","this","itemStore","assignedItemStore","modelLookup","Map","assignedItems","availableItems","item","set","text","displayName","name","value","setState","onAssignItems","assigned","concat","update","onRemoveItems","indexOf","updateFilterText","event","filterText","target","Store","create","fetchErrorMsg","availableItemsQuery","assignedItemIds","onChange","onBlur","get","Promise","resolve","renderHeader","availableItemsHeader","assignedItemsHeader","assignedStyle","level","renderSearchInput","fullWidth","floatingLabelText","hintText","marginTop","renderGroupEditor","height","render","info","blue500","warning","orange500","loaderDataSource","textAlign","baseState","filteredItems","searchWarning","errorStyle","AsyncAutoComplete","onAutoCompleteChange","autoCompleteText","getItems","async","minCharLength","queryParam","minCharCount","trashableQuery","makeTrashable","filteredResults","model","onItemSelect","dataSourceItem","selectHandler","debounceTime","queryDebounceTime","debounce","componentWillUnmount","trash","autoCompleteProps","mergedAutoCompleteProps","marginBottom","mergedProps","onUpdateInput","onNewRequest","searchText","dataSource","floatingLabelShrinkStyle","menuStyle","maxHeight","defaultProps","wrapper","minHeight","position","scrollBox","overflowY","borderRadius","loader","top","left","transform","buttonStrip","buttonMargin","marginRight","headerError","SearchableOrgUnitTree","toggleSelectedOrgUnits","_","orgUnit","selectedOrgUnits","orgUnitIndex","getIndexOfOrgUnit","newOrgUnits","slice","selectAndShowFilteredOrgUnit","initiallyExpanded","removeLastPathSegment","clearSelection","defer","applySelection","confirmSelection","roots","orgUnitFilter","getInitiallyExpandedItems","orgUnits","expandedUnits","strippedPath","push","selectedUnit","find","unit","path","substr","lastIndexOf","updateObject","cancel","orgUnitType","headerText","wrapperStyle","selected","headerStyle","api","queryOrgUnits","onSelectClick","orgUnitsPathsToInclude","label","primary","onClick","disabled","secondary","connect","orgUnitRootsSelector","AuthorityFilter","onSelectedOnlyChange","selectedOnly","onFilterChange","searchStr","onSearchStrChange","className","checked","onCheck","filterAuthorities","allAuthorities","selectedItemsLookup","searchChunks","Object","keys","filtered","key","section","allowedBySearchStr","strToMatch","toLowerCase","some","chunk","matchesSearchStr","allowedBySelectedSetting","lookup","subItem","Boolean","matchesSelectedSetting","HighlightableText","highlightClassName","searchWords","autoEscape","textToHighlight","AuthorityItem","onChecked","authSubject","onCheckedCallBack","withLabel","context","empty","implicit","contextTypes","PropTypes","array","getEmptyGroupedAuthorities","emptyGroupedAuthorities","metadata","headers","apps","tracker","importExport","system","ALL_METADATA_SUFFIXES","EMPTY_GROUP_ITEM","IMPLICIT_GROUP_ITEM","AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE","Set","AUTHORITY_GROUPS","sortGroupedAuthorities","groupedAuthories","forEach","group","sortBy","hasNoGroupSuffix","auth","suffix","endsWith","createMetadataGroup","authSuffix","baseName","replace","genericAdd","externalAccess","hasImplicitAddPrivateAndDelete","has","publicAddAuth","privateAddAuth","deleteAuth","externalAccessAuth","delete","getNameLookup","addToAuthoritySection","groupedAuthorities","groupKey","groupAuthorities","authorities","groupedBase","startsWith","metadataGroup","AuthorityGroup","onAuthGroupChanged","onAuthChange","isPublicAdd","forceUpdate","isPrivateAdd","shouldSelect","publicAddSelected","authGroup","index","implicitSelect","func","isRequired","AuthoritySection","onTableHeadCheck","_event","ids","authSection","renderAuthRow","renderLoaderRow","size","renderInfoRow","errorMsg","msg","renderContent","renderTableHead","allItemsSelected","Array","isArray","every","sectionKey","wrapperClassName","tableClassName","FilteredAuthoritySections","filteredAuthorities","allGroupedAuthorities","updateFilter","getChildContext","componentWillReceiveProps","nextProps","updateFilteredAuthorities","all","object","childContextTypes","AuthorityEditor","filteredAuthSections","reduxFormOnChange","authorityIds","initiallySelected","groupedAuthoritiesPromise","getGroupedAuthorities","handleAuthorityFetchError","total","ref","comp","checkbox","renderDateField","meta","other","asyncValidating","touched","htmlFor","lineHeight","inputWidth","renderTextField","renderAuthorityEditor","reduxFormOnBlur","renderCheckbox","renderSelectField","options","undefined","setTimeout","i","primaryText","renderSearchableGroupEditor","availableItemsLabel","assignedItemsLabel","initialValues","renderSearchableOrgUnitTree","renderText","NAME","CODE","STYLES","loaderWrap","getFields","fieldRenderer","isRequiredField","border","initialItemsSelector","pagerSelector","memoize","pageCount","page","pageSize","pageCalculationValue","startItem","endItem","currentlyShown","listSelector","groupMemberships","listType","modelDefinition","listMappings","user","userName","userCredentials","username","accountExpiry","lastLogin","userRole","userGroup","currentUserIsMember","includes","orgUnitsAsStringSelector","count","addInitialValueFrom","sourceObject","EXPIRE_DATE","expiryDate","Date","formattedDate","date","getFullYear","toString","getMonth","padStart","getDate","DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS","catDimensionConstraints","cogsDimensionConstraints","isUndefined","userFormInitialValuesSelector","locales","attributeFields","INVITE","SET_PASSWORD","USER_PROPS","USER_CRED_PROPS","field","INTERFACE_LANGUAGE","ui","DATABASE_LANGUAGE","db","userGroupFormInitialValuesSelector","getUserGroupFields","analyticsDimensionsRestrictionsSelector","shortItemSelector","systemOrgRoots","systemOrganisationUnitRoots","requestedOrgUnitRoots","fallBackOrgUnitRoots","DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS","orgUnitRoots","inviteUserValueSelector","formState","registeredFields","values","INVITE_USER","toggler","blue600","orgUnitTree","float","togglerWrap","additionalFieldsWrap","USERNAME","EXTERNAL_AUTH","OPEN_ID","LDAP_ID","getBaseCaption","fontStyle","USER","EMAIL_ADDRESS_PATTERN","INTERNATIONAL_PHONE_NUMBER_PATTERN","DATE_PATTERN","LOWER_CASE_PATTERN","UPPER_CASE_PATTERN","DIGIT_PATTERN","SPECIAL_CHARACTER_PATTERN","code","hasValue","test","email","integer","isInteger","negativeInteger","parseInt","number","isNaN","password","allValues","inviteUser","isEditingUser","shouldValidatePassword","passwordError","checkPasswordForErrors","positiveInteger","repeatPassword","required","requiredArray","whatsApp","x","parseFloat","hasDateInputSupport","browserHasDateInputSupport","document","createElement","setAttribute","generateAttributeFields","attributes","userAttributeValues","attribute","valueType","mandatory","unique","optionSet","userAttribute","attributeValue","valueTypeProps","valueTypeMapping","getValueTypeMapping","OPTION_SET","option","TEXT","getValueTypeProps","isAttributeField","shouldBeUnique","attributeId","generateAttributeField","addUniqueAttributesToAsyncBlurFields","asyncBlurFields","parseAttributeValues","fieldTypeLookup","attributeValues","isClearedOptionalDropDown","LONG_TEXT","multiLine","rows","rowsMax","DATE","floatingLabelFixed","fieldValidators","BOOLEAN","TRUE_ONLY","NUMBER","INTEGER","INTEGER_POSITIVE","INTEGER_NEGATIVE","getQueryFields","entityName","detailFields","formattedEntityName","snakeCase","toUpperCase","varName","isSuperUser","addValueAsProp","data","parseLocaleUrl","val","mapLocale","locale","appendUsernameToDisplayName","userModelCollection","userModel","toJSON","getD2","d2","getContextPath","systemInfo","contextPath","getList","requestData","order","userOrgUnits","includeChildren","createListRequestData","getCurrentUser","models","getItem","genericFind","propertyName","on","equals","replicateUser","url","d2Api","post","listConfig","then","store","getState","availableOrgUnits","isAvailableUnit","hasAvailableAncestor","ancestors","ancestor","getRestrictedOrgUnits","getAvailableUserRoles","userRoles","canIssue","getAvailableDataAnalyticsDimensionRestrictions","dimensions","updateDisabledState","patch","disable2FA","twoFA","getSelectedAndAvailableLocales","encodeURIComponent","useDbLocaleOption","dbLocales","uiLocales","uiLocale","settings","dbLocale","available","saveOrInviteUser","initialUiLocale","initialDbLocale","userData","isNewUser","userModelOwnedProperties","getOwnedPropertyNames","userInfo","cred","catCogsDimensionConstraints","constraint","dimensionType","ownedPropName","parseUserSaveData","postUrl","status","reject","typeReport","typeReports","objectReport","objectReports","errorReport","errorReports","parse200Error","localePromises","dbLocalePromise","getManagedUsers","getAvailableUserGroups","userGroups","groupedAuths","request","systemAuthorities","getCurrentUserGroupsAndRoles","res","userGroupIds","userRoleIds","initCurrentUser","getCurrentUserOrgUnits","getSystemOrgUnitRoots","dataViewOrganisationUnits","teiSearchOrganisationUnits","assign","refreshCurrentUser","CurrentUserClass","getPrototypeOf","me","userSettings","users","modelCollection","updateCurrentUserGroupMembership","groupId","deleteMembership","method","init","Api","getApi","getAttributes","entityType","resp","isAttributeUnique","modelId","notEqual","userCollection","getAttributesWithValueAndId","saveUserGroup","saveRole","createHashHistory","createAction","createListActionSequence","dispatch","promise","silent","createAsyncActionSequence","actionTypes","requested","received","errored","currentUserActions","clearItem","showSnackbar","hideSnackbar","showDialog","hideDialog","navigateTo","history","addValueRenderer","dataTableWrap","clearBoth","filterBar","headerBarPagination","headerBarFilterWrap","pagination","userSelect","List","executeEditIfAllowed","isContextActionAllowed","primaryAction","action","autoHideDuration","onActionClick","componentDidMount","resetFilter","resetPager","getPagerConfig","renderPagination","incrementPage","decrementPage","visibility","paginationProps","hasNextPage","hasPreviousPage","onNextPageClick","onPreviousPageClick","renderHeaderBar","filterComponent","FilterComponent","renderDataTable","columns","contextMenuActions","contextMenuIcons","sectionName","newItemPath","getNextPage","getPreviousPage","refresh","logout","logoutUrl","window","location","detectCurrentUserChanges","disable","deleteModel","interpolator","confirmMsg","successMsg","snackbarProps","onRemoveConfirm","openSharingSettings","asyncValidatorSwitch","blurredField","priorErrors","asyncErrors","newError","getUserNameError","getAttributeUniquenessError","getGenericUniquenessError","errors","asyncSingleFieldValidator","apiMethod","newUserName","editingExistingUser","REPLICATE_USER_FORM","fieldName","role","fieldValue","fieldDisplayName","capitalize","next","fallBackMsg","FORM_NAME","ReplicateUserForm","replicateSuccesHandler","replicateErrorHandler","submitting","pristine","valid","handleSubmit","disableSubmit","autoComplete","onSubmit","Field","component","validate","ReduxFormWrapped","reduxForm","asyncValidate","isUserContextActionAllowed","access","read","userContextMenuIcons","userContextMenuActions","Action","createActionsFromNames","profile","subscribe","edit","remove","replicate","onRequestClose","title","enable","disable_2fa","showDisable2FAConfirmation","baseMsg","onDisable2FAConfirm","shouldDisable","onDisableConfirm","OrganisationUnitFilter","applyFilter","newSelectedOrgUnits","isEqual","wrap","cursor","icon","right","textField","whiteSpace","overflow","textOverflow","OrganisationUnitInput","inputRef","React","createRef","focusOrgUnitInput","current","orgUnitInput","focus","showOrgTreeInDialog","contentStyle","onFocus","inputStyle","SearchFilter","updateSearchFilter","newValue","onQueryStrChange","localQueryStr","selfRegisteredStyle","UserFilter","createInactiveMonthsOptions","month","months","fill","renderDropDown","config","mergedConfig","includeEmpty","emptyLabel","renderInactiveMonthsFilter","dropDownConfig","menuItems","renderInvitationStatusFilter","renderSelfRegisteredFilter","checkedClassName","UserList","IconLink","to","tooltip","iconButton","iconClassName","RoleForm","backToList","renderFields","fieldConfig","conf","labelText","validators","ReduxFormWrappedRoleForm","GroupForm","saveGroup","createIdValueObject","trashableAttributesPromise","initialize","console","validatorsToApply","isRequiredAttributeField","collectValidators","CONFIG","ReduxFormWrappedGroupForm","validatorLookup","CREATE_REQUIRED_FIELDS","INVITE_REQUIRED_FIELDS","EDIT_REQUIRED_FIELDS","UserForm","toggleShowMore","showMore","firstName","surname","trashableLocalePromise","inviteFields","baseFields","optionsSelector","paddingRight","paddingLeft","additionalFields","getLabelText","prepareGroupEditor","exludeField","externalAuthOnly","emailConfigured","filteredFields","fieldSpecificValidator","isRequiredStaticField","renderCreateOrInviteField","renderAttributeFields","renderBaseFields","renderAdditionalFields","renderToggler","togglerText","submitText","selector","formValueSelector","ReduxFormWrappedUserForm","fallbackOrgUnits","main","heading","paper","FormLoader","match","params","initNewItem","formNotFoundErrorMsg","renderForm","shortItem","baseItem","entityTxt","updateMsg","createMsg","link","kebabCase","plural","linkTooltip","newItem","parseDateFromUTCString","utcString","includeTime","keyUiLocale","dateOptions","day","year","hour","minute","Intl","DateTimeFormat","format","raisedButton","cell","verticalAlign","valueCell","DetailSummary","routeId","getLabelForEntity","renderSendMessageBtn","userId","containerElement","href","renderPropertyFields","summaryObject","labelCellStyle","removeText","parseDate","parseDateTime","nestedPropselector","parseArrayAsCommaDelimitedString","baseRoute","backTooltip","editLink","editLabel","getBaseFields","UserProfile","PageNotFound","pathname","cardStyle","margin","borderBottom","fontWeight","textStyle","actionStyle","CardLinks","renderCard","card","canCreate","canDelete","canList","description","renderActionButtons","actionButtons","createPath","tooltipPosition","cards","getSections","isRoleContextActionAllowed","manage","roleContextMenuIcons","roleContextMenuActions","show_details","sharing_settings","RoleList","RoleDetails","isGroupContextActionAllowed","groupContextMenuIcons","groupContextMenuActions","updateGroupMembership","join_group","leave_group","GroupList","GroupDetails","getUserSection","getUserRoleSection","getUserGroupSection","sections","routeConfig","SideNav","changeSectionHandler","sectionForPath","onLandingPage","onChangeSection","currentSection","withRouter","SectionLoader","setRouteConfig","pathHasAvailableSection","getRouteConfig","configItem","routes","userHasAuthorities","renderRoutes","exact","strict","open","finalProps","bodyStyle","maxWidth","dialogProps","hideSharingDialog","App","hashType","theme","spacing","Spacing","fontFamily","palette","primary1Color","primary2Color","blue700","primary3Color","blue100","accent1Color","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","forms","minWidth","formInput","AppWithD2ContextAndTheme","children","AppWrapper","useD2","d2Config","schemas","i18nRoot","onInitialized"],"mappings":"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","file":"static/js/app.fdf8f180.chunk.js","sourcesContent":["// LISTS\nexport const LIST_REQUESTED = 'LIST_REQUESTED';\nexport const LIST_RECEIVED = 'LIST_RECEIVED';\nexport const LIST_ERRORED = 'LIST_ERRORED'; // ITEMS\n\nexport const CLEAR_ITEM = 'CLEAR_ITEM';\nexport const INIT_NEW_ITEM = 'INIT_NEW_ITEM';\nexport const ITEM_REQUESTED = 'ITEM_REQUESTED';\nexport const ITEM_RECEIVED = 'ITEM_RECEIVED';\nexport const ITEM_ERRORED = 'ITEM_ERRORED';\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\nexport const SHOW_DIALOG = 'SHOW_DIALOG';\nexport const HIDE_DIALOG = 'HIDE_DIALOG';\nexport const SHOW_SHARING_DIALOG = 'SHOW_SHARING_DIALOG';\nexport const HIDE_SHARING_DIALOG = 'HIDE_SHARING_DIALOG'; // PAGER\n\nexport const PAGER_RESET = 'PAGER_RESET'; // FILTER\n\nexport const FILTER_UPDATED = 'FILTER_UPDATED';\nexport const FILTER_RESET = 'FILTER_RESET'; // CURRENT USER\n\nexport const CURRENT_USER_REQUESTED = 'CURRENT_USER_REQUESTED';\nexport const CURRENT_USER_RECEIVED = 'CURRENT_USER_RECEIVED';\nexport const CURRENT_USER_ERRORED = 'CURRENT_USER_ERRORED';","import { LIST_REQUESTED, LIST_RECEIVED, LIST_ERRORED } from '../constants/actionTypes';\nconst initialState = {\n  type: null,\n  items: null\n};\n/**\n * Reducer to control the list state\n * @memberof module:reducers\n * @param {Object} state - The list state\n * @param {String|null} state.type=null - The list type, either one of 'user', 'userGroup', 'userRole', or `null` after error.\n * @param {Object|String|null} state.items=null - Can have the following forms:\n * - A d2 ModelCollection instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\n\nconst listReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LIST_REQUESTED:\n      return {\n        type: payload,\n        items: null\n      };\n\n    case LIST_RECEIVED:\n      return state.type === payload.type ? {\n        type: payload.type,\n        items: payload.items\n      } : state;\n\n    case LIST_ERRORED:\n      return {\n        type: null,\n        items: payload.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;","export const PAGE_SIZE = 50;\nexport const PAGE = 1;\nexport const LIST_FILTER = {\n  query: '',\n  // string\n  inactiveMonths: null,\n  // Number\n  selfRegistered: false,\n  // Bool\n  invitationStatus: null,\n  // 'all' || 'expired',\n  organisationUnits: [] // Array\n\n};\nexport const INITIAL_SNACKBAR_STATE = {\n  show: false,\n  props: {\n    message: ''\n  }\n};\nexport const INITIAL_DIALOG_STATE = {\n  show: false,\n  props: {},\n  content: null\n};\nexport const INITIAL_SHARING_STATE = {\n  show: false,\n  id: null,\n  type: null\n};","import { FILTER_UPDATED, FILTER_RESET } from '../constants/actionTypes';\nimport { LIST_FILTER as DEFAULT_FILTER } from '../constants/defaults';\n/**\n * Reducer to control the filter state that is used to GET filtered lists\n * @memberof module:reducers\n * @param {Object} state - Object containing values\n * @param {String} state.query='' - Query string to filter results by\n * @param {Number|null} state.inactiveMonths=null - Filter by number of inactive months (USER only)\n * @param {Bool} state.selfRegistered=false - Show self registered users only (USER only)\n * @param {String|null} state.invitationStatus=null - Filter by invitation status, possible values: 'all' or 'expired', (USER only)\n * @param {Array} state.organisationUnits=[]] - IDs of the organisation units to filter by (USER only)\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @param {String} action.payload.updateKey - Filter property key to update\n * @param {*} action.payload.updateValue - Value to set property to\n * @returns {Object} - A new filter state object\n * @function\n */\n\nconst filterReducer = (state = DEFAULT_FILTER, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FILTER_UPDATED:\n      return { ...state,\n        [payload.updateKey]: payload.updateValue\n      };\n\n    case FILTER_RESET:\n      return { ...DEFAULT_FILTER\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;","import { LIST_RECEIVED, PAGER_RESET } from '../constants/actionTypes';\n/**\n * Reducer to control the pager state. The pager state is used as a query parameter when fetching lists from the API.\n * @memberof module:reducers\n * @param {Object|null} state=null - Either an instance of a d2 Pager, or null incase the pager is being reset.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @returns {Object|null} - A new state object\n * @function\n */\n\nconst pagerReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case PAGER_RESET:\n      return null;\n\n    case LIST_RECEIVED:\n      return payload.items.pager;\n\n    default:\n      return state;\n  }\n};\n\nexport default pagerReducer;","import { CLEAR_ITEM, INIT_NEW_ITEM, ITEM_REQUESTED, ITEM_RECEIVED, ITEM_ERRORED } from '../constants/actionTypes';\n/**\n * @module reducers\n */\n\n/**\n * Reducer to control the current item state\n * @memberof module:reducers\n * @param {Object|String|null} state=null - Can have the following forms:\n * - A d2 model instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\n\nconst currentItemReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CLEAR_ITEM:\n    case ITEM_REQUESTED:\n      return null;\n\n    case INIT_NEW_ITEM:\n    case ITEM_RECEIVED:\n      return payload;\n\n    case ITEM_ERRORED:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentItemReducer;","import { CURRENT_USER_REQUESTED, CURRENT_USER_RECEIVED, CURRENT_USER_ERRORED } from '../constants/actionTypes';\n/**\n * Reducer to control the current user state, initialized from the sectionLoader,\n * Can also be reloaded if certain changes take place that influence the current user.\n * @memberof module:reducers\n * @param {Object|null} state=null - An object containing relevant properties of the current user.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst currentUserReducer = (state = null, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CURRENT_USER_REQUESTED:\n      return null;\n\n    case CURRENT_USER_RECEIVED:\n    case CURRENT_USER_ERRORED:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUserReducer;","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from '../../constants/actionTypes';\nimport { INITIAL_SNACKBAR_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the SnackbarContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the Snackbar\n * @param {Object} state.props={message:''} - Props to pass to the MUI Snackbar component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Props for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst snackbarReducer = (state = INITIAL_SNACKBAR_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_SNACKBAR:\n      return {\n        show: true,\n        props: payload\n      };\n\n    case HIDE_SNACKBAR:\n      return { ...INITIAL_SNACKBAR_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default snackbarReducer;","import { SHOW_DIALOG, HIDE_DIALOG } from '../../constants/actionTypes';\nimport { INITIAL_DIALOG_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the DialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the dialog\n * @param {Object} state.props={} - Props to pass to the MUI Dialog component\n * @param {Object|null} state.content=null - The content to be rendered by the MUI Dialog component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The content and props for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst dialogReducer = (state = INITIAL_DIALOG_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_DIALOG:\n      return {\n        show: true,\n        ...payload\n      };\n\n    case HIDE_DIALOG:\n      return { ...INITIAL_DIALOG_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogReducer;","import { SHOW_SHARING_DIALOG, HIDE_SHARING_DIALOG } from '../../constants/actionTypes';\nimport { INITIAL_SHARING_STATE } from '../../constants/defaults';\n/**\n * Reducer to show / hide the SharingDialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the SharingDialog\n * @param {String|null} state.id=null - The model instance ID for which to open the sharing settings\n * @param {String|null} state.type=null - The model instance name\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The ID and type for the new state\n * @returns {Object} - A new state object\n * @function\n */\n\nconst sharingReducer = (state = INITIAL_SHARING_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SHOW_SHARING_DIALOG:\n      return {\n        show: true,\n        ...payload\n      };\n\n    case HIDE_SHARING_DIALOG:\n      return { ...INITIAL_SHARING_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default sharingReducer;","import { combineReducers } from 'redux';\nimport snackbarReducer from './snackbar';\nimport dialogReducer from './dialog';\nimport sharingReducer from './sharing';\n/**\n * @module reducers/popups\n */\n\nconst popupsReducer = combineReducers({\n  snackbar: snackbarReducer,\n  dialog: dialogReducer,\n  sharing: sharingReducer\n});\nexport default popupsReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { reducer as formReducer } from 'redux-form';\nimport listReducer from './reducers/list';\nimport filterReducer from './reducers/filter';\nimport pagerReducer from './reducers/pager';\nimport currentItemReducer from './reducers/currentItem';\nimport currentUserReducer from './reducers/currentUser';\nimport popupsReducer from './reducers/popups/';\nconst middlewares = [ReduxThunk];\nconst shouldLog = false;\n\nif (process.env.NODE_ENV === 'development' && shouldLog) {\n  middlewares.push(logger);\n}\n\nconst rootReducer = combineReducers({\n  list: listReducer,\n  filter: filterReducer,\n  pager: pagerReducer,\n  currentItem: currentItemReducer,\n  currentUser: currentUserReducer,\n  popups: popupsReducer,\n  form: formReducer\n});\nexport default createStore(rootReducer, applyMiddleware(...middlewares));","// LISTS\nexport const USER_LIST = ['displayName', 'id', 'access', 'userCredentials[username,disabled,lastLogin,twoFA]', 'teiSearchOrganisationUnits[id,path]'];\nexport const USER_GROUP_LIST = ['displayName', 'id', 'access', 'user[displayName,id]', 'publicAccess', 'userGroupAccesses'];\nexport const USER_ROLE_LIST = [...USER_GROUP_LIST, 'description']; // DETAILS\n\nexport const USER_DETAILS = [':owner', 'access', 'displayName', 'userGroups', 'organisationUnits[id,displayName,path]', 'dataViewOrganisationUnits[id,displayName,path]', 'userCredentials[id,username,accountExpiry,lastLogin,externalAuth,userRoles[id,displayName],cogsDimensionConstraints[id,displayName,dimensionType],catDimensionConstraints[id,displayName,dimensionType],openId,ldapId,disabled]', 'teiSearchOrganisationUnits[id,path]', 'whatsApp', 'facebookMessenger', 'skype', 'telegram', 'twitter'];\nexport const USER_ROLE_DETAILS = [':owner', 'access', 'authorities', 'displayName'];\nexport const USER_GROUP_DETAILS = [':owner', 'access', 'displayName', '!users'];\nexport const CURRENT_USER_ORG_UNITS_FIELDS = {\n  fields: ['organisationUnits[id,path,displayName,children::isNotEmpty]', 'dataViewOrganisationUnits[id,path,displayName,children::isNotEmpty]', 'teiSearchOrganisationUnits[id,path,displayName,children::isNotEmpty]']\n};\nexport const ORG_UNITS_QUERY_CONFIG = {\n  paging: false,\n  // userDataViewFallback: true\n  fields: ['id', 'path', 'displayName', 'children::isNotEmpty', 'ancestors']\n};\nexport const USER_GROUP_QUERY_CONFIG = {\n  paging: false,\n  fields: ['id', 'displayName']\n};\nconst FIELDS = {\n  USER_LIST,\n  USER_GROUP_LIST,\n  USER_ROLE_LIST,\n  USER_DETAILS,\n  USER_GROUP_DETAILS,\n  USER_ROLE_DETAILS\n};\nexport default FIELDS;","/**\n * @module utils\n */\n\n/**\n * It is not always clear when d2 will return an array or a ModelCollection instance.\n * This function is used to work with both in the same way.\n * @param {Array|Object} input - Either an array of d2 model instances or a ModelCollection instance\n * @returns {Array} An array of model instances\n * @memberof module:utils\n * @function\n */\nconst asArray = input => {\n  if (!input) {\n    return [];\n  }\n\n  return typeof input.toArray === 'function' ? input.toArray() : input;\n};\n\nexport default asArray;","/**\n * Helper function for form components (UserForm, GroupForm, RoleForm).\n * This function can receive a string representation of a property path, i.e. 'userCredentials.username'\n * and an object to pick from and will return the nested property's value.\n * This works recursively so it can be as many levels deep as required.\n * @param {String} propertyPathStr - String representation of a property path\n * @param {*} parent - The base object to pick from\n * @returns {*} The value of the nested property\n * @memberof module:utils\n * @function\n */\nconst getNestedProp = (propertyPathStr, parent) => {\n  return propertyPathStr.split('.').reduce((currentLevel, propName) => {\n    return currentLevel && currentLevel[propName] ? currentLevel[propName] : null;\n  }, parent);\n};\n\nexport default getNestedProp;","import React from 'react';\nimport PropTypes from 'prop-types';\nconst style = {\n  clear: 'both',\n  color: '#c33017',\n  backgroundColor: '#ffe3de',\n  padding: '1.5rem 1.5rem 1rem',\n  fontSize: '1rem',\n  width: '100%'\n};\n/**\n * A simple component that can display an error message\n * @class\n */\n\nconst ErrorMessage = ({\n  introText,\n  errorMessage\n}) => <div style={style}>\n        {introText}\n        <pre>{errorMessage}</pre>\n    </div>;\n\nErrorMessage.propTypes = {\n  errorMessage: PropTypes.string.isRequired,\n  introText: PropTypes.string.isRequired\n};\nexport default ErrorMessage;","import i18n from '@dhis2/d2-i18n';\n/**\n * It is preffered to show the error message from the server it is a 401-499 code\n * @param {Object} error - The error object\n * @param {Number} error.httpStatusCode - The error status code\n * @param {Number} error.message - The error message\n * @param {String} fallbackMsg - The message to show in case the actual message is\n * likely to be useless for normal users\n * @memberof module:utils\n * @function\n */\n\nconst createHumanErrorMessage = ({\n  message,\n  messages,\n  httpStatusCode\n}, fallbackMsg) => {\n  const fallback = fallbackMsg || i18n.t('Something went wrong when processing your request.');\n  const useMessage = httpStatusCode && httpStatusCode >= 400 && httpStatusCode < 500 || !httpStatusCode && messages && messages.length > 0;\n\n  if (!message && messages && messages.length > 0) {\n    message = messages.map(({\n      message\n    }) => message).join(', ');\n  }\n\n  return useMessage ? message : fallback;\n};\n\nexport default createHumanErrorMessage;","import React, { Component } from 'react';\nimport { GroupEditor } from '@dhis2/d2-ui-group-editor';\nimport { Store, Heading } from '@dhis2/d2-ui-core';\nimport PropTypes from 'prop-types';\nimport { red500 } from 'material-ui/styles/colors';\nimport TextField from 'material-ui/TextField/TextField';\nimport asArray from '../utils/asArray';\nimport ErrorMessage from './ErrorMessage';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport i18n from '@dhis2/d2-i18n';\nconst styles = {\n  outerWrap: {\n    paddingTop: 0,\n    paddingBottom: '2.5rem'\n  },\n  headerWrap: {\n    display: 'flex'\n  },\n  headerSpacer: {\n    flex: '0 0 120px'\n  },\n  header: {\n    flex: '1 0 120px',\n    paddingBottom: 0,\n    fontSize: '1.2rem'\n  },\n  error: {\n    color: red500\n  },\n  errorText: {\n    fontSize: '0.8rem',\n    marginLeft: '0.8rem'\n  }\n};\n/**\n * A component that renders the d2-ui GroupEditor with a search input above it.\n * It can fetch its own items and has been made compliant with redux form.\n * On update it can return an array of either IDs or d2-models\n */\n\nclass SearchableGroupEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemStore: Store.create(),\n      assignedItemStore: Store.create(),\n      filterText: '',\n      fetchErrorMsg: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const availableItems = await this.props.availableItemsQuery();\n      this.availableItemsReceivedHandler(availableItems);\n    } catch (error) {\n      const fetchErrorMsg = createHumanErrorMessage(error, i18n.t('Could not load available items'));\n      this.setState({\n        fetchErrorMsg\n      });\n    }\n  }\n\n  availableItemsReceivedHandler = response => {\n    // On update we want to be able to return an array of IDs or models\n    const {\n      initiallyAssignedItems,\n      returnModelsOnUpdate\n    } = this.props;\n    const {\n      itemStore,\n      assignedItemStore\n    } = this.state;\n\n    if (returnModelsOnUpdate) {\n      this.modelLookup = new Map();\n    }\n\n    const assignedItems = asArray(initiallyAssignedItems).map(({\n      id\n    }) => id);\n    const availableItems = asArray(response).map(item => {\n      if (returnModelsOnUpdate) {\n        this.modelLookup.set(item.id, item);\n      }\n\n      const text = item.displayName || item.name;\n      return {\n        value: item.id,\n        text: text\n      };\n    });\n    itemStore.setState(availableItems);\n    assignedItemStore.setState(assignedItems);\n  };\n  onAssignItems = items => {\n    const {\n      assignedItemStore\n    } = this.state;\n    const assigned = assignedItemStore.state.concat(items);\n    return this.update(assigned);\n  };\n  onRemoveItems = items => {\n    const {\n      assignedItemStore\n    } = this.state;\n    const assigned = assignedItemStore.state.filter(item => items.indexOf(item) === -1);\n    return this.update(assigned);\n  };\n\n  update(assignedItemIds) {\n    const {\n      onChange,\n      returnModelsOnUpdate,\n      onBlur\n    } = this.props;\n    const {\n      assignedItemStore\n    } = this.state;\n    const assignedItems = returnModelsOnUpdate ? assignedItemIds.map(id => this.modelLookup.get(id)) : assignedItemIds;\n    assignedItemStore.setState(assignedItemIds);\n    onChange(assignedItems); // Also call onBlur if this is available. In a redux-form the component will be 'touched' by it\n\n    onBlur && onBlur();\n    return Promise.resolve();\n  }\n\n  updateFilterText = event => {\n    this.setState({\n      filterText: event.target.value\n    });\n  };\n\n  renderHeader() {\n    const {\n      availableItemsHeader,\n      assignedItemsHeader,\n      errorText\n    } = this.props;\n    const assignedStyle = errorText ? { ...styles.header,\n      ...styles.error\n    } : styles.header;\n    return <div style={styles.headerWrap}>\n                <Heading level={4} style={styles.header}>\n                    {availableItemsHeader}\n                </Heading>\n                <div style={styles.headerSpacer} />\n                <Heading level={4} style={assignedStyle}>\n                    {assignedItemsHeader}\n                    {errorText ? <span style={styles.errorText}>{errorText}</span> : null}\n                </Heading>\n            </div>;\n  }\n\n  renderSearchInput() {\n    return <TextField fullWidth={true} type=\"search\" onChange={this.updateFilterText} value={this.state.filterText} floatingLabelText={i18n.t('Filter')} hintText={i18n.t('Filter available and selected items')} style={{\n      marginTop: '-16px'\n    }} />;\n  }\n\n  renderGroupEditor() {\n    const {\n      itemStore,\n      assignedItemStore,\n      filterText,\n      fetchErrorMsg\n    } = this.state;\n\n    if (fetchErrorMsg) {\n      const introText = i18n.t('There was a problem displaying the GroupEditor');\n      return <ErrorMessage introText={introText} errorMessage={fetchErrorMsg} />;\n    }\n\n    return <GroupEditor itemStore={itemStore} assignedItemStore={assignedItemStore} onAssignItems={this.onAssignItems} onRemoveItems={this.onRemoveItems} height={250} filterText={filterText} />;\n  }\n\n  render() {\n    return <div style={styles.outerWrap}>\n                {this.renderHeader()}\n                {this.renderSearchInput()}\n                {this.renderGroupEditor()}\n            </div>;\n  }\n\n}\n\nSearchableGroupEditor.propTypes = {\n  assignedItemsHeader: PropTypes.string.isRequired,\n  availableItemsHeader: PropTypes.string.isRequired,\n  availableItemsQuery: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errorText: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  initiallyAssignedItems: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.array.isRequired]),\n  returnModelsOnUpdate: PropTypes.bool,\n  onBlur: PropTypes.func\n};\nexport default SearchableGroupEditor;","import React, { Component } from 'react';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport AutoComplete from 'material-ui/AutoComplete';\nimport MenuItem from 'material-ui/MenuItem';\nimport { orange500, blue500, red500 } from 'material-ui/styles/colors';\nimport i18n from '@dhis2/d2-i18n';\nimport makeTrashable from 'trashable';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport asArray from '../utils/asArray';\nconst styles = {\n  error: {\n    info: {\n      color: blue500\n    },\n    warning: {\n      color: orange500\n    },\n    error: {\n      color: red500\n    }\n  }\n};\nconst loaderDataSource = [{\n  text: 'loading...',\n  value: <MenuItem style={{\n    textAlign: 'center'\n  }}>\n                <CircularProgress style={{\n      marginTop: '12px'\n    }} />\n            </MenuItem>\n}];\nconst baseState = {\n  filteredItems: [],\n  searchWarning: null,\n  errorStyle: styles.error.info\n};\n\nconst getDefaultAutoCompleteProps = () => ({\n  floatingLabelText: i18n.t('Search'),\n  hintText: i18n.t('Enter search term'),\n  fullWidth: true,\n  type: 'search',\n  filter: () => true\n});\n/**\n * Generic component that renders a MUI AutoComplete. It can execute an async query and show a list of results.\n * Which query to execute and what happens when a list item is clicked should be defined in the parent component.\n */\n\n\nclass AsyncAutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    const debounceTime = props.queryDebounceTime || 375;\n    this.state = { ...baseState\n    };\n    this.getItems = debounce(this.getItems, debounceTime);\n    this.trashableQuery = null;\n  }\n\n  componentWillUnmount() {\n    this.trashableQuery && this.trashableQuery.trash();\n  }\n\n  onAutoCompleteChange = value => {\n    this.setState({\n      autoCompleteText: value\n    });\n    this.getItems(value);\n  };\n  getItems = async value => {\n    const {\n      minCharLength,\n      query,\n      queryParam\n    } = this.props;\n\n    if (!value || value.length < minCharLength) {\n      // Don't query if too few characters were entered\n      const searchWarning = value ? i18n.t('Please enter at least {{ minCharCount }} characters', {\n        minCharCount: minCharLength\n      }) : null;\n      this.setState({ ...baseState,\n        searchWarning\n      });\n    } else {\n      // Set loading state\n      this.setState({ ...baseState,\n        filteredItems: loaderDataSource\n      }); // Then query\n\n      this.trashableQuery = makeTrashable(query(value, queryParam));\n\n      try {\n        let filteredResults = await this.trashableQuery;\n        filteredResults = asArray(filteredResults);\n\n        if (filteredResults.length > 0) {\n          // Display results if any were returned\n          const filteredItems = filteredResults.map(model => ({\n            text: model.displayName,\n            value: model\n          }));\n          this.setState({ ...baseState,\n            filteredItems: filteredItems\n          });\n        } else {\n          // Otherwise show warning\n          this.setState({ ...baseState,\n            errorStyle: styles.error.warning,\n            searchWarning: i18n.t('No matches found')\n          });\n        }\n      } catch (error) {\n        // Show error on input\n        this.setState({ ...baseState,\n          errorStyle: styles.error.warning,\n          searchWarning: createHumanErrorMessage(error, i18n.t('There was a problem retreiving your search results'))\n        });\n      }\n    }\n  };\n  onItemSelect = dataSourceItem => {\n    const {\n      selectHandler\n    } = this.props;\n    this.setState({\n      autoCompleteText: ''\n    });\n    selectHandler(dataSourceItem);\n  };\n\n  render() {\n    const {\n      autoCompleteProps\n    } = this.props;\n    const mergedAutoCompleteProps = { ...getDefaultAutoCompleteProps(),\n      ...autoCompleteProps\n    };\n    const {\n      filteredItems,\n      searchWarning,\n      errorStyle,\n      autoCompleteText\n    } = this.state;\n    const marginBottom = searchWarning ? 0 : 28;\n    const mergedProps = { ...mergedAutoCompleteProps,\n      onUpdateInput: this.onAutoCompleteChange,\n      onNewRequest: this.onItemSelect,\n      searchText: autoCompleteText,\n      dataSource: filteredItems,\n      errorText: searchWarning,\n      errorStyle: errorStyle,\n      floatingLabelShrinkStyle: errorStyle,\n      style: {\n        marginBottom: marginBottom\n      },\n      menuStyle: {\n        maxHeight: '600px'\n      }\n    };\n    return <AutoComplete {...mergedProps} />;\n  }\n\n}\n\nAsyncAutoComplete.propTypes = {\n  query: PropTypes.func.isRequired,\n  selectHandler: PropTypes.func.isRequired,\n  autoCompleteProps: PropTypes.object,\n  minCharLength: PropTypes.number,\n  queryDebounceTime: PropTypes.number,\n  queryParam: PropTypes.any\n};\nAsyncAutoComplete.defaultProps = {\n  queryDebounceTime: 375,\n  minCharLength: 3\n};\nexport default AsyncAutoComplete;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { OrgUnitTreeMultipleRoots } from '@dhis2/d2-ui-org-unit-tree';\nimport Paper from 'material-ui/Paper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport { red500 } from 'material-ui/styles/colors';\nimport AsyncAutoComplete from './AsyncAutoComplete';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport i18n from '@dhis2/d2-i18n';\nimport defer from 'lodash.defer';\nimport PropTypes from 'prop-types';\nimport api from '../api';\nimport { orgUnitRootsSelector } from '../selectors';\nconst styles = {\n  wrapper: {\n    minHeight: '300px',\n    maxHeight: '60vh',\n    position: 'relative'\n  },\n  scrollBox: {\n    position: 'relative',\n    marginTop: '-12px',\n    maxHeight: 'calc(60vh - 154px)',\n    minHeight: 'calc(300px - 154px)',\n    overflowY: 'auto',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    borderRadius: '2px'\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  buttonStrip: {\n    paddingTop: '16px',\n    height: '36px'\n  },\n  buttonMargin: {\n    marginRight: '8px'\n  },\n  header: {\n    paddingBottom: 0,\n    fontSize: '1.2rem',\n    marginBottom: '-16px'\n  },\n  headerError: {\n    color: red500\n  },\n  errorText: {\n    fontSize: '0.8rem',\n    marginLeft: '0.8rem'\n  }\n};\n/**\n * Renders a d2-ui OrgUnitTreeMultipleRoots with an asyncAutoComplete above it and a button strip below\n * This component will only show buttons if you pass it a confirmSelection (func) property\n * It has been made compliant with redux form\n */\n\nclass SearchableOrgUnitTree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roots: null,\n      selectedOrgUnits: [...props.selectedOrgUnits],\n      orgUnitFilter: null,\n      initiallyExpanded: this.getInitiallyExpandedItems(props.selectedOrgUnits)\n    };\n  }\n\n  getInitiallyExpandedItems(orgUnits) {\n    return orgUnits.reduce((expandedUnits, orgUnit) => {\n      const strippedPath = this.removeLastPathSegment(orgUnit);\n\n      if (strippedPath) {\n        expandedUnits.push(strippedPath);\n      }\n\n      return expandedUnits;\n    }, []);\n  }\n\n  getIndexOfOrgUnit(orgUnit) {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const selectedUnit = selectedOrgUnits.find(unit => unit.path === orgUnit.path);\n    return selectedOrgUnits.indexOf(selectedUnit);\n  }\n\n  removeLastPathSegment({\n    path\n  }) {\n    return path.substr(0, path.lastIndexOf('/'));\n  }\n\n  update(selectedOrgUnits, initiallyExpanded) {\n    const {\n      onChange,\n      onBlur\n    } = this.props;\n    const updateObject = initiallyExpanded ? {\n      selectedOrgUnits,\n      initiallyExpanded\n    } : {\n      selectedOrgUnits\n    };\n\n    if (onChange) {\n      onChange(selectedOrgUnits.map(unit => unit.id));\n    }\n\n    this.setState(updateObject); // Also call onBlur if this is available. In a redux-form the component will be 'touched' by it\n\n    onBlur && onBlur();\n  }\n\n  toggleSelectedOrgUnits = (_, orgUnit) => {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const orgUnitIndex = this.getIndexOfOrgUnit(orgUnit);\n    const newOrgUnits = orgUnitIndex === -1 ? [...selectedOrgUnits, orgUnit] : [...selectedOrgUnits.slice(0, orgUnitIndex), ...selectedOrgUnits.slice(orgUnitIndex + 1)];\n    this.update(newOrgUnits, []);\n  };\n  selectAndShowFilteredOrgUnit = dataSourceItem => {\n    const orgUnit = dataSourceItem.value;\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const initiallyExpanded = [this.removeLastPathSegment(orgUnit)];\n    const newOrgUnits = [...selectedOrgUnits, orgUnit];\n    this.update(newOrgUnits, initiallyExpanded);\n  };\n  clearSelection = () => {\n    this.update([]);\n    defer(this.applySelection);\n  };\n  applySelection = () => {\n    const {\n      selectedOrgUnits\n    } = this.state;\n    const {\n      confirmSelection\n    } = this.props;\n    confirmSelection(selectedOrgUnits);\n  };\n\n  render() {\n    const {\n      selectedOrgUnits,\n      initiallyExpanded,\n      orgUnitFilter\n    } = this.state;\n    const {\n      roots,\n      confirmSelection,\n      cancel,\n      orgUnitType,\n      headerText,\n      wrapperStyle,\n      errorText\n    } = this.props;\n    const selected = selectedOrgUnits.map(unit => unit.path);\n    const autoCompleteProps = {\n      floatingLabelText: i18n.t('Search'),\n      hintText: i18n.t('Enter search term'),\n      fullWidth: true\n    };\n    const headerStyle = errorText ? { ...styles.header,\n      ...styles.headerError\n    } : styles.header;\n    return <div style={{ ...styles.wrapper,\n      ...wrapperStyle\n    }}>\n                {headerText ? <Heading level={4} style={headerStyle}>\n                        {headerText}\n                        {errorText && <span style={styles.errorText}>{errorText}</span>}\n                    </Heading> : null}\n                <AsyncAutoComplete autoCompleteProps={autoCompleteProps} query={api.queryOrgUnits} queryParam={orgUnitType} minCharLength={2} queryDebounceTime={375} selectHandler={this.selectAndShowFilteredOrgUnit} />\n                <Paper style={styles.scrollBox}>\n                    {!roots ? <CircularProgress style={styles.loader} /> : <OrgUnitTreeMultipleRoots roots={roots} onSelectClick={this.toggleSelectedOrgUnits} selected={selected} initiallyExpanded={initiallyExpanded} orgUnitsPathsToInclude={orgUnitFilter} />}\n                </Paper>\n                {confirmSelection ? <div style={styles.buttonStrip}>\n                        <RaisedButton label={i18n.t('Apply')} primary={true} style={styles.buttonMargin} onClick={this.applySelection} disabled={!roots} />\n                        <RaisedButton label={i18n.t('Clear all')} secondary={true} style={styles.buttonMargin} onClick={this.clearSelection} disabled={!roots} />\n                        <RaisedButton onClick={cancel} label={i18n.t('Cancel')} />\n                    </div> : null}\n            </div>;\n  }\n\n}\n\nSearchableOrgUnitTree.propTypes = {\n  orgUnitType: PropTypes.string.isRequired,\n  selectedOrgUnits: PropTypes.array.isRequired,\n  cancel: PropTypes.func,\n  confirmSelection: PropTypes.func,\n  errorText: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  headerText: PropTypes.string,\n  roots: PropTypes.array,\n  wrapperStyle: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    roots: orgUnitRootsSelector(props.orgUnitType, state.currentUser)\n  };\n};\n\nexport default connect(mapStateToProps)(SearchableOrgUnitTree);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { TextField, Checkbox } from 'material-ui';\n/**\n * Renders a TextField and Checkbox above the AuthoritySections.\n * The actual filtering is being done in the FilteredAuthoritySections component which uses `utils/filterAuthorities`\n * However, this is done via the AuthorityEditor component\n */\n\nclass AuthorityFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchStr: '',\n      selectedOnly: false\n    };\n  }\n\n  onSelectedOnlyChange = (_, value) => {\n    this.setState({\n      selectedOnly: value\n    });\n    this.props.onFilterChange(this.state.searchStr, value);\n  };\n  onSearchStrChange = event => {\n    const value = event.target.value;\n    this.setState({\n      searchStr: value\n    });\n    this.props.onFilterChange(value, this.state.selectedOnly);\n  };\n\n  render() {\n    return <div className=\"authority-editor__filterbar\">\n                <TextField className=\"authority-editor__filter-text-input search-input\" floatingLabelText={i18n.t('Search')} onChange={this.onSearchStrChange} type=\"search\" />\n                <Checkbox className=\"authority-editor__filter-checkbox\" label={i18n.t('Selected authorities only')} checked={this.state.selectedOnly} onCheck={this.onSelectedOnlyChange} style={{\n        width: '300px'\n      }} />\n            </div>;\n  }\n\n}\n\nAuthorityFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired\n};\nexport default AuthorityFilter;","/* eslint-disable max-params */\n\n/** @module AuthorityEditor/utils/filterAuthorities */\nconst matchesSearchStr = (item, searchChunks) => {\n  if (!searchChunks) {\n    return true;\n  }\n\n  const strToMatch = item.name.toLowerCase();\n  return searchChunks.some(chunk => {\n    // Ignore single characters when there are multiple chunks\n    // because this makes the results list grow like crazy\n    // i.e. this would be like the user typing \"analytics t\" and\n    // this function returning true for all matches on \"t\"\n    if (chunk.length <= 1 && searchChunks.length > 1) {\n      return false;\n    }\n\n    return strToMatch.indexOf(chunk) > -1;\n  });\n};\n\nconst matchesSelectedSetting = (item, selectedOnly, lookup) => {\n  if (!selectedOnly) {\n    return true;\n  }\n\n  if (item.items && item.items.length) {\n    return item.items.some(subItem => lookup.get(subItem.id));\n  } else {\n    return Boolean(lookup.get(item.id));\n  }\n};\n/**\n * Filters a list of all available authorities based on a search chunks and a selectedOnly flag\n * @param {Object} allAuthorities - A nested object in which all authorities have been grouped in a logical way\n * @param {Object} selectedItemsLookup - A lookup Map that can be used for quickly filtering selected authorities\n * @param {Array} searchChunks - A search string that has been split into an array by spaces\n * @param {Boolean} selectedOnly - Flag for only allowing selected items\n * @returns {Object} An object with the same structure as `allAuthorities` but containing filtered arrays of authorities\n */\n\n\nconst filterAuthorities = (allAuthorities, selectedItemsLookup, searchChunks, selectedOnly) => {\n  if (!searchChunks && !selectedOnly) {\n    return allAuthorities;\n  }\n\n  return Object.keys(allAuthorities).reduce((filtered, key) => {\n    const section = allAuthorities[key];\n    const filteredItems = section.items.filter(item => {\n      const allowedBySearchStr = matchesSearchStr(item, searchChunks);\n      const allowedBySelectedSetting = matchesSelectedSetting(item, selectedOnly, selectedItemsLookup);\n      return allowedBySearchStr && allowedBySelectedSetting;\n    });\n    filtered[key] = { ...section,\n      items: filteredItems\n    };\n    return filtered;\n  }, {});\n};\n\nexport default filterAuthorities;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from 'react-highlight-words';\n/**\n * Will return either a string or a nested element with spans and marks that are highlighted\n * depending on the presence of searchChunks\n * @param {Object} props - The component props\n * @param {String} props.text - The text to display\n * @param {Array} props.searchChunks - The searchChunks to highlight in the text\n * @class\n */\n\nconst HighlightableText = ({\n  text,\n  searchChunks\n}) => {\n  // If there is nothing to highlight, return the label text as it is\n  if (!searchChunks) {\n    return text;\n  } // Otherwise return a highlighted label text\n\n\n  return <Highlighter highlightClassName=\"authority-editor__search-highlight\" searchWords={searchChunks} autoEscape={true} textToHighlight={text} />;\n};\n\nHighlightableText.propTypes = {\n  searchChunks: PropTypes.array,\n  text: PropTypes.string\n};\nexport default HighlightableText;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'material-ui';\nimport HighlightableText from './HighlightableText';\n/**\n * Renders a single authority cell. This can be an empty cell, or a checkbox with or without a label.\n * If label and searchChunks are present, the label text will be highlighted.\n * Depending on state this checkbox can be disabled or selected.\n */\n\nclass AuthorityItem extends Component {\n  onChecked = (_, value) => {\n    const {\n      authSubject: {\n        id\n      },\n      onCheckedCallBack\n    } = this.props;\n    onCheckedCallBack([id], value);\n  };\n\n  render() {\n    const {\n      authSubject,\n      withLabel,\n      disabled\n    } = this.props;\n    const {\n      searchChunks\n    } = this.context;\n    const {\n      name,\n      empty,\n      implicit\n    } = authSubject;\n    const baseClassName = 'authority-editor__auth-checkbox';\n    const className = withLabel ? baseClassName : `${baseClassName}--without-label`;\n    const label = withLabel ? <HighlightableText text={name} searchChunks={searchChunks} /> : '';\n    return <td>\n                {!empty ? <Checkbox onCheck={this.onChecked} label={label} className={className} checked={this.props.selected || Boolean(implicit)} disabled={implicit || disabled} /> : <div className=\"authority-editor__empty-cell\" />}\n            </td>;\n  }\n\n}\n\nAuthorityItem.propTypes = {\n  authSubject: PropTypes.shape({\n    empty: PropTypes.bool,\n    id: PropTypes.string,\n    implicit: PropTypes.bool,\n    name: PropTypes.string\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  withLabel: PropTypes.bool.isRequired,\n  onCheckedCallBack: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nAuthorityItem.contextTypes = {\n  searchChunks: PropTypes.array\n};\nexport default AuthorityItem;","import i18n from '@dhis2/d2-i18n';\n\nconst createNameLookup = () => {\n  return new Map([['ALL', i18n.t('All (Full authority)')], ['F_ANALYTICSTABLEHOOK', i18n.t('Analytics Table Hook')], ['F_ATTRIBUTE', i18n.t('Attribute')], ['F_CATEGORY_COMBO', i18n.t('Category Combo')], ['F_CATEGORY', i18n.t('Category')], ['F_CATEGORY_OPTION', i18n.t('Category Option')], ['F_CATEGORY_OPTION_GROUP', i18n.t('Category Option Group')], ['F_CATEGORY_OPTION_GROUP_SET', i18n.t('Category Option Group Set')], ['F_COLOR_SET', i18n.t('Color Set')], ['F_CONSTANT', i18n.t('Constant')], ['F_DASHBOARD', i18n.t('Dashboard')], ['F_DATAELEMENTGROUPSET', i18n.t('Data Element Group Sets')], ['F_DATAELEMENTGROUP', i18n.t('Data Element Groups')], ['F_DATAELEMENT', i18n.t('Data Element')], ['F_DATAELEMENT_MINMAX', i18n.t('Min/max rule')], ['F_DATASET', i18n.t('Data Set')], ['F_DATAVALUE', i18n.t('Data Value')], ['F_DOCUMENT', i18n.t('Document')], ['F_EVENTCHART', i18n.t('Event Chart')], ['F_EVENTREPORT', i18n.t('Event Report')], ['F_EXTERNAL_MAP_LAYER', i18n.t('External Map Layer')], ['F_INDICATORGROUPSET', i18n.t('Indicator Group Sets')], ['F_INDICATORGROUP', i18n.t('Indicator Group')], ['F_INDICATORTYPE', i18n.t('Indicator Type')], ['F_INDICATOR', i18n.t('Indicator')], ['F_LEGEND_SET', i18n.t('Legend Set')], ['F_MAP', i18n.t('Map')], ['F_MINMAX_DATAELEMENT', i18n.t('Min-Max Data Element')], ['F_OPTIONGROUPSET', i18n.t('Option Group Set')], ['F_OPTIONGROUP', i18n.t('Option Group')], ['F_OPTIONSET', i18n.t('Option Set')], ['F_ORGANISATIONUNIT', i18n.t('Organisation Unit')], ['F_ORGUNITGROUPSET', i18n.t('Organisation Unit Group Set')], ['F_ORGUNITGROUP', i18n.t('Organisation Unit Group')], ['F_PREDICTOR', i18n.t('Predictor')], ['F_PROGRAMSTAGE', i18n.t('Program Stage')], ['F_PROGRAM', i18n.t('Program')], ['F_PROGRAM_INDICATOR', i18n.t('Program Indicator')], ['F_PROGRAM_INDICATOR_GROUP', i18n.t('Program Indicator Group')], ['F_PROGRAM_RULE', i18n.t('Program Rule')], ['F_PROGRAM_TRACKED_ENTITY_ATTRIBUTE_GROUP', i18n.t('Program Tracked Entity Attribute Group')], ['F_PUSH_ANALYSIS', i18n.t('Push Analysis')], ['F_RELATIONSHIPTYPE', i18n.t('Relationship Type')], ['F_REPORT', i18n.t('Report')], ['F_SECTION', i18n.t('Section')], ['F_SQLVIEW', i18n.t('SQL View')], ['F_TRACKED_ENTITY', i18n.t('Tracked Entity')], ['F_TRACKED_ENTITY_ATTRIBUTE', i18n.t('Tracked Entity Attribute')], ['F_TRACKED_ENTITY_DATAVALUE', i18n.t('Tracked Entity Data Value')], ['F_TRACKED_ENTITY_INSTANCE', i18n.t('Tracked Entity Instance')], ['F_USERGROUP', i18n.t('User Group')], ['F_USERROLE', i18n.t('User Role')], ['F_USER', i18n.t('User')], ['F_VALIDATIONRULEGROUP', i18n.t('Validation Rule Group')], ['F_VALIDATIONRULE', i18n.t('Validation Rule')], ['F_PREDICTORGROUP', i18n.t('Data predictor group')], ['F_SKIP_DATA_IMPORT_AUDIT', i18n.t('Skip data import audit')], ['F_VISUALIZATION', i18n.t('Visualization')]]);\n}; // returns cached results after first call\n\n\nexport default (() => {\n  let map = null;\n  return () => {\n    if (!map) {\n      map = createNameLookup();\n    }\n\n    return map;\n  };\n})();","/** @module AuthorityEditor/utils/groupAuthorities */\nimport i18n from '@dhis2/d2-i18n';\nimport startsWith from 'lodash.startswith';\nimport endsWith from 'lodash.endswith';\nimport sortBy from 'lodash.sortby';\nimport getNameLookup from './authorityGroupNames';\n\nconst createEmptyGroupedAuthorities = () => ({\n  metadata: {\n    name: 'Metadata',\n    items: null,\n    headers: ['Name', 'Add/Update Public', 'Add/Update Private', 'Delete', 'External access']\n  },\n  apps: {\n    name: i18n.t('Apps'),\n    items: null,\n    headers: ['Name']\n  },\n  tracker: {\n    name: i18n.t('Tracker'),\n    items: null,\n    headers: ['Name']\n  },\n  importExport: {\n    name: i18n.t('Import-Export'),\n    items: null,\n    headers: ['Name']\n  },\n  system: {\n    name: i18n.t('System'),\n    items: null,\n    headers: ['Name']\n  }\n}); // The next 3 constants are exported so they can be used by the AuthorityEditor component\n// The target object to which the allAuths array will be mapped\n\n\nexport const getEmptyGroupedAuthorities = (() => {\n  let emptyGroupedAuthorities = null;\n  return () => {\n    if (!emptyGroupedAuthorities) {\n      emptyGroupedAuthorities = createEmptyGroupedAuthorities();\n    }\n\n    return emptyGroupedAuthorities;\n  };\n})(); // Suffixes and prefixes\n\nexport const PUBLIC_ADD_SUFFIX = '_PUBLIC_ADD';\nexport const PRIVATE_ADD_SUFFIX = '_PRIVATE_ADD';\nconst ADD_SUFFIX = '_ADD';\nconst DELETE_SUFFIX = '_DELETE';\nconst EXTERNAL_ACCESS_SUFFIX = '_EXTERNAL';\nconst APP_AUTH_PREFIX = 'M_'; // Suffix groups for lookups and group construction\n\nconst ALL_METADATA_SUFFIXES = [PUBLIC_ADD_SUFFIX, PRIVATE_ADD_SUFFIX, ADD_SUFFIX, DELETE_SUFFIX, EXTERNAL_ACCESS_SUFFIX]; // Blueprints for creating implicit options and empty cells\n\nconst EMPTY_GROUP_ITEM = {\n  id: null,\n  empty: true\n};\nconst IMPLICIT_GROUP_ITEM = {\n  implicit: true\n}; // Metadata with implicit add and delete\n\nconst AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE = new Set(['F_DASHBOARD_PUBLIC_ADD', 'F_EVENTCHART_PUBLIC_ADD', 'F_EVENTREPORT_PUBLIC_ADD', 'F_MAP_PUBLIC_ADD', 'F_VISUALIZATION_PUBLIC_ADD']);\nconst AUTHORITY_GROUPS = {\n  tracker: new Set(['F_PROGRAM_DASHBOARD_CONFIG_ADMIN', 'F_PROGRAM_ENROLLMENT', 'F_PROGRAM_ENROLLMENT_READ', 'F_PROGRAM_UNENROLLMENT', 'F_TEI_CASCADE_DELETE', 'F_TRACKED_ENTITY_DATAVALUE_READ', 'F_TRACKED_ENTITY_INSTANCE_SEARCH', 'F_TRACKED_ENTITY_INSTANCE_SEARCH_IN_ALL_ORGUNITS', 'F_TRACKED_ENTITY_UPDATE', 'F_UNCOMPLETE_EVENT', 'F_VIEW_EVENT_ANALYTICS', 'F_PROGRAM_RULE_MANAGEMENT', 'F_ENROLLMENT_CASCADE_DELETE']),\n  importExport: new Set(['F_EXPORT_DATA', 'F_EXPORT_EVENTS', 'F_IMPORT_DATA', 'F_IMPORT_EVENTS', 'F_IMPORT_GML', 'F_METADATA_EXPORT', 'F_METADATA_IMPORT', 'F_METADATA_MANAGE', 'F_SKIP_DATA_IMPORT_AUDIT']),\n  system: new Set(['ALL', 'F_APPROVE_DATA', 'F_APPROVE_DATA_LOWER_LEVELS', 'F_ACCEPT_DATA_LOWER_LEVELS', 'F_VIEW_UNAPPROVED_DATA', 'F_ORGANISATIONUNIT_MOVE', 'F_ORGANISATIONUNITLEVEL_UPDATE', 'F_RUN_VALIDATION', 'F_REPLICATE_USER', 'F_USER_VIEW', 'F_USERGROUP_MANAGING_RELATIONSHIPS_ADD', 'F_USERGROUP_MANAGING_RELATIONSHIPS_VIEW', 'F_PERFORM_MAINTENANCE', 'F_SCHEDULING_ADMIN', 'F_GENERATE_MIN_MAX_VALUES', 'F_PREDICTOR_RUN', 'F_INSERT_CUSTOM_JS_CSS', 'F_SYSTEM_SETTING', 'F_SEND_EMAIL', 'F_MOBILE_SETTINGS', 'F_MOBILE_SENDSMS', 'F_OAUTH2_CLIENT_MANAGE'])\n};\n/**\n * This function receives an array of authorities and reduces this into an object that is grouped into\n * logical sections. This is done in a semi dynamic way by using pre- and suffixes in tandem\n * with hard-coded group definitions\n * @param {Object[]} authorities - The list of authorities that will be transformed\n * @param {string} authorities[].id - The identifier of an authority using UPPER_SNAKE_CASE containing patterns that can be used for grouping.\n * @param {string} authorities[].name - The display name of an authority.\n * @returns {Object} - The grouped authorities object\n */\n\nconst groupAuthorities = authorities => {\n  // A lookup map that can be used to verify the existence of a particular authority ID in linear time\n  const lookup = authorities.reduce((lookup, auth) => {\n    lookup.set(auth.id, auth);\n    return lookup;\n  }, new Map()); // The initial state of items in emptyGroupedAuthorities is null, which makes the authority sections render a loader\n  // but the accumulator object passed into the reduce function below expects items to be empty arrays\n\n  const emptyGroupedAuthorities = Object.keys(getEmptyGroupedAuthorities()).reduce((groupedBase, key) => {\n    groupedBase[key] = { ...getEmptyGroupedAuthorities()[key],\n      items: []\n    };\n    return groupedBase;\n  }, {}); // Append items to the groupedAuthorities accumulator and return the accumulated object\n\n  const groupedAuthories = authorities.reduce((groupedAuthorities, auth) => {\n    if (startsWith(auth.id, APP_AUTH_PREFIX)) {\n      // Group under apps\n      groupedAuthorities.apps.items.push(auth);\n      lookup.delete(auth.id);\n    } else if (hasNoGroupSuffix(auth)) {\n      // Group under specified key-value section\n      addToAuthoritySection(auth, groupedAuthorities, lookup);\n    } else {\n      const metadataGroup = createMetadataGroup(auth, lookup);\n\n      if (metadataGroup) {\n        // If any type of metadata group was created add it to the metadata items list\n        groupedAuthorities.metadata.items.push(metadataGroup);\n      } else if (lookup.get(auth.id)) {\n        // If no metadata group was created, we are dealing with and authority which had a metadata suffix,\n        // but actually was not a metadata authority\n        addToAuthoritySection(auth, groupedAuthorities, lookup);\n      }\n    }\n\n    return groupedAuthorities;\n  }, emptyGroupedAuthorities);\n  return sortGroupedAuthorities(groupedAuthories);\n};\n\nconst sortGroupedAuthorities = groupedAuthories => {\n  Object.keys(groupedAuthories).forEach(key => {\n    const group = groupedAuthories[key];\n    group.items = sortBy(group.items, 'name');\n  });\n  return groupedAuthories;\n};\n/**\n * Checks if a given authority contains any group suffixes\n * @param {Object} auth - The authority which ID could contain a group suffix\n * @return {Boolean} - True if no group suffix was found in the auth id\n */\n\n\nconst hasNoGroupSuffix = auth => {\n  return !ALL_METADATA_SUFFIXES.some(suffix => endsWith(auth.id, suffix));\n};\n/**\n * Receives an authority item and creates an authority metadata group based on suffixes\n * @param {Object} auth - The authority to group\n * @param {Object} suffixes - The list of authority suffixes to check against\n * @param {Object} lookup - The authority lookup map\n * @return {Object} group - A metadata authority group\n */\n\n\nconst createMetadataGroup = (auth, lookup) => {\n  // Exit if authority is no longer in the lookup\n  if (!lookup.get(auth.id)) {\n    return null;\n  } // The suffix of the the incoming authority, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"_DELETE\"\n\n\n  const authSuffix = ALL_METADATA_SUFFIXES.find(suffix => endsWith(auth.id, suffix)); // The authority baseName, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"F_CATEGORY_COMBO\"\n\n  const baseName = auth.id.replace(authSuffix, ''); // Some metadata authorities distinguish between PUBLIC_ADD and PRIVATE_ADD\n  // Others only have a _ADD version which equates to PUBLIC_ADD and PRIVATE_ADD may be left empty\n\n  const genericAdd = lookup.get(baseName + ADD_SUFFIX); // Some metadata authorities have an external access authority version. If not present this may be left empty\n\n  const externalAccess = lookup.get(baseName + EXTERNAL_ACCESS_SUFFIX); // Some authorities do not have _ADD_PRIVATE and _DELETE siblings in the authority list\n  // however, they do belong to the metadata section. If a role is granted ADD_PUBLIC rights it is also allowed\n  // to ADD_PRIVATE and DELETE implicitly\n\n  const hasImplicitAddPrivateAndDelete = AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE.has(baseName + PUBLIC_ADD_SUFFIX); // Set each authority item for the current authority group\n\n  const publicAddAuth = genericAdd || lookup.get(baseName + PUBLIC_ADD_SUFFIX);\n  const privateAddAuth = genericAdd ? EMPTY_GROUP_ITEM : hasImplicitAddPrivateAndDelete ? IMPLICIT_GROUP_ITEM : lookup.get(baseName + PRIVATE_ADD_SUFFIX);\n  const deleteAuth = hasImplicitAddPrivateAndDelete ? IMPLICIT_GROUP_ITEM : lookup.get(baseName + DELETE_SUFFIX);\n  const externalAccessAuth = externalAccess || EMPTY_GROUP_ITEM; // If any of these variable are undefined, the authority in question has an ID with a metadata suffix,\n  // but is not actually a metadata authority. I.e. \"F_ENROLLMENT_CASCADE_DELETE\"\n\n  if (!publicAddAuth || !privateAddAuth || !deleteAuth) {\n    return null;\n  } // Delete from lookup to prevent double entries\n\n\n  ALL_METADATA_SUFFIXES.forEach(suffix => lookup.delete(baseName + suffix));\n  return {\n    name: getNameLookup().get(baseName) || baseName,\n    items: [publicAddAuth, privateAddAuth, deleteAuth, externalAccessAuth]\n  };\n};\n/**\n * Assigns non-app, non-metadata authorities to the correct section. If it cannot find a correct section it will be assigned to 'system'\n * @param {Object} auth - The authority to assign to a section\n * @param {Object} groupedAuthorities - The object to assign to\n * @param {Object} lookup - The authority lookup map\n */\n\n\nconst addToAuthoritySection = (auth, groupedAuthorities, lookup) => {\n  const groupKey = Object.keys(AUTHORITY_GROUPS).find(groupKey => AUTHORITY_GROUPS[groupKey].has(auth.id)) || 'system';\n\n  if (auth.id === 'ALL') {\n    auth.name = getNameLookup().get(auth.id);\n  }\n\n  groupedAuthorities[groupKey].items.push(auth);\n  lookup.delete(auth.id);\n};\n\nexport default groupAuthorities;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport endsWith from 'lodash.endswith';\nimport AuthorityItem from './AuthorityItem';\nimport HighlightableText from './HighlightableText';\nimport { PUBLIC_ADD_SUFFIX, PRIVATE_ADD_SUFFIX } from './utils/groupAuthorities';\n/**\n * A metadata authority group, which renders an array of 5 table cells.\n * The first cell contains the authority name and subsequent cells are authority-types corresponding to this name\n */\n\nclass AuthorityGroup extends Component {\n  onAuthGroupChanged = (id, value) => {\n    this.context.onAuthChange(id, value);\n\n    if (this.isPublicAdd(id)) {\n      // Force rerender on entire group when public add changes\n      this.forceUpdate();\n    }\n  };\n\n  isPublicAdd(id) {\n    return endsWith(id, PUBLIC_ADD_SUFFIX);\n  }\n\n  isPrivateAdd(id) {\n    return endsWith(id, PRIVATE_ADD_SUFFIX);\n  }\n\n  render() {\n    const {\n      name,\n      items\n    } = this.props;\n    const {\n      shouldSelect,\n      searchChunks\n    } = this.context;\n    let publicAddSelected;\n    return items.reduce((authGroup, authSubject, index) => {\n      const isPublicAdd = this.isPublicAdd(authSubject.id);\n      const isPrivateAdd = this.isPrivateAdd(authSubject.id);\n      const implicitSelect = Boolean(publicAddSelected && isPrivateAdd);\n      const selected = shouldSelect(authSubject.id) || implicitSelect;\n\n      if (isPublicAdd) {\n        publicAddSelected = selected;\n      }\n\n      authGroup.push(<AuthorityItem key={`authitem-${index}`} authSubject={authSubject} withLabel={false} selected={selected} disabled={implicitSelect} onCheckedCallBack={this.onAuthGroupChanged} />);\n      return authGroup;\n    }, [<td key={'group-label'}>\n                    <HighlightableText text={name} searchChunks={searchChunks} />\n                </td>]);\n  }\n\n}\n\nAuthorityGroup.propTypes = {\n  items: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired\n};\nAuthorityGroup.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  searchChunks: PropTypes.array\n};\nexport default AuthorityGroup;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, CircularProgress, Checkbox } from 'material-ui';\nimport i18n from '@dhis2/d2-i18n';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport AuthorityGroup from './AuthorityGroup';\nimport AuthorityItem from './AuthorityItem';\n/**\n * Renders a logical authority section. Within the section it can either render rows with `AuthorityGroups` for metadata,\n */\n\nclass AuthoritySection extends Component {\n  onTableHeadCheck = (_event, value) => {\n    const ids = this.props.authSection.items.map(({\n      id\n    }) => id);\n    this.context.onAuthChange(ids, value);\n  };\n  renderAuthRow = (authSubject, index) => {\n    const {\n      shouldSelect,\n      onAuthChange\n    } = this.context;\n    return <tr key={`row-${index}`}>\n                {authSubject.items ? <AuthorityGroup items={authSubject.items} name={authSubject.name} /> : <AuthorityItem authSubject={authSubject} withLabel={true} selected={shouldSelect(authSubject.id)} onCheckedCallBack={onAuthChange} />}\n            </tr>;\n  };\n\n  renderLoaderRow() {\n    return <tr>\n                <td className=\"authority-editor__placeholder-cell\">\n                    <CircularProgress size={24} />\n                </td>\n            </tr>;\n  }\n\n  renderInfoRow(errorMsg) {\n    let className = 'authority-editor__placeholder-cell';\n    let msg = i18n.t('No matches found');\n\n    if (errorMsg) {\n      className += '--error';\n      msg = errorMsg;\n    }\n\n    return <tr>\n                <td className={className}>{msg}</td>\n            </tr>;\n  }\n\n  renderContent(authSection) {\n    if (!authSection.items) {\n      return this.renderLoaderRow();\n    }\n\n    if (typeof authSection.items === 'string') {\n      return this.renderInfoRow(authSection.items);\n    }\n\n    if (authSection.items.length === 0) {\n      return this.renderInfoRow();\n    }\n\n    return authSection.items.map(this.renderAuthRow);\n  }\n\n  renderTableHead({\n    headers,\n    name,\n    items\n  }) {\n    const allItemsSelected = name !== 'Metadata' && Array.isArray(items) && items.length > 0 && items.every(({\n      id\n    }) => this.context.shouldSelect(id));\n    return <thead>\n                <tr>\n                    {headers.map((header, index) => <th key={`header-${index}`}>\n                            {name !== 'Metadata' && index === 0 ? <Checkbox className=\"authority-editor__auth-checkbox\" label={header} onCheck={this.onTableHeadCheck} checked={allItemsSelected} /> : header}\n                        </th>)}\n                </tr>\n            </thead>;\n  }\n\n  render() {\n    const {\n      sectionKey,\n      authSection\n    } = this.props;\n    let wrapperClassName = `authority-editor__auth-group ${sectionKey}`;\n\n    if (authSection.items && authSection.items.length > 11) {\n      wrapperClassName += ' scrollable';\n    }\n\n    let tableClassName = 'authority-editor__auth-group-table';\n    tableClassName += ` columns-${authSection.headers.length}`;\n    return <Paper className={wrapperClassName}>\n                <Heading level={6} className=\"authority-editor__auth-group-header\">\n                    {authSection.name}\n                </Heading>\n                <table className={tableClassName}>\n                    {this.renderTableHead(authSection)}\n                    <tbody>{this.renderContent(authSection)}</tbody>\n                </table>\n            </Paper>;\n  }\n\n}\n\nAuthoritySection.propTypes = {\n  authSection: PropTypes.object.isRequired,\n  sectionKey: PropTypes.string.isRequired\n};\nAuthoritySection.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired\n};\nexport default AuthoritySection;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport filterAuthorities from './utils/filterAuthorities';\nimport AuthoritySection from './AuthoritySection';\n/**\n * Component responsible for providing the `AuthoritySections` with filtered authority lists.\n */\n\nclass FilteredAuthoritySections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredAuthorities: props.allGroupedAuthorities,\n      searchChunks: null\n    };\n    this.updateFilter = debounce(this.updateFilter, 375);\n  }\n\n  getChildContext() {\n    return {\n      searchChunks: this.state.searchChunks\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateFilteredAuthorities(nextProps.allGroupedAuthorities, null, null);\n  }\n\n  updateFilter(searchStr, selectedOnly) {\n    const {\n      allGroupedAuthorities\n    } = this.props;\n    this.updateFilteredAuthorities(allGroupedAuthorities, searchStr, selectedOnly);\n  }\n\n  updateFilteredAuthorities(all, searchStr, selectedOnly) {\n    const {\n      selectedItemsLookup\n    } = this.context;\n    const searchChunks = searchStr ? searchStr.toLowerCase().split(' ') : null;\n    this.setState({\n      filteredAuthorities: filterAuthorities(all, selectedItemsLookup, searchChunks, selectedOnly),\n      searchChunks\n    });\n  }\n\n  render() {\n    const {\n      filteredAuthorities\n    } = this.state;\n    return <div className=\"authority-editor__auth-group-wrap\">\n                {Object.keys(filteredAuthorities).map(key => {\n        return <AuthoritySection key={key} sectionKey={key} authSection={filteredAuthorities[key]} />;\n      })}\n            </div>;\n  }\n\n}\n\nFilteredAuthoritySections.propTypes = {\n  allGroupedAuthorities: PropTypes.object\n};\nFilteredAuthoritySections.contextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  selectedItemsLookup: PropTypes.object.isRequired\n};\nFilteredAuthoritySections.childContextTypes = {\n  searchChunks: PropTypes.array\n};\nexport default FilteredAuthoritySections;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport './style.css';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport makeTrashable from 'trashable';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport api from '../../api';\nimport AuthorityFilter from './AuthorityFilter';\nimport FilteredAuthoritySections from './FilteredAuthoritySections';\nimport { getEmptyGroupedAuthorities } from './utils/groupAuthorities';\n/**\n * This is the parent component of the authorities section in the RoleForm.\n * It has been made compliant with redux-form.\n */\n\nclass AuthorityEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allGroupedAuthorities: getEmptyGroupedAuthorities()\n    }; // This lookup may be updated without triggering re-renders\n\n    this.selectedItemsLookup = props.initiallySelected.reduce((lookup, item) => lookup.set(item, true), new Map());\n    this.groupedAuthoritiesPromise = null;\n  }\n\n  getChildContext() {\n    return {\n      shouldSelect: this.shouldSelect,\n      onAuthChange: this.onAuthChange,\n      selectedItemsLookup: this.selectedItemsLookup\n    };\n  }\n\n  async componentDidMount() {\n    this.groupedAuthoritiesPromise = makeTrashable(api.getGroupedAuthorities());\n\n    try {\n      const allGroupedAuthorities = await this.groupedAuthoritiesPromise;\n      this.setState({\n        allGroupedAuthorities\n      });\n    } catch (error) {\n      this.handleAuthorityFetchError(error);\n    }\n  }\n\n  componentWillUnmount() {\n    this.groupedAuthoritiesPromise.trash();\n  }\n\n  handleAuthorityFetchError(error) {\n    const errorMsg = createHumanErrorMessage(error, i18n.t('There was a problem retreiving the available authorities.'));\n    const allGroupedAuthorities = Object.keys(getEmptyGroupedAuthorities()).reduce((total, key) => {\n      total[key] = { ...getEmptyGroupedAuthorities()[key],\n        items: errorMsg\n      };\n      return total;\n    }, {});\n    this.setState({\n      allGroupedAuthorities\n    });\n  }\n\n  onFilterChange = (searchStr, selectedOnly) => {\n    // Here we directly call a method on a child component instead of\n    // letting state changes trigger full re-render. This is to prevent the TextField\n    // from being blocked whilst typing.\n    this.filteredAuthSections.updateFilter(searchStr, selectedOnly);\n  };\n  /**\n   * Responds to checkbox changes for individual authorities and section headers. Will also notify redux-form Field components if onChange and onBlur handlers were passed\n   * @param {Array<string>} ids - The IDs of the authorities that were toggled\n   * @param {boolean} value - Checkbox was toggled to checked (true) or unchecked (false)\n   * @method\n   */\n\n  onAuthChange = (ids, value) => {\n    const {\n      reduxFormOnChange\n    } = this.props;\n    const authorityIds = [];\n    ids.forEach(id => {\n      this.selectedItemsLookup.set(id, value);\n    });\n    this.selectedItemsLookup.forEach((value, key) => {\n      if (value) {\n        authorityIds.push(key);\n      }\n    });\n    reduxFormOnChange && reduxFormOnChange(authorityIds);\n  };\n  shouldSelect = id => {\n    return Boolean(this.selectedItemsLookup.get(id));\n  };\n\n  render() {\n    const {\n      allGroupedAuthorities\n    } = this.state;\n    return <div className=\"authority-editor\">\n                <Heading level={4} className=\"authority-editor__header\">\n                    {i18n.t('Authorities')}\n                </Heading>\n                <AuthorityFilter onFilterChange={this.onFilterChange} />\n                <FilteredAuthoritySections ref={comp => {\n        this.filteredAuthSections = comp;\n      }} allGroupedAuthorities={allGroupedAuthorities} />\n            </div>;\n  }\n\n}\n\nAuthorityEditor.propTypes = {\n  initiallySelected: PropTypes.array,\n  reduxFormOnChange: PropTypes.func\n};\nAuthorityEditor.defaultProps = {\n  initiallySelected: []\n};\nAuthorityEditor.childContextTypes = {\n  shouldSelect: PropTypes.func.isRequired,\n  onAuthChange: PropTypes.func.isRequired,\n  selectedItemsLookup: PropTypes.object.isRequired\n};\nexport default AuthorityEditor;","import AuthorityEditor from './AuthorityEditor';\nexport default AuthorityEditor;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'material-ui/TextField/TextField';\nimport Checkbox from 'material-ui/Checkbox/Checkbox';\nimport SelectField from 'material-ui/SelectField/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport SearchableGroupEditor from '../components/SearchableGroupEditor';\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree';\nimport { orange500 } from 'material-ui/styles/colors';\nimport AuthorityEditor from '../components/AuthorityEditor';\nconst styles = {\n  checkbox: {\n    marginTop: '32px',\n    fontSize: '16px'\n  },\n  warning: {\n    color: orange500\n  }\n};\nexport const renderDateField = ({\n  input,\n  meta,\n  label,\n  ...other\n}) => {\n  const {\n    asyncValidating,\n    touched,\n    error\n  } = meta;\n  const errorText = asyncValidating ? i18n.t('Validating...') : touched && error;\n\n  if (asyncValidating) {\n    other.errorStyle = styles.warning;\n  }\n\n  return <div style={{\n    marginTop: 20\n  }}>\n            <label htmlFor={input.name} style={{\n      display: 'block',\n      color: 'rgba(0, 0, 0, 0.3)',\n      fontSize: 16 * 0.75,\n      lineHeight: `${22 * 0.75}px`\n    }}>\n                {label}\n            </label>\n\n            <div style={{\n      marginTop: -10\n    }}>\n                <TextField {...input} {...other} type=\"date\" inputWidth=\"200px\" errorText={errorText} />\n            </div>\n        </div>;\n};\nrenderDateField.propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  }).isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    asyncValidating: PropTypes.bool,\n    error: PropTypes.string,\n    touched: PropTypes.bool\n  }).isRequired\n};\n/**\n * Helper functions used as \"component\" props for redux-form Field components.\n * @name fieldRenderers\n * @memberof module:utils\n */\n\nexport const renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    asyncValidating\n  },\n  ...other\n}) => {\n  const errorText = asyncValidating ? i18n.t('Validating...') : touched && error;\n\n  if (asyncValidating) {\n    other.errorStyle = styles.warning;\n  }\n\n  return <TextField floatingLabelText={label} hintText={label} fullWidth={true} errorText={errorText} {...other} {...input} />;\n};\nexport const renderAuthorityEditor = ({\n  input\n}) => {\n  const initiallySelected = input.value === '' ? [] : input.value;\n  return <AuthorityEditor initiallySelected={initiallySelected} reduxFormOnChange={input.onChange} reduxFormOnBlur={input.onBlur} />;\n};\nexport const renderCheckbox = ({\n  input,\n  label\n}) => {\n  return <Checkbox checked={Boolean(input.value)} onCheck={input.onChange} label={label} {...input} style={styles.checkbox} />;\n};\nexport const renderSelectField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    asyncValidating\n  },\n  options,\n  style\n}) => {\n  const errorText = asyncValidating ? i18n.t('Validating...') : touched && error;\n  const errorStyle = asyncValidating ? styles.warning : undefined;\n  return <SelectField floatingLabelText={label} fullWidth={true} value={input.value} name={input.name} onChange={(event, index, value) => {\n    input.onChange(value); // Trigger onBlur after a value is selected, in order to trigger\n    // a validator to run if the SelectField is in the asyncBlurFields list\n\n    setTimeout(() => input.onBlur(value), 1);\n  }} style={style} errorText={errorText} errorStyle={errorStyle}>\n            {options.map(({\n      id,\n      label\n    }, i) => <MenuItem key={`option_${i}`} value={id} primaryText={label} />)}\n        </SelectField>;\n};\nexport const renderSearchableGroupEditor = ({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  availableItemsQuery,\n  availableItemsLabel,\n  assignedItemsLabel,\n  initialValues,\n  ...other\n}) => {\n  return <SearchableGroupEditor initiallyAssignedItems={initialValues} onChange={input.onChange} onBlur={input.onBlur} availableItemsQuery={availableItemsQuery} availableItemsHeader={availableItemsLabel} assignedItemsHeader={assignedItemsLabel} errorText={touched && error} {...other} />;\n};\nexport const renderSearchableOrgUnitTree = ({\n  input,\n  meta: {\n    touched,\n    error\n  },\n  label,\n  wrapperStyle,\n  initialValues,\n  orgUnitType\n}) => {\n  return <SearchableOrgUnitTree selectedOrgUnits={initialValues} onChange={input.onChange} wrapperStyle={wrapperStyle} headerText={label} orgUnitType={orgUnitType} errorText={touched && error} onBlur={input.onBlur} />;\n};\nexport const renderText = ({\n  name,\n  label,\n  style\n}) => {\n  return <p key={name} style={style}>\n            {label}\n        </p>;\n};\nconst sharedPropTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool.isRequired,\n    asyncValidating: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderTextField.propTypes = sharedPropTypes;\nrenderCheckbox.propTypes = sharedPropTypes;\nrenderSelectField.propTypes = { ...sharedPropTypes,\n  options: PropTypes.array.isRequired\n};\nrenderSearchableGroupEditor.propTypes = { ...sharedPropTypes,\n  availableItemsQuery: PropTypes.func.isRequired,\n  initialValues: PropTypes.array.isRequired,\n  assignedItemsLabel: PropTypes.string,\n  availableItemsLabel: PropTypes.string\n};\nrenderSearchableOrgUnitTree.propTypes = { ...sharedPropTypes,\n  initialValues: PropTypes.array.isRequired,\n  wrapperStyle: PropTypes.object\n};\nrenderAuthorityEditor.propTypes = { ...sharedPropTypes\n};\nrenderText.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired\n};","import { renderText, renderTextField, renderSearchableGroupEditor } from '../../utils/fieldRenderers';\nimport asArray from '../../utils/asArray';\nimport i18n from '@dhis2/d2-i18n';\nexport const FORM_NAME = 'groupForm';\nexport const NAME = 'name';\nexport const CODE = 'code';\nexport const MANAGED_GROUPS = 'managedGroups';\nexport const GROUP_PROPS = [NAME, CODE, MANAGED_GROUPS];\nexport const STYLES = {\n  loaderWrap: {\n    paddingTop: '2rem',\n    textAlign: 'center'\n  }\n};\nexport const getFields = () => [{\n  name: NAME,\n  label: i18n.t('Name'),\n  fieldRenderer: renderTextField,\n  isRequiredField: true\n}, {\n  name: CODE,\n  label: i18n.t('Code'),\n  fieldRenderer: renderTextField\n}, {\n  name: 'manage_users_info',\n  fieldRenderer: renderText,\n  label: i18n.t('To add a user to this group, go to the User section and edit the user group settings for a specific user.'),\n  style: {\n    border: '1px solid #bdbdbd',\n    backgroundColor: '#e5e5e5',\n    padding: 12\n  }\n}, {\n  name: MANAGED_GROUPS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: group => asArray(group[MANAGED_GROUPS]),\n  availableItemsQuery: 'getAvailableUserGroups',\n  availableItemsLabel: i18n.t('Available user groups'),\n  assignedItemsLabel: i18n.t('Managed user groups')\n}];","/**\n * A collection of selector functions that return derived state slices. Results are memoized where possible.\n * @module selectors\n */\nimport memoize from 'lodash.memoize';\nimport isUndefined from 'lodash.isundefined';\nimport i18n from '@dhis2/d2-i18n';\nimport { USER_PROPS, USER_CRED_PROPS, INTERFACE_LANGUAGE, DATABASE_LANGUAGE, INVITE, INVITE_USER, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, EXPIRE_DATE, SET_PASSWORD } from '../containers/UserForm/config';\nimport { getFields as getUserGroupFields } from '../containers/GroupForm/config';\nimport asArray from '../utils/asArray';\nimport getNestedProp from '../utils/getNestedProp';\n/**\n * @param {Object} pager - A d2 Pager instance\n * @returns {Object} The d2 Pager instance with an appended 'currentlyShown' property\n * @function\n */\n\nexport const pagerSelector = memoize(pager => {\n  if (pager === null) {\n    return pager;\n  }\n\n  const {\n    total,\n    pageCount,\n    page,\n    query: {\n      pageSize\n    }\n  } = pager;\n  const pageCalculationValue = total - (total - (pageCount - (pageCount - page)) * pageSize);\n  const startItem = 1 + pageCalculationValue - pageSize;\n  const endItem = pageCalculationValue;\n  pager.currentlyShown = `${startItem} - ${endItem > total ? total : endItem}`;\n  return pager;\n});\n/**\n * @param {Object} list - A d2 list ModelCollection instance\n * @param {Object} [groupMemberships] - An array of groupMembership IDs (userGroup only)\n * @returns {Array} An array of d2 model instances with properties appended for use in the List component\n * @function\n */\n\nexport const listSelector = (list, groupMemberships) => {\n  if (!list || typeof list === 'string') {\n    return list;\n  }\n\n  const listType = list.modelDefinition.name;\n  return list.toArray().map(item => listMappings[listType](item, groupMemberships));\n};\nconst listMappings = {\n  user: item => {\n    item.userName = item.userCredentials.username;\n    item.disabled = item.userCredentials.disabled;\n    item.accountExpiry = item.userCredentials.accountExpiry;\n    item.lastLogin = item.userCredentials.lastLogin;\n    return item;\n  },\n  userRole: item => item,\n  userGroup: (item, groupMemberships) => {\n    item.currentUserIsMember = groupMemberships.includes(item.id);\n    return item;\n  }\n};\n/**\n * @param {Object} orgUnits - an array of d2 organisation unit instances\n * @returns {String} Either a comma delimited list of organisation unit names, or a count of selected organisation units phrase\n * @function\n */\n\nexport const orgUnitsAsStringSelector = memoize(orgUnits => {\n  return orgUnits.length < 3 ? orgUnits.map(unit => unit.displayName).join(', ') : i18n.t('{{count}} selected', {\n    count: orgUnits.length\n  });\n});\n\nconst jsDateToISO8601 = date => `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n\nconst addInitialValueFrom = (sourceObject, initialValues, propName) => {\n  if (propName === EXPIRE_DATE) {\n    const expiryDate = new Date(sourceObject[propName]);\n    const formattedDate = jsDateToISO8601(expiryDate);\n    initialValues[propName] = formattedDate;\n  } else if (propName === DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS) {\n    initialValues[propName] = [...sourceObject.catDimensionConstraints, ...sourceObject.cogsDimensionConstraints];\n  } else if (sourceObject[propName] && !isUndefined(sourceObject[propName].size) || Array.isArray(sourceObject[propName])) {\n    initialValues[propName] = asArray(sourceObject[propName]).map(({\n      id\n    }) => id);\n  } else {\n    initialValues[propName] = sourceObject[propName];\n  }\n};\n/**\n * Produces initial values for redux form\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @param {Object} locales - Contains available and selected locales for the UI and DB\n * @returns {Object} Initial values for the redux form wrapping the UserForm component\n * @function\n */\n\n\nexport const userFormInitialValuesSelector = memoize((user, locales, attributeFields) => {\n  const initialValues = {\n    [INVITE]: SET_PASSWORD\n  };\n\n  if (user.id) {\n    USER_PROPS.forEach(propName => {\n      addInitialValueFrom(user, initialValues, propName);\n    });\n    USER_CRED_PROPS.forEach(propName => {\n      addInitialValueFrom(user.userCredentials, initialValues, propName);\n    });\n    attributeFields.forEach(field => initialValues[field.name] = field.value);\n  } // 'en' is a fallback for systems that have no default system UI locale specified\n\n\n  initialValues[INTERFACE_LANGUAGE] = locales.ui.selected || 'en';\n  initialValues[DATABASE_LANGUAGE] = locales.db.selected;\n  return initialValues;\n});\nexport const userGroupFormInitialValuesSelector = memoize((userGroup, attributeFields) => {\n  const initialValues = {};\n  getUserGroupFields().forEach(field => {\n    addInitialValueFrom(userGroup, initialValues, field.name);\n  });\n  attributeFields.forEach(field => initialValues[field.name] = field.value);\n  return initialValues;\n});\n/**\n * Used to combine cat and cog dimension restrictions into a single array\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @returns {Object} An array of cat and cog IDs\n * @function\n */\n\nexport const analyticsDimensionsRestrictionsSelector = memoize(user => {\n  const catConstraints = asArray(getNestedProp('userCredentials.catDimensionConstraints', user));\n  const cogsConstraints = asArray(getNestedProp('userCredentials.cogsDimensionConstraints', user));\n  return [...catConstraints, ...cogsConstraints];\n});\n/**\n * A short item is a basic version of state.currentItem, derived from a list.\n * It is used to display basic information in a FormLoader or DetailSummary component\n * while the full version of the currentItem is being fetched.\n * @param {String} id - The id of the model selected in a list\n * @param {Object} list - A d2  model collection instance instance (state.list)\n * @returns {Object} A d2 model instance containing only a few basic properties\n * @function\n */\n\nexport const shortItemSelector = memoize((id, list) => {\n  if (!list || !id) {\n    return null;\n  }\n\n  return list.get(id);\n});\n/**\n * Organisation unit trees should have different roots depending on the context.\n * @param {String} orgUnitType - The type orgUnits to return\n * @param {Object} currentUser - state.currentUser\n * @returns {Array|null} The roots of the organisation unit tree to be displayed\n * @function\n */\n\nexport const orgUnitRootsSelector = (orgUnitType, currentUser) => {\n  const systemOrgRoots = currentUser.systemOrganisationUnitRoots;\n  const requestedOrgUnitRoots = currentUser[orgUnitType];\n  const fallBackOrgUnitRoots = currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS];\n  let orgUnitRoots = null;\n\n  if (currentUser.authorities.has('ALL')) {\n    orgUnitRoots = systemOrgRoots;\n  } else if (requestedOrgUnitRoots.size === 0) {\n    orgUnitRoots = fallBackOrgUnitRoots.toArray();\n  } else if (fallBackOrgUnitRoots.size > 0) {\n    orgUnitRoots = fallBackOrgUnitRoots.toArray();\n  }\n\n  return orgUnitRoots;\n};\n/**\n * The redux form `formValueSelector` was returning incorrect values,\n * so this selector was born.\n * @param {Object} formState - state.form.userForm\n * @returns {Boolean} - True if select box was switched to 'Invite user'\n * @function\n */\n\nexport const inviteUserValueSelector = formState => {\n  const fields = formState && formState.registeredFields;\n  const values = formState && formState.values;\n  const isRenderedField = Boolean(fields && fields[INVITE]);\n  const fieldValue = isRenderedField && values && values[INVITE];\n  return fieldValue === INVITE_USER;\n};","import { blue600 } from 'material-ui/styles/colors';\nimport asArray from '../../utils/asArray';\nimport i18n from '@dhis2/d2-i18n';\nimport getNestedProp from '../../utils/getNestedProp';\nimport { analyticsDimensionsRestrictionsSelector } from '../../selectors';\nimport { renderTextField, renderDateField, renderCheckbox, renderSelectField, renderSearchableGroupEditor, renderSearchableOrgUnitTree, renderText } from '../../utils/fieldRenderers';\nexport const STYLES = {\n  loaderWrap: {\n    paddingTop: '2rem',\n    textAlign: 'center'\n  },\n  toggler: {\n    color: blue600\n  },\n  orgUnitTree: {\n    width: 'calc(50% - 60px)',\n    float: 'left',\n    minHeight: '100px',\n    maxHeight: '1200px'\n  },\n  togglerWrap: {\n    clear: 'both',\n    paddingTop: '1.2rem',\n    marginBottom: '1.5rem'\n  },\n  additionalFieldsWrap: {\n    clear: 'both',\n    paddingTop: '1.5rem'\n  }\n};\nexport const FORM_NAME = 'userForm';\nexport const USERNAME = 'username';\nexport const EMAIL = 'email';\nexport const EXPIRE_DATE = 'accountExpiry';\nexport const DISABLED = 'disabled';\nexport const INVITE = 'inviteUser';\nexport const EXTERNAL_AUTH = 'externalAuth';\nexport const PASSWORD = 'password';\nexport const REPEAT_PASSWORD = 'repeatPassword';\nexport const SURNAME = 'surname';\nexport const FIRST_NAME = 'firstName';\nexport const OPEN_ID = 'openId';\nexport const LDAP_ID = 'ldapId';\nexport const PHONE_NUMBER = 'phoneNumber';\nexport const INTERFACE_LANGUAGE = 'interfaceLanguage';\nexport const DATABASE_LANGUAGE = 'databaseLanguage';\nexport const ASSIGNED_ROLES = 'userRoles';\nexport const DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS = 'organisationUnits';\nexport const DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS = 'dataViewOrganisationUnits';\nexport const TEI_SEARCH_ORG_UNITS = 'teiSearchOrganisationUnits';\nexport const ASSIGNED_USER_GROUPS = 'userGroups';\nexport const DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS = 'catCogsDimensionConstraints';\nexport const WHATS_APP = 'whatsApp';\nexport const FACEBOOK_MESSENGER = 'facebookMessenger';\nexport const SKYPE = 'skype';\nexport const TELEGRAM = 'telegram';\nexport const TWITTER = 'twitter';\nexport const USER_PROPS = [SURNAME, FIRST_NAME, EMAIL, PHONE_NUMBER, WHATS_APP, FACEBOOK_MESSENGER, SKYPE, TELEGRAM, TWITTER, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS, ASSIGNED_USER_GROUPS, TEI_SEARCH_ORG_UNITS];\nexport const USER_CRED_PROPS = [USERNAME, DISABLED, EXPIRE_DATE, EXTERNAL_AUTH, PASSWORD, OPEN_ID, LDAP_ID, ASSIGNED_ROLES, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS];\nexport const ALWAYS_REQUIRED = 'ALWAYS_REQUIRED';\nexport const INVITE_REQUIRED = 'INVITE_REQUIRED';\nexport const CREATE_REQUIRED = 'CREATE_REQUIRED';\nexport const USE_DB_LOCALE = 'use_db_locale';\nexport const SET_PASSWORD = 'SET_PASSWORD';\nexport const INVITE_USER = 'INVITE_USER';\n\nconst getBaseCaption = () => ({\n  label: i18n.t('Selecting an organisation unit provides access to all units in the sub-hierarchy'),\n  fieldRenderer: renderText,\n  style: {\n    clear: 'both',\n    paddingTop: '0.8rem',\n    fontStyle: 'italic',\n    fontSize: '0.9rem'\n  }\n});\n\nexport const getInviteFields = () => [{\n  name: INVITE,\n  label: i18n.t('Create account or email invitation'),\n  fieldRenderer: renderSelectField,\n  options: [{\n    id: SET_PASSWORD,\n    label: i18n.t('Create account with user details')\n  }, {\n    id: INVITE_USER,\n    label: i18n.t('Email invitation to create account')\n  }],\n  props: {\n    style: {// backgroundColor: 'rgb(110,188,253)',\n    }\n  }\n}];\nexport const getBaseFields = () => [{\n  name: USERNAME,\n  label: i18n.t('Username'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED\n}, {\n  name: EMAIL,\n  label: i18n.t('E-mail'),\n  fieldRenderer: renderTextField,\n  isRequiredField: INVITE_REQUIRED\n}, {\n  name: EXTERNAL_AUTH,\n  label: i18n.t('External authentication only (OpenID or LDAP)'),\n  fieldRenderer: renderCheckbox\n}, {\n  name: EXPIRE_DATE,\n  label: i18n.t('Account expiration date'),\n  fieldRenderer: renderDateField\n}, {\n  name: DISABLED,\n  label: i18n.t('Disabled'),\n  fieldRenderer: renderCheckbox\n}, {\n  name: PASSWORD,\n  label: i18n.t('Password'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED,\n  props: {\n    type: 'password',\n    autoComplete: 'new-password'\n  }\n}, {\n  name: REPEAT_PASSWORD,\n  label: i18n.t('Retype password'),\n  fieldRenderer: renderTextField,\n  isRequiredField: CREATE_REQUIRED,\n  props: {\n    type: 'password',\n    autoComplete: 'new-password'\n  }\n}, {\n  name: SURNAME,\n  label: i18n.t('Surname'),\n  isRequiredField: ALWAYS_REQUIRED,\n  fieldRenderer: renderTextField\n}, {\n  name: FIRST_NAME,\n  label: i18n.t('First name'),\n  isRequiredField: ALWAYS_REQUIRED,\n  fieldRenderer: renderTextField\n}, {\n  name: OPEN_ID,\n  label: i18n.t('OIDC mapping value'),\n  fieldRenderer: renderTextField\n}, {\n  name: LDAP_ID,\n  label: i18n.t('LDAP identifier'),\n  fieldRenderer: renderTextField\n}, {\n  name: PHONE_NUMBER,\n  label: i18n.t('Mobile phone number'),\n  fieldRenderer: renderTextField\n}, {\n  name: WHATS_APP,\n  label: i18n.t('WhatsApp'),\n  fieldRenderer: renderTextField\n}, {\n  name: FACEBOOK_MESSENGER,\n  label: i18n.t('Facebook Messenger'),\n  fieldRenderer: renderTextField\n}, {\n  name: SKYPE,\n  label: i18n.t('Skype'),\n  fieldRenderer: renderTextField\n}, {\n  name: TELEGRAM,\n  label: i18n.t('Telegram'),\n  fieldRenderer: renderTextField\n}, {\n  name: TWITTER,\n  label: i18n.t('Twitter'),\n  fieldRenderer: renderTextField\n}, {\n  name: INTERFACE_LANGUAGE,\n  label: i18n.t('Interface language'),\n  fieldRenderer: renderSelectField,\n  optionsSelector: 'locales.ui.available',\n  isRequiredField: ALWAYS_REQUIRED\n}, {\n  name: DATABASE_LANGUAGE,\n  label: i18n.t('Database language'),\n  fieldRenderer: renderSelectField,\n  optionsSelector: 'locales.db.available',\n  isRequiredField: ALWAYS_REQUIRED\n}, {\n  name: ASSIGNED_ROLES,\n  fieldRenderer: renderSearchableGroupEditor,\n  isRequiredField: ALWAYS_REQUIRED,\n  initialItemsSelector: user => asArray(getNestedProp('userCredentials.userRoles', user) || []),\n  availableItemsQuery: 'getAvailableUserRoles',\n  availableItemsLabel: i18n.t('Available roles'),\n  assignedItemsLabel: i18n.t('Selected roles')\n}, {\n  name: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n  label: i18n.t('Data capture and maintenance organisation units'),\n  isRequiredField: ALWAYS_REQUIRED,\n  orgUnitType: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingRight: '60px'\n  }\n}, {\n  name: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n  label: i18n.t('Data output and analytic organisation units'),\n  orgUnitType: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingLeft: '60px'\n  }\n}, { ...getBaseCaption(),\n  name: 'org_unit_info_1'\n}];\nexport const getAdditionalFields = () => [{\n  name: TEI_SEARCH_ORG_UNITS,\n  label: i18n.t('Search Organisation Units'),\n  orgUnitType: TEI_SEARCH_ORG_UNITS,\n  fieldRenderer: renderSearchableOrgUnitTree,\n  wrapperStyle: { ...STYLES.orgUnitTree,\n    paddingRight: '60px'\n  }\n}, { ...getBaseCaption(),\n  name: 'org_unit_info_2'\n}, {\n  name: ASSIGNED_USER_GROUPS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: user => asArray(user.userGroups) || [],\n  availableItemsQuery: 'getAvailableUserGroups',\n  availableItemsLabel: i18n.t('Available user groups'),\n  assignedItemsLabel: i18n.t('Selected user groups')\n}, {\n  name: DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n  fieldRenderer: renderSearchableGroupEditor,\n  initialItemsSelector: user => analyticsDimensionsRestrictionsSelector(user),\n  availableItemsQuery: 'getAvailableDataAnalyticsDimensionRestrictions',\n  availableItemsLabel: i18n.t('Available dimension restrictions for data analytics'),\n  assignedItemsLabel: i18n.t('Selected dimension restrictions for data analytics'),\n  returnModelsOnUpdate: true\n}];","export const USER = 'user';\nexport const USER_ROLE = 'userRole';\nexport const USER_GROUP = 'userGroup';","import i18n from '@dhis2/d2-i18n';\nimport { PASSWORD, REPEAT_PASSWORD } from '../containers/UserForm/config'; // Same as used in @dhis2/ui-forms\n\nconst EMAIL_ADDRESS_PATTERN = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i;\nconst INTERNATIONAL_PHONE_NUMBER_PATTERN = /^\\+(?:[0-9].?){4,14}[0-9]$/;\nconst DATE_PATTERN = /[0-9]{4}-[0-9]{2}-[0-9]{2}/;\nconst LOWER_CASE_PATTERN = /^(?=.*[a-z]).+$/;\nconst UPPER_CASE_PATTERN = /^(?=.*[A-Z]).+$/;\nconst DIGIT_PATTERN = /^(?=.*[0-9]).+$/; // Using this regex to match all non-alphanumeric characters to match server-side implementation\n// https://github.com/dhis2/dhis2-core/blob/master/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/SpecialCharacterValidationRule.java#L39\n\nconst SPECIAL_CHARACTER_PATTERN = /[^a-zA-Z0-9]/; // validators (ordered alphabetically)\n\nexport function code(value) {\n  if (hasValue(value) && value.length > 50) {\n    return i18n.t('Exceeds maximum character limit of 50');\n  }\n}\nexport function date(value) {\n  if (hasValue(value) && !DATE_PATTERN.test(value)) {\n    return i18n.t('Please enter a valid date with the following format yyyy-mm-dd');\n  }\n}\nexport function email(value) {\n  if (hasValue(value) && !EMAIL_ADDRESS_PATTERN.test(value.toLowerCase())) {\n    return i18n.t('Please provide a valid email address');\n  }\n}\nexport function integer(value) {\n  if (hasValue(value) && !isInteger(value)) {\n    return i18n.t('Value should be an integer');\n  }\n}\nexport function negativeInteger(value) {\n  if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) >= 0)) {\n    return i18n.t('Value should be a nagative integer');\n  }\n}\nexport function number(value) {\n  if (hasValue(value) && isNaN(value)) {\n    return i18n.t('Value should be a number');\n  }\n}\nexport function password(value, allValues, props) {\n  if (!shouldValidatePassword(allValues, props)) {\n    return undefined;\n  }\n\n  const passwordError = checkPasswordForErrors(allValues[PASSWORD]);\n\n  if (passwordError) {\n    return passwordError;\n  }\n}\nexport function positiveInteger(value) {\n  if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) <= 0)) {\n    return i18n.t('Value should be a positive integer');\n  }\n}\nexport function repeatPassword(value, allValues) {\n  if (allValues[REPEAT_PASSWORD] !== allValues[PASSWORD]) {\n    return i18n.t('Passwords do not match');\n  }\n}\nexport function required(value) {\n  return !hasValue(value) ? i18n.t('This field is required') : undefined;\n}\nexport function requiredArray(value) {\n  if (!(Array.isArray(value) && value.length > 0)) {\n    return i18n.t('This field is required. Please select at least one');\n  }\n}\nexport function username(value) {\n  if (hasValue(value) && value.length < 2) {\n    return i18n.t('A username should be at least 2 characters long');\n  }\n\n  if (hasValue(value) && value.length > 140) {\n    return i18n.t('Username may not exceed 140 characters');\n  }\n}\nexport function whatsApp(value) {\n  if (hasValue(value) && !INTERNATIONAL_PHONE_NUMBER_PATTERN.test(value)) {\n    return i18n.t('Please provide a valid international phone number (+0123456789)');\n  }\n} // Helpers\n\n/**\n * Tests if a given password is compliant with the password restrictions. This function checks all restrictions below, but returns when the first violation was found:\n * - At least 8 characters\n * - No more than 34 characters\n * - Contains at least 1 lowercase character\n * - Contains at least 1 UPPERCASE character\n * - Contains at least 1 number\n * - Contains at least 1 special character\n * @param {String} password\n * @return {null|String} Null if password is OK, otherwise an error message\n * @memberof module:utils\n * @function\n */\n\nfunction checkPasswordForErrors(password) {\n  if (!hasValue(password)) {\n    return i18n.t('This field is required');\n  }\n\n  if (password.length < 8) {\n    return i18n.t('Password should be at least 8 characters long');\n  }\n\n  if (password.length > 35) {\n    return i18n.t('Password should be no longer than 34 characters');\n  }\n\n  if (!LOWER_CASE_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one lowercase letter');\n  }\n\n  if (!UPPER_CASE_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one UPPERCASE letter');\n  }\n\n  if (!DIGIT_PATTERN.test(password)) {\n    return i18n.t('Password should contain at least one number');\n  }\n\n  if (!SPECIAL_CHARACTER_PATTERN.test(password)) {\n    return i18n.t('Password should have at least one special character');\n  }\n\n  return null;\n}\n\nfunction isInteger(value) {\n  if (isNaN(value)) {\n    return false;\n  }\n\n  const x = parseFloat(value);\n  return (x | 0) === x;\n}\n\nfunction shouldValidatePassword(allValues, props) {\n  if (props.inviteUser) {\n    return false;\n  }\n\n  const isEditingUser = Boolean(props.user.id);\n  const isEmptyOnEdit = isEditingUser && !allValues[PASSWORD] && !allValues[REPEAT_PASSWORD];\n  return isEmptyOnEdit ? false : true;\n}\n\nfunction hasValue(value) {\n  return typeof value !== 'undefined' && value !== null && value !== '';\n}","const notADateValue = 'not-a-date';\nlet hasDateInputSupport;\nexport default function browserHasDateInputSupport() {\n  // Return cached result if available\n  if (typeof hasDateInputSupport !== 'undefined') {\n    return hasDateInputSupport;\n  }\n\n  let input = document.createElement('input');\n  input.setAttribute('type', 'date');\n  input.setAttribute('value', notADateValue); // Cache result\n\n  hasDateInputSupport = input.value !== notADateValue;\n  input = null;\n  return hasDateInputSupport;\n}","import i18n from '@dhis2/d2-i18n';\nimport { renderTextField, renderCheckbox, renderSelectField } from './fieldRenderers';\nimport { number, integer, positiveInteger, negativeInteger, date } from './validators';\nimport browserHasDateInputSupport from './browserHasDateInputSupport';\nexport const USER_ATTRIBUTE_FIELD_PREFIX = 'userAttibute_';\nexport const NO_VALUE_OPTION = 'no_value';\n/**************************************************************************\n    Attributes can be either based on an optionSet, or based on a valueType.\n    Attributes based on optionSets are supported.\n    Attributes based on valueTypes are partially supported, see below:\n        [X] TEXT\n        [X] LONG_TEXT\n        [ ] LETTER\n        [ ] PHONE_NUMBER\n        [ ] EMAIL\n        [X] BOOLEAN\n        [X] TRUE_ONLY\n        [X] DATE\n        [ ] DATETIME\n        [ ] TIME\n        [X] NUMBER\n        [ ] UNIT_INTERVAL\n        [ ] PERCENTAGE\n        [X] INTEGER\n        [X] INTEGER_POSITIVE\n        [X] INTEGER_NEGATIVE\n        [ ] INTEGER_ZERO_OR_POSITIVE\n        [ ] TRACKER_ASSOCIATE\n        [ ] USERNAME\n        [ ] COORDINATE\n        [ ] ORGANISATION_UNIT\n        [ ] AGE\n        [ ] URL\n        [ ] FILE_RESOURCE\n        [ ] IMAGE\n****************************************************************************/\n\nexport function generateAttributeFields(attributes, userAttributeValues) {\n  return attributes.map(attribute => generateAttributeField(attribute, userAttributeValues));\n}\nexport function addUniqueAttributesToAsyncBlurFields(attributeFields, asyncBlurFields) {\n  attributeFields.forEach(({\n    shouldBeUnique,\n    name\n  }) => {\n    if (shouldBeUnique) {\n      // It seems hacky to push to props, but seems to be the way to do it:\n      // https://github.com/erikras/redux-form/issues/708#issuecomment-191446641\n      asyncBlurFields.push(name);\n    }\n  });\n}\nexport function parseAttributeValues(values, attributeFields) {\n  const fieldTypeLookup = attributeFields.reduce((lookup, {\n    attributeId,\n    valueType\n  }) => {\n    lookup[attributeId] = valueType;\n    return lookup;\n  }, {});\n  return Object.keys(values).reduce((attributeValues, key) => {\n    const isUserAttribute = key.indexOf(USER_ATTRIBUTE_FIELD_PREFIX) !== -1;\n\n    if (isUserAttribute) {\n      const id = key.replace(USER_ATTRIBUTE_FIELD_PREFIX, '');\n      const value = values[key];\n      const isClearedTrueOnlyField = fieldTypeLookup[id] === 'TRUE_ONLY' && !value;\n      const isClearedOptionalDropDown = value === NO_VALUE_OPTION;\n\n      if (!isClearedTrueOnlyField && !isClearedOptionalDropDown) {\n        attributeValues.push({\n          value: value,\n          attribute: {\n            id: id\n          }\n        });\n      }\n    }\n\n    return attributeValues;\n  }, []);\n}\n\nconst createValueTypeMapping = () => ({\n  OPTION_SET: {\n    fieldRenderer: renderSelectField\n  },\n  TEXT: {\n    fieldRenderer: renderTextField\n  },\n  LONG_TEXT: {\n    fieldRenderer: renderTextField,\n    props: {\n      multiLine: true,\n      rows: 3,\n      rowsMax: 6\n    }\n  },\n  DATE: {\n    fieldRenderer: renderTextField,\n    props: {\n      type: 'date',\n      // If browser supports <input type=\"date\"/>, the label should always float above the input\n      // because the date input has some text that overlaps with the hintText\n      floatingLabelFixed: browserHasDateInputSupport(),\n      hintText: null\n    },\n    fieldValidators: [date]\n  },\n  BOOLEAN: {\n    fieldRenderer: renderSelectField,\n    props: {\n      options: [{\n        id: 'true',\n        label: i18n.t('Yes')\n      }, {\n        id: 'false',\n        label: i18n.t('No')\n      }]\n    }\n  },\n  TRUE_ONLY: {\n    fieldRenderer: renderCheckbox\n  },\n  NUMBER: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [number]\n  },\n  INTEGER: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [integer]\n  },\n  INTEGER_POSITIVE: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [positiveInteger]\n  },\n  INTEGER_NEGATIVE: {\n    fieldRenderer: renderTextField,\n    fieldValidators: [negativeInteger]\n  }\n});\n\nconst getValueTypeMapping = (() => {\n  let valueTypeMapping = null;\n  return () => {\n    if (!valueTypeMapping) {\n      valueTypeMapping = createValueTypeMapping();\n    }\n\n    return valueTypeMapping;\n  };\n})();\n\nfunction generateAttributeField({\n  id,\n  valueType,\n  displayName,\n  mandatory,\n  unique,\n  optionSet\n}, userAttributeValues) {\n  const userAttribute = userAttributeValues && userAttributeValues.find(attributeValue => attributeValue.attribute.id === id);\n  const valueTypeProps = getValueTypeProps(valueType, optionSet, mandatory);\n  return {\n    name: USER_ATTRIBUTE_FIELD_PREFIX + id,\n    isAttributeField: true,\n    label: displayName,\n    isRequiredField: mandatory,\n    shouldBeUnique: unique,\n    attributeId: id,\n    value: userAttribute && userAttribute.value || null,\n    valueType,\n    ...valueTypeProps\n  };\n}\n\nfunction getValueTypeProps(valueType, optionSet, mandatory) {\n  const valueTypeMapping = getValueTypeMapping(); // Attributes based on an option-set have TEXT as their valueType but need to render a select/dropdown with the options\n\n  const valueTypeProps = optionSet ? { ...valueTypeMapping.OPTION_SET,\n    props: {\n      options: optionSet.options.map(option => ({\n        id: option.id,\n        label: option.displayName\n      }))\n    }\n  } : // Use valueTypeMapping.TEXT as fallback field renderer.\n  // This way all attributes will always be editable, albeit not necesarrily enforcing the correct formatting\n  valueTypeMapping[valueType] || valueTypeMapping.TEXT; // Optional dropdown fields need a way to be cleared, so we create an empty option\n\n  if (valueTypeProps.fieldRenderer === renderSelectField && !mandatory && valueTypeProps.props.options[0].id !== NO_VALUE_OPTION) {\n    valueTypeProps.props.options = [{\n      id: NO_VALUE_OPTION,\n      label: i18n.t('<No value>')\n    }, ...valueTypeProps.props.options];\n  }\n\n  return valueTypeProps;\n}","/* eslint-disable max-params */\n\n/**\n * This module includes helper functions used by the API class\n * @module Api/utils\n */\nimport snakeCase from 'lodash.snakecase';\nimport isUndefined from 'lodash.isundefined';\nimport store from '../store';\nimport { PAGE as DEFAULT_PAGE, PAGE_SIZE as DEFAULT_PAGE_SIZE } from '../constants/defaults';\nimport FIELDS from '../constants/queryFields';\nimport { USER_PROPS, USER_CRED_PROPS, DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS, DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS, EXPIRE_DATE, PASSWORD, REPEAT_PASSWORD, EXTERNAL_AUTH } from '../containers/UserForm/config';\nimport { USER } from '../constants/entityTypes';\nimport { parseAttributeValues } from '../utils/attributeFieldHelpers';\n/**\n * Helper function that produces a \"fields\" array used in the api request payload\n * @param {String} entityName - \"user\" \"userRole\" or \"userGroup\"\n * @param {Boolean} detailFields - Should be true if caller want to get field\n * @return {Array} An array of fields/properties that should be included in the api response\n * @function\n */\n\nexport const getQueryFields = (entityName, detailFields) => {\n  const formattedEntityName = snakeCase(entityName).toUpperCase();\n  const varName = detailFields ? `${formattedEntityName}_DETAILS` : `${formattedEntityName}_LIST`;\n  return FIELDS[varName];\n};\n/**\n * Helper function that prepares the request payload for a getList api call.\n * Combines the\n * @param {Number} page - The page number that should be requested\n * @param {Object} filter - Parameters to filter the result set with on the server\n * @param {Array} fields - Properties that should be returned for each object\n * @returns {Object} A valid request payload for api list calls\n * @function\n */\n\nexport const createListRequestData = (page = DEFAULT_PAGE, filter, fields, entityName, currentUser) => {\n  const {\n    query,\n    inactiveMonths,\n    selfRegistered,\n    invitationStatus,\n    organisationUnits\n  } = filter;\n  const requestData = {\n    pageSize: DEFAULT_PAGE_SIZE,\n    fields,\n    page,\n    order: entityName === USER ? ['firstName:asc', 'surname:asc'] : 'name:asc'\n  };\n\n  if (entityName === USER && !isSuperUser(currentUser)) {\n    requestData.userOrgUnits = true;\n    requestData.includeChildren = true;\n  }\n\n  if (query) requestData.query = query;\n  if (inactiveMonths) requestData.inactiveMonths = inactiveMonths;\n  if (selfRegistered) requestData.selfRegistered = selfRegistered;\n  if (invitationStatus) requestData.invitationStatus = invitationStatus;\n\n  if (organisationUnits.length) {\n    const ids = organisationUnits.map(unit => unit.id).join();\n    requestData.filter = `organisationUnits.id:in:[${ids}]`;\n  }\n\n  return requestData;\n};\n\nconst isSuperUser = ({\n  authorities\n}) => authorities.has('ALL');\n\nconst addValueAsProp = (data, value, propName) => {\n  if (!isUndefined(value)) {\n    data[propName] = Array.isArray(value) ? value.map(id => ({\n      id\n    })) : value;\n  }\n};\n/**\n * This function prepares a the payload object used for saving a user\n * @param {Object} values - Key-value with form values produced by redux-form\n * @param {Object} user - D2 user model instance\n * @returns {Object}  Object that may be PUT/POSTed to the server to save a user\n * @function\n */\n\n\nexport const parseUserSaveData = (values, user, inviteUser, attributeFields) => {\n  const isNewUser = !user.id;\n  const userModelOwnedProperties = user.modelDefinition.getOwnedPropertyNames();\n  const data = isNewUser ? {\n    userCredentials: {\n      cogsDimensionConstraints: [],\n      catDimensionConstraints: []\n    }\n  } : {\n    id: user.id,\n    userCredentials: {\n      id: user.userCredentials && user.userCredentials.id,\n      userInfo: {\n        id: user.id\n      },\n      cogsDimensionConstraints: [],\n      catDimensionConstraints: []\n    }\n  };\n  const cred = data.userCredentials; // catCogsDimensionConstraints are combined into a single input component,\n  // but need to be stored separately\n\n  if (Array.isArray(values.catCogsDimensionConstraints)) {\n    values.catCogsDimensionConstraints.forEach(constraint => {\n      if (constraint.dimensionType === 'CATEGORY_OPTION_GROUP_SET') {\n        cred.cogsDimensionConstraints.push({\n          id: constraint.id\n        });\n      } else {\n        cred.catDimensionConstraints.push({\n          id: constraint.id\n        });\n      }\n    });\n  }\n\n  USER_PROPS.forEach(propName => addValueAsProp(data, values[propName], propName));\n  USER_CRED_PROPS.forEach(propName => addValueAsProp(cred, values[propName], propName)); // See https://jira.dhis2.org/browse/DHIS2-10569\n\n  if (!cred[EXPIRE_DATE] && typeof cred[EXPIRE_DATE] !== 'undefined') {\n    delete cred[EXPIRE_DATE];\n  }\n\n  data.attributeValues = parseAttributeValues(values, attributeFields); // This property was appended to the model by hand but needs to be removed before saving the user\n\n  delete cred[DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS];\n\n  if (inviteUser || values[EXTERNAL_AUTH]) {\n    delete cred[PASSWORD];\n    delete cred[REPEAT_PASSWORD];\n  } // Because the data object is used as the payload of a PUT request, properties that are omitted will be removed\n  // To prevent this, all remaining owned properties are copied from the user to the data object\n  // This is only required when editing users, because new users can't have such properties\n\n\n  if (!isNewUser) {\n    for (const ownedPropName of userModelOwnedProperties) {\n      if (user[ownedPropName] && !(ownedPropName in data)) {\n        data[ownedPropName] = user[ownedPropName];\n      }\n    }\n  }\n\n  return data;\n};\nexport const parseLocaleUrl = (type, username, val) => {\n  return `/userSettings/key${type}Locale?user=${username}&value=${val}`;\n};\nexport const mapLocale = ({\n  locale,\n  name\n}) => {\n  return {\n    id: locale,\n    label: name\n  };\n};\n/**\n * When querying the server for organisation units that match a certain query string, the server returns all units from the system root.\n * However, the current user should only be able to see organisation units that he has access to.\n * @param {Object} orgUnits - A d2 ModelCollection instance of organisation units which has been filtered on the server by a query string\n * @param {*} orgUnitType - The type of organisation unit that should be used to restrict the results by\n * @returns {Array} - An filtered array of d2 models only including organisation units that the current user has access to\n * @function\n */\n\nexport const getRestrictedOrgUnits = (orgUnits, orgUnitType) => {\n  const {\n    currentUser\n  } = store.getState(); // Superuser can always see all org units\n\n  if (currentUser.authorities.has('ALL')) {\n    return orgUnits.toArray();\n  } // Try the requested orgUnitType first and use currentUser.organisationUnits as fallback\n\n\n  const availableOrgUnits = currentUser[orgUnitType].size > 0 ? currentUser[orgUnitType] : currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS];\n  return orgUnits.toArray().filter(unit => {\n    const isAvailableUnit = Boolean(availableOrgUnits.get(unit.id));\n    const hasAvailableAncestor = !isAvailableUnit && unit.ancestors.toArray().some(ancestor => Boolean(availableOrgUnits.get(ancestor.id)));\n    return isAvailableUnit || hasAvailableAncestor;\n  });\n};\nexport const appendUsernameToDisplayName = userModelCollection => userModelCollection.toArray().map(userModel => {\n  const username = userModel.userCredentials.username;\n  const user = userModel.toJSON();\n  user.displayName += ` (${username})`;\n  return user;\n});\nexport const parse200Error = response => {\n  const messages = [];\n\n  for (const typeReport of response.typeReports) {\n    for (const objectReport of typeReport.objectReports) {\n      for (const errorReport of objectReport.errorReports) {\n        messages.push({\n          message: errorReport.message\n        });\n      }\n    }\n  }\n\n  return {\n    messages\n  };\n};\nexport const getAttributesWithValueAndId = (userCollection, value, attributeId) => userCollection.toArray().reduce((list, user) => list.concat(user.attributeValues.filter(attributeValue => value === attributeValue.value && attributeId === attributeValue.attribute.id)), []);","/* eslint-disable max-params */\nimport i18n from '@dhis2/d2-i18n';\nimport { getQueryFields, createListRequestData, parseUserSaveData, parseLocaleUrl, getRestrictedOrgUnits, mapLocale, appendUsernameToDisplayName, parse200Error, getAttributesWithValueAndId } from './utils';\nimport groupAuthorities from '../components/AuthorityEditor/utils/groupAuthorities';\nimport { ORG_UNITS_QUERY_CONFIG, CURRENT_USER_ORG_UNITS_FIELDS } from '../constants/queryFields';\nimport { INTERFACE_LANGUAGE, DATABASE_LANGUAGE, USE_DB_LOCALE } from '../containers/UserForm/config';\n/**\n * The Api class exposes all necessary functions to get the required data from the DHIS2 web api.\n */\n\nclass Api {\n  /**\n   * On instantiation d2 and the d2-api instance are attached to the this scope, so they are easily accessible by its members.\n   */\n  init(d2) {\n    this.d2 = d2;\n    this.d2Api = d2.Api.getApi(); // In development you can access d2 and d2Api via the console\n\n    if (process.env.NODE_ENV === 'development') {\n      window.d2 = this.d2;\n      window.d2Api = this.d2Api;\n    }\n  }\n  /**************************\n   ********* GENERIC ********\n   **************************/\n\n\n  getD2 = () => {\n    return this.d2;\n  };\n  getContextPath = () => {\n    return this.d2.system.systemInfo.contextPath;\n  };\n  getList = (entityName, page, filter) => {\n    const fields = getQueryFields(entityName);\n    const requestData = createListRequestData(page, filter, fields, entityName, this.getCurrentUser());\n    return this.d2.models[entityName].list(requestData);\n  };\n  getItem = (entityName, id) => {\n    const data = {\n      fields: getQueryFields(entityName, true)\n    };\n    return this.d2.models[entityName].get(id, data);\n  };\n  genericFind = (entityName, propertyName, value) => {\n    return this.d2.models[entityName].filter().on(propertyName).equals(value).list({\n      fields: ['id']\n    });\n  };\n  /**************************\n   ********* USERS **********\n   **************************/\n\n  replicateUser = (id, username, password) => {\n    const url = `/users/${id}/replica`;\n    const data = {\n      username,\n      password\n    };\n    return this.d2Api.post(url, data);\n  };\n  /**\n   * Fetches organisation units matching the query string from the server.\n   * Once the results are returned they are filtered client-side\n   * to only contain organisation units available to the current user.\n   * Used by SearchableOrgUnitTree in UserForm and UserList.\n   * @param {String} query - They search string to let the server query on\n   * @param {String} orgUnitType - The type of organisation unit to use for client side filtering\n   * @returns {Array} A filtered array of organisation units\n   */\n\n  queryOrgUnits = (query, orgUnitType) => {\n    const listConfig = { ...ORG_UNITS_QUERY_CONFIG,\n      query\n    };\n    return this.d2.models.organisationUnits.list(listConfig).then(orgUnits => getRestrictedOrgUnits(orgUnits, orgUnitType));\n  };\n  getAvailableUserRoles = () => {\n    const data = {\n      canIssue: true,\n      fields: ['id', 'displayName'],\n      paging: false\n    };\n    return this.d2.models.userRoles.list(data);\n  };\n  getAvailableDataAnalyticsDimensionRestrictions = () => {\n    const url = '/dimensions/constraints';\n    const data = {\n      fields: ['id', 'name', 'dimensionType'],\n      paging: false\n    };\n    return this.d2Api.get(url, data).then(({\n      dimensions\n    }) => dimensions);\n  };\n  updateDisabledState = (id, disabled) => {\n    const url = `/users/${id}`;\n    const data = {\n      userCredentials: {\n        disabled: disabled\n      }\n    };\n    return this.d2Api.patch(url, data);\n  };\n  disable2FA = id => {\n    const url = `/users/${id}`;\n    const data = {\n      userCredentials: {\n        twoFA: false\n      }\n    };\n    return this.d2Api.patch(url, data);\n  };\n  getSelectedAndAvailableLocales = username => {\n    username = username ? encodeURIComponent(username) : null;\n    const useDbLocaleOption = {\n      id: USE_DB_LOCALE,\n      label: i18n.t('Use database locale / no translation')\n    };\n    const dbLocales = this.d2Api.get('/locales/db');\n    const uiLocales = this.d2Api.get('/locales/ui');\n    const uiLocale = username ? this.d2Api.get(`/userSettings/keyUiLocale?user=${username}`) : this.d2.system.settings.get('keyUiLocale');\n    const dbLocale = username ? this.d2Api.get(`/userSettings/keyDbLocale?user=${username}`) : Promise.resolve(USE_DB_LOCALE);\n    return Promise.all([dbLocales, uiLocales, dbLocale, uiLocale]).then(([dbLocales, uiLocales, dbLocale, uiLocale]) => ({\n      db: {\n        available: [useDbLocaleOption, ...dbLocales.map(mapLocale)],\n        selected: dbLocale || USE_DB_LOCALE\n      },\n      ui: {\n        available: uiLocales.map(mapLocale),\n        selected: uiLocale\n      }\n    }));\n  };\n\n  getAttributes(entityType) {\n    return this.d2Api.get('attributes', {\n      fields: ['id', 'displayName', 'mandatory', 'unique', 'valueType', 'optionSet[options[id,displayName]]'],\n      filter: `${entityType}Attribute:eq:true`,\n      paging: false\n    }).then(resp => resp.attributes);\n  }\n\n  isAttributeUnique(entityType, modelId, attributeId, value) {\n    return this.d2.models[entityType] // All users/userGroups but current\n    .filter().on('id').notEqual(modelId) // Attribute id being validated\n    // NB: this only means we are filtering users that have ANY value\n    // on the current attributeId\n    .filter().on('attributeValues.attribute.id').equals(attributeId) // Value on form\n    .filter().on('attributeValues.value').equals(value).list({\n      paging: false,\n      fields: ['id', 'attributeValues[value, attribute[id]]']\n    }).then(userCollection => {\n      // If no users are found at this point, the attribute value is definitely unique\n      if (userCollection.size === 0) {\n        return true;\n      } // If users are returned, this can still include records with the SAME value\n      // on ANOTHER attribute. So we have to filter on the current value and attributeId\n\n\n      const attributesWithValueAndId = getAttributesWithValueAndId(userCollection, value, attributeId);\n      return attributesWithValueAndId.length === 0;\n    });\n  }\n  /**\n   * Will first execute a create/update user request, and if any locale values have been set will add subsequent request to update these too.\n   * @param {Object} values - Form data produced by redux-form\n   * @param {Object} user - A d2 user model instance\n   * @param {String} initialUiLocale - Locale string for the UI, i.e. 'en'\n   * @param {String} initialDbLocale - Locale string for the DB, i.e. 'fr'\n   * @returns {Promise} Promise object for the combined ajax calls to save a user\n   * @method\n   */\n\n\n  saveOrInviteUser = (values, user, inviteUser, initialUiLocale, initialDbLocale, attributeFields) => {\n    const userData = parseUserSaveData(values, user, inviteUser, attributeFields);\n    const postUrl = inviteUser ? '/users/invite' : '/users';\n    const saveUserPromise = user.id ? this.d2Api.update(`/users/${user.id}`, userData) : this.d2Api.post(postUrl, userData);\n    return saveUserPromise.then(response => {\n      if (response.status === 'ERROR') {\n        return Promise.reject(parse200Error(response));\n      }\n\n      const localePromises = [];\n      const username = encodeURIComponent(values.username); // Add follow-up request for setting uiLocale if needed\n\n      const uiLocale = values[INTERFACE_LANGUAGE];\n\n      if (uiLocale !== initialUiLocale) {\n        localePromises.push(this.d2Api.post(parseLocaleUrl('Ui', username, uiLocale)));\n      } // Add follow-up request for setting dbLocale if needed\n\n\n      const dbLocale = values[DATABASE_LANGUAGE];\n\n      if (dbLocale !== initialDbLocale) {\n        const dbLocalePromise = dbLocale === USE_DB_LOCALE ? this.d2Api.delete(`/userSettings/keyDbLocale?user=${username}`) : this.d2Api.post(parseLocaleUrl('Db', username, dbLocale));\n        localePromises.push(dbLocalePromise);\n      } // Dummy follow-up request to prevent Promise.all error\n      // if neither locale fields need updating\n\n\n      if (localePromises.length === 0) {\n        localePromises.push(Promise.resolve('No locale changes detected'));\n      } // Updating locales after user in case the user is new\n\n\n      return Promise.all(localePromises);\n    });\n  };\n  /**************************\n   ***** USER GROUPS ********\n   **************************/\n\n  saveUserGroup(data) {\n    if (data.id) {\n      return this.d2Api.update(`/userGroups/${data.id}?mergeMode=MERGE`, data);\n    }\n\n    return this.d2Api.post('/userGroups', data);\n  }\n\n  getManagedUsers = () => {\n    const data = {\n      fields: ['id', 'displayName', 'userCredentials[username]'],\n      paging: false\n    };\n    return this.d2.models.user.list(data).then(appendUsernameToDisplayName);\n  }; // Also used by GroupForm\n\n  getAvailableUserGroups = () => {\n    const data = {\n      fields: ['id', 'displayName'],\n      paging: false\n    };\n    return this.d2.models.userGroups.list(data);\n  };\n  /**************************\n   ****** USER ROLES ********\n   **************************/\n  // TODO: A proper API endpoint will be made available for this call once ALL struts apps\n  // have been ported to React. Once this is done we need to update this method.\n\n  getGroupedAuthorities = () => {\n    if (this.groupedAuths) {\n      // Return cached version if available\n      return Promise.resolve(this.groupedAuths);\n    }\n\n    const url = `${this.getContextPath()}/dhis-web-commons/security/getSystemAuthorities.action`;\n    return this.d2Api.request('GET', url).then(({\n      systemAuthorities\n    }) => {\n      // Store on instance for subsequent requests\n      return this.groupedAuths = groupAuthorities(systemAuthorities);\n    });\n  }; // Calling role.save() would result in an error in d2 because d2 expects you always want to\n  // save { id: <ID> } objects but authorities should be saved as a plain JSON array\n\n  saveRole(data) {\n    if (data.id) {\n      return this.d2Api.update(`/userRoles/${data.id}`, data);\n    } else {\n      return this.d2Api.post('/userRoles/', data);\n    }\n  }\n  /**************************\n   ****** CURRENT USER ******\n   **************************/\n\n\n  getCurrentUser = () => {\n    return this.d2.currentUser;\n  };\n  getCurrentUserGroupsAndRoles = () => {\n    return this.d2Api.get('me', {\n      fields: 'userGroups[id],userCredentials[userRoles[id]]'\n    }).then(res => ({\n      userGroupIds: res.userGroups.map(({\n        id\n      }) => id),\n      userRoleIds: res.userCredentials.userRoles.map(({\n        id\n      }) => id)\n    }));\n  };\n  initCurrentUser = () => {\n    return Promise.all([this.getCurrentUserGroupsAndRoles(), this.getCurrentUserOrgUnits(), this.getSystemOrgUnitRoots()]).then(([{\n      userGroupIds,\n      userRoleIds\n    }, {\n      organisationUnits,\n      dataViewOrganisationUnits,\n      teiSearchOrganisationUnits\n    }, systemOrganisationUnitRoots]) => {\n      return Object.assign(this.d2.currentUser, {\n        userGroupIds,\n        userRoleIds,\n        organisationUnits,\n        dataViewOrganisationUnits,\n        teiSearchOrganisationUnits,\n        systemOrganisationUnitRoots\n      });\n    });\n  };\n  refreshCurrentUser = () => {\n    const CurrentUserClass = Object.getPrototypeOf(this.d2.currentUser).constructor;\n    const meFields = [':all', '!userGroups', '!organisationUnits', 'userCredentials[:all,!user,!userRoles]'];\n    const models = this.d2.models;\n    return Promise.all([this.d2Api.get('me', {\n      fields: meFields\n    }), this.d2Api.get('me/authorization'), this.d2Api.get('userSettings')]).then(([me, authorities, userSettings]) => {\n      this.d2.currentUser = CurrentUserClass.create(me, authorities, models, userSettings);\n      return this.initCurrentUser();\n    });\n  };\n  getCurrentUserOrgUnits = () => {\n    return this.d2.models.users.get(this.d2.currentUser.id, CURRENT_USER_ORG_UNITS_FIELDS);\n  };\n  getSystemOrgUnitRoots = () => {\n    return this.d2.models.organisationUnits.list({\n      paging: false,\n      level: 1,\n      fields: 'id,path,displayName,children::isNotEmpty'\n    }).then(modelCollection => {\n      return modelCollection.toArray();\n    });\n  };\n  updateCurrentUserGroupMembership = (groupId, deleteMembership) => {\n    const method = deleteMembership ? 'delete' : 'post';\n    const url = `/users/${this.d2.currentUser.id}/userGroups/${groupId}`;\n    return this.d2Api[method](url);\n  };\n}\n\nexport default new Api();","import { createHashHistory } from 'history';\n/**\n * Creates and exports an empty hash history object that will be used by the Router\n * This history object can be imported and addressed directly outside of components\n * For example, it is used by navigateTo in ../utils/index\n * @name history\n * @memberof module:utils\n */\n\nexport default createHashHistory();","/* eslint-disable max-params */\n\n/**\n * This module contains the actions that may be dispatched to reducers. Only functions that are out of the ordinary have been documented.\n * @module actions\n */\nimport * as ACTIONS from '../constants/actionTypes';\nimport { PAGE as DEFAULT_PAGE } from '../constants/defaults';\nimport api from '../api';\n/**\n * Convenience function for creating a redux action\n * @param {String} type - The action type\n * @param {any} payload - The action payload\n * @return {Object} - An action object with type and payload property\n * @function\n */\n\nconst createAction = (type, payload) => ({\n  type,\n  payload\n});\n/**********\n * THUNKS *\n **********/\n\n/**\n * Helper function for fetching lists. Used by getList, incrementPage and decrementPage.\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @param {Object} promise - The promise to await\n * @param {String} type - The type of list that was requested\n * @param {Boolean} silent - Flag by which dispatching the LIST_REQUESTED action can be skipped\n * @function\n */\n\n\nconst createListActionSequence = async (dispatch, promise, type, silent) => {\n  if (!silent) dispatch(createAction(ACTIONS.LIST_REQUESTED, type));\n\n  try {\n    const items = await promise;\n    dispatch(createAction(ACTIONS.LIST_RECEIVED, {\n      type,\n      items\n    }));\n  } catch (error) {\n    dispatch(createAction(ACTIONS.LIST_ERRORED, {\n      type,\n      error\n    }));\n  }\n};\n\nexport const getList = (entityName, silent) => (dispatch, getState) => {\n  const {\n    filter,\n    pager\n  } = getState();\n  const page = pager ? pager.page : DEFAULT_PAGE;\n  const promise = api.getList(entityName, page, filter);\n  createListActionSequence(dispatch, promise, entityName, silent);\n};\nexport const incrementPage = pager => (dispatch, getState) => {\n  const {\n    list: {\n      type\n    }\n  } = getState();\n  createListActionSequence(dispatch, pager.getNextPage(), type);\n};\nexport const decrementPage = pager => (dispatch, getState) => {\n  const {\n    list: {\n      type\n    }\n  } = getState();\n  createListActionSequence(dispatch, pager.getPreviousPage(), type);\n};\n/**\n * Helper function for general fetch scenarios. Used by `getItem`, `initCurrentUser` and `refreshCurrentUser`.\n * @param {Object} actions - The action types to dispatch\n * @param {String} actions.requested - The name of the action to dispatch when initializing the request\n * @param {String} actions.received - The name of the action to dispatch on successfull response\n * @param {String} actions.errored - The name of the action to dispatch when request failed\n * @param {Object} promise - The promise to await\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @function\n */\n\nconst createAsyncActionSequence = async (actionTypes, promise, dispatch) => {\n  dispatch(createAction(actionTypes.requested));\n\n  try {\n    const payload = await promise;\n    dispatch(createAction(actionTypes.received, payload));\n  } catch (error) {\n    dispatch(createAction(actionTypes.errored, error));\n  }\n};\n/**\n * Gets an item of a specified type and dispatches actions on request, response and error\n * @param {String} entityName - The type of item to fetch, i.e. user / userRole / userGroup\n * @param {String} id - The item ID\n * @function\n */\n\n\nexport const getItem = (entityName, id) => dispatch => {\n  createAsyncActionSequence({\n    requested: ACTIONS.ITEM_REQUESTED,\n    received: ACTIONS.ITEM_RECEIVED,\n    errored: ACTIONS.ITEM_ERRORED\n  }, api.getItem(entityName, id), dispatch);\n};\nconst currentUserActions = {\n  requested: ACTIONS.CURRENT_USER_REQUESTED,\n  received: ACTIONS.CURRENT_USER_RECEIVED,\n  errored: ACTIONS.CURRENT_USER_ERRORED\n};\nexport const initCurrentUser = () => dispatch => {\n  createAsyncActionSequence(currentUserActions, api.initCurrentUser(), dispatch);\n};\nexport const refreshCurrentUser = () => dispatch => {\n  createAsyncActionSequence(currentUserActions, api.refreshCurrentUser(), dispatch);\n};\n/*****************\n * PLAIN ACTIONS *\n *****************/\n\nexport const initNewItem = entityType => {\n  const newItem = api.getD2().models[entityType].create();\n  return createAction(ACTIONS.INIT_NEW_ITEM, newItem);\n};\nexport const clearItem = () => {\n  return createAction(ACTIONS.CLEAR_ITEM);\n};\nexport const updateFilter = (updateKey, updateValue) => {\n  return createAction(ACTIONS.FILTER_UPDATED, {\n    updateKey,\n    updateValue\n  });\n};\nexport const resetFilter = () => {\n  return createAction(ACTIONS.FILTER_RESET);\n};\nexport const resetPager = () => {\n  return createAction(ACTIONS.PAGER_RESET);\n};\nexport const showSnackbar = props => {\n  return createAction(ACTIONS.SHOW_SNACKBAR, props);\n};\nexport const hideSnackbar = () => {\n  return createAction(ACTIONS.HIDE_SNACKBAR);\n};\nexport const showDialog = (content, props) => {\n  return createAction(ACTIONS.SHOW_DIALOG, {\n    content,\n    props\n  });\n};\nexport const hideDialog = () => {\n  return createAction(ACTIONS.HIDE_DIALOG);\n};\nexport const showSharingDialog = (id, type) => {\n  return createAction(ACTIONS.SHOW_SHARING_DIALOG, {\n    id,\n    type\n  });\n};\nexport const hideSharingDialog = () => {\n  return createAction(ACTIONS.HIDE_SHARING_DIALOG);\n};","import history from './history';\n/**\n * Pushed new routes to the hashHistory object.\n * Can be used to imperatively trigger route changes in the Router.\n * @param {String} path - Route path to navigate to\n * @memberof module:utils\n * @function\n */\n\nconst navigateTo = path => {\n  history.push(path);\n};\n\nexport default navigateTo;","/**\n * If you import this module into a component that renders a DataTable,\n * it will render MaterialUI checkboxes for TRUE values and keep FALSE values empty.\n * @module List/booleanValueRenderer\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckIcon from 'material-ui/svg-icons/navigation/check';\nimport { addValueRenderer } from '@dhis2/d2-ui-table/data-value/valueRenderers';\n/**\n * Defines behavior for the DataTable when receiving boolean values\n * @param {Object} DataTableCell - A DataTableCell containing a value property\n * @param {Boolean} DataTableCell.value - The cell value\n * @returns Either a CheckIcon or null\n */\n\nconst BooleanCellField = ({\n  value\n}) => value ? <div style={{\n  width: '40px'\n}}>\n            <CheckIcon />\n        </div> : null;\n\nBooleanCellField.propTypes = {\n  value: PropTypes.bool\n};\naddValueRenderer(({\n  value\n}) => typeof value === 'boolean', BooleanCellField);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { connect } from 'react-redux';\nimport FloatingActionButton from 'material-ui/FloatingActionButton';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport DataTable from '@dhis2/d2-ui-table';\nimport { LoadingMask, Heading, Pagination } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport { listSelector, pagerSelector } from '../../selectors';\nimport { getList, resetFilter, resetPager, incrementPage, decrementPage, showSnackbar, hideSnackbar } from '../../actions';\nimport ErrorMessage from '../ErrorMessage';\nimport './booleanValueRenderer';\nimport '@dhis2/d2-ui-core/css/Table.css';\nimport '@dhis2/d2-ui-core/css/Pagination.css';\nconst styles = {\n  dataTableWrap: {\n    flex: 1,\n    marginBottom: '4rem'\n  },\n  clearBoth: {\n    clear: 'both'\n  },\n  filterBar: {\n    display: 'table',\n    marginBottom: '1rem',\n    width: '100%'\n  },\n  headerBarPagination: {\n    float: 'right',\n    marginTop: '14px'\n  },\n  headerBarFilterWrap: {\n    display: 'table',\n    marginRight: '230px'\n  },\n  pagination: {\n    userSelect: 'none'\n  }\n};\n/**\n * Generic component that fetches list data, and displays this in a DataTable with paging and filtering\n */\n\nclass List extends Component {\n  componentDidMount() {\n    const {\n      items,\n      getList,\n      resetFilter,\n      resetPager,\n      entityType,\n      listType\n    } = this.props; // Only fetch when there is no suitable list available\n\n    if (items === null || listType !== entityType) {\n      // If list type is defined but doesn't match current entity\n      // this means the user has switched section so pager and filter must be reset\n      if (listType !== entityType) {\n        resetFilter();\n        resetPager();\n      }\n\n      getList(entityType);\n    }\n  }\n\n  executeEditIfAllowed = model => {\n    const {\n      isContextActionAllowed,\n      primaryAction,\n      showSnackbar,\n      hideSnackbar\n    } = this.props;\n\n    if (isContextActionAllowed(model, 'edit')) {\n      primaryAction(model);\n    } else {\n      showSnackbar({\n        message: `${i18n.t('You are not allowed to edit')} ${model.displayName}`,\n        action: i18n.t('Confirm'),\n        autoHideDuration: null,\n        onActionClick: hideSnackbar\n      });\n    }\n  };\n\n  getPagerConfig(pager) {\n    if (!pager) {\n      return {\n        page: null,\n        pageCount: null,\n        total: null,\n        currentlyShown: null\n      };\n    }\n\n    return pager;\n  }\n\n  renderPagination() {\n    const {\n      pager,\n      items,\n      incrementPage,\n      decrementPage\n    } = this.props;\n    const {\n      page,\n      pageCount,\n      total,\n      currentlyShown\n    } = this.getPagerConfig(pager);\n    const shouldHide = !items || items.length === 0 || typeof items === 'string';\n    const style = shouldHide ? { ...styles.pagination,\n      visibility: 'hidden'\n    } : styles.pagination;\n    const paginationProps = {\n      hasNextPage: () => page && items && items.length && page < pageCount,\n      hasPreviousPage: () => page && items && items.length && page > 1,\n      onNextPageClick: () => {\n        incrementPage(pager);\n      },\n      onPreviousPageClick: () => {\n        decrementPage(pager);\n      },\n      total,\n      currentlyShown,\n      style\n    };\n    return <div style={style}>\n                <Pagination {...paginationProps} />\n            </div>;\n  }\n\n  renderHeaderBar() {\n    const {\n      filterComponent: FilterComponent,\n      entityType\n    } = this.props;\n    return <div className=\"data-table__filter-bar\" style={styles.filterBar}>\n                <div style={styles.headerBarPagination}>\n                    {this.renderPagination()}\n                </div>\n                <div style={styles.headerBarFilterWrap}>\n                    <FilterComponent entityType={entityType} />\n                </div>\n            </div>;\n  }\n\n  renderDataTable() {\n    const {\n      items,\n      columns,\n      contextMenuActions,\n      contextMenuIcons,\n      isContextActionAllowed\n    } = this.props;\n\n    if (typeof items === 'string') {\n      const introText = i18n.t('There was an error fetching the list');\n      return <ErrorMessage introText={introText} errorMessage={items} />;\n    }\n\n    if (items === null) {\n      return <LoadingMask />;\n    }\n\n    if (items.length === 0) {\n      return <div style={styles.clearBoth}>No results found.</div>;\n    }\n\n    return <DataTable rows={items} columns={columns} primaryAction={this.executeEditIfAllowed} contextMenuActions={contextMenuActions} contextMenuIcons={contextMenuIcons} isContextActionAllowed={isContextActionAllowed} />;\n  }\n\n  render() {\n    const {\n      sectionName,\n      newItemPath,\n      className\n    } = this.props;\n    return <div style={styles.dataTableWrap} className={className}>\n                <Heading>{sectionName}</Heading>\n                {this.renderHeaderBar()}\n                {this.renderDataTable()}\n                {this.renderPagination()}\n                <FloatingActionButton className=\"entity-list__add-new-entity\" onClick={() => navigateTo(newItemPath)}>\n                    <ContentAdd />\n                </FloatingActionButton>\n            </div>;\n  }\n\n}\n\nList.propTypes = {\n  columns: PropTypes.arrayOf(String).isRequired,\n  contextMenuActions: PropTypes.object.isRequired,\n  contextMenuIcons: PropTypes.object.isRequired,\n  decrementPage: PropTypes.func.isRequired,\n  entityType: PropTypes.string.isRequired,\n  filterComponent: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  hideSnackbar: PropTypes.func.isRequired,\n  incrementPage: PropTypes.func.isRequired,\n  isContextActionAllowed: PropTypes.func.isRequired,\n  newItemPath: PropTypes.string.isRequired,\n  primaryAction: PropTypes.func.isRequired,\n  resetFilter: PropTypes.func.isRequired,\n  resetPager: PropTypes.func.isRequired,\n  sectionName: PropTypes.string.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  listType: PropTypes.string,\n  pager: PropTypes.object\n};\nList.defaultProps = {\n  className: 'paged-filterable-data-table'\n};\n\nconst mapStateToProps = state => {\n  return {\n    listType: state.list.type,\n    items: listSelector(state.list.items, state.currentUser.userGroupIds),\n    pager: pagerSelector(state.pager)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getList,\n  resetFilter,\n  resetPager,\n  incrementPage,\n  decrementPage,\n  showSnackbar,\n  hideSnackbar\n})(List);","import List from './List';\nexport default List;","import store from '../store';\nimport api from '../api';\nimport { refreshCurrentUser as refresh } from '../actions';\nimport { USER, USER_ROLE, USER_GROUP } from '../constants/entityTypes';\n/**\n * This function can be called after users/ userRoles/ urserGroups have been updated or deleted.\n * It will determine if these changes impact the current user.\n * If so, an action is dispatched that will trigger the currentUser state to be refreshed.\n * Or, in case a currentUser was disabled or removed it will trigger a page refresh\n * Currently this function is used by:\n * - `UserForm.saveGroup`\n * - `GroupForm.saveGroup`\n * - `RoleForm.saveRole`\n * - `onRemoveConfirm` in `sharedActions`\n * - `updateDisabledState` in `UserContextMenuActions`\n *\n * @param {String} entityType - The type of object that was changed\n * @param {Object} model - A d2 model or POJO that provides at least the ID of the entity that was changed\n * @param {String} [changeType] - The type of change that happened\n * @memberof module:utils\n * @function\n */\n\nconst detectCurrentUserChanges = (model, disable) => {\n  const {\n    currentUser\n  } = store.getState();\n  const entityType = model.modelDefinition.name;\n\n  if (entityType === USER && model.id === currentUser.id) {\n    disable ? logout() : refreshCurrentUser();\n  }\n\n  if (entityType === USER_ROLE && currentUser.userRoleIds.includes(model.id)) {\n    refreshCurrentUser();\n  }\n\n  if (entityType === USER_GROUP && currentUser.userGroupIds.includes(model.id)) {\n    refreshCurrentUser();\n  }\n};\n\nconst refreshCurrentUser = () => {\n  store.dispatch(refresh());\n};\n\nconst logout = () => {\n  const contextPath = api.getContextPath();\n  const logoutSuffix = '/dhis-web-commons-security/logout.action';\n  const logoutUrl = contextPath + logoutSuffix;\n  window.location.assign(logoutUrl);\n};\n\nexport default detectCurrentUserChanges;","/* eslint-disable max-params */\nimport store from '../store';\nimport { getList, showSnackbar, hideSnackbar, showSharingDialog } from '../actions';\nimport createHumanErrorMessage from './createHumanErrorMessage';\nimport detectCurrentUserChanges from './detectCurrentUserChanges';\nimport i18n from '@dhis2/d2-i18n';\nexport const deleteModel = ({\n  model,\n  entityType\n}) => {\n  const interpolator = {\n    type: model.modelDefinition.displayName,\n    displayName: model.displayName\n  };\n  const confirmMsg = i18n.t('Are you sure you want to remove the {{type}} \"{{displayName}}\"?', interpolator);\n  const successMsg = i18n.t('{{type}} \"{{displayName}}\" removed successfully', interpolator);\n  const errorMsg = i18n.t('There was a problem removing {{type}} \"{{displayName}}\"?', interpolator);\n  const snackbarProps = {\n    message: confirmMsg,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onRemoveConfirm(model, successMsg, errorMsg, entityType)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onRemoveConfirm = async (model, successMsg, errorMsg, entityType) => {\n  store.dispatch(hideSnackbar());\n\n  try {\n    await model.delete();\n    store.dispatch(showSnackbar({\n      message: successMsg\n    }));\n    store.dispatch(getList(entityType));\n    detectCurrentUserChanges(model);\n  } catch (error) {\n    const msg = createHumanErrorMessage(error, errorMsg);\n    store.dispatch(showSnackbar({\n      message: msg\n    }));\n  }\n};\n\nexport const openSharingSettings = ({\n  data: model\n}) => {\n  store.dispatch(showSharingDialog(model.id, model.modelDefinition.name));\n};","/* eslint-disable max-params */\nimport i18n from '@dhis2/d2-i18n';\nimport capitalize from 'lodash.capitalize';\nimport api from '../api';\nimport { USER, USER_GROUP } from '../constants/entityTypes';\nimport { USER_ATTRIBUTE_FIELD_PREFIX } from './attributeFieldHelpers';\nimport { USERNAME, FORM_NAME as USER_FORM } from '../containers/UserForm/config';\nimport { CODE, NAME, FORM_NAME as GROUP_FORM } from '../containers/GroupForm/config';\nimport { FORM_NAME as REPLICATE_USER_FORM } from '../components/ReplicateUserForm';\nimport createHumanErrorMessage from './createHumanErrorMessage';\nexport async function asyncValidatorSwitch(values, _, props, blurredField) {\n  const priorErrors = props.asyncErrors; // Skip aSync validation when submitting the form because all fields have been\n  // validated on blur anyway, and the server will reject them\n\n  if (!blurredField && !priorErrors) {\n    return Promise.resolve();\n  }\n\n  let newError;\n\n  if (props.form === USER_FORM && blurredField === USERNAME) {\n    newError = await getUserNameError(values, props);\n  } else if (props.form === GROUP_FORM && (blurredField === CODE || blurredField === NAME)) {\n    newError = await getGenericUniquenessError(values, props, blurredField);\n  } else {\n    newError = await getAttributeUniquenessError(values, props, blurredField);\n  }\n\n  const errors = priorErrors || newError ? { ...priorErrors,\n    ...newError\n  } : undefined;\n\n  if (errors) {\n    throw errors;\n  } else {\n    return Promise.resolve();\n  }\n}\nexport async function asyncValidateUsername(values, _, props, blurredField) {\n  return asyncSingleFieldValidator(values, props, blurredField, getUserNameError);\n}\nexport async function asyncValidateUniqueness(values, _, props, blurredField) {\n  return asyncSingleFieldValidator(values, props, blurredField, getGenericUniquenessError);\n}\n\nasync function asyncSingleFieldValidator(values, props, blurredField, apiMethod) {\n  if (!blurredField) {\n    return Promise.resolve();\n  }\n\n  const error = await apiMethod(values, props, blurredField);\n\n  if (error) {\n    throw error;\n  } else {\n    return Promise.resolve();\n  }\n}\n\nasync function getUserNameError(values, props) {\n  const newUserName = values[USERNAME];\n  const editingExistingUser = props.form !== REPLICATE_USER_FORM && props.user && props.user.id;\n\n  if (!newUserName || editingExistingUser) {\n    return Promise.resolve();\n  }\n\n  try {\n    const modelCollection = await api.genericFind('users', 'userCredentials.username', newUserName);\n\n    if (modelCollection.size > 0) {\n      return {\n        [USERNAME]: i18n.t('Username already taken')\n      };\n    }\n  } catch (error) {\n    return {\n      [USERNAME]: i18n.t('There was a problem whilst checking the availability of this username')\n    };\n  }\n}\n/**\n * Calls the genericFind method of the Api instance to find out whether a userRole/userGroup model instance with the same property value exists\n * @param {Object} values - redux form values object\n * @param {Object} props - Component properties, containing either a userRole or userGroup model\n * @param {Object} fieldName - The property name to check on uniqueness\n * @returns {Object} errors - Will be empty of the entry was unique. Otherwise will contain error message  for duplicate property values.\n * @memberof module:utils\n * @function\n */\n\n\nasync function getGenericUniquenessError(values, props, fieldName) {\n  const {\n    group,\n    role\n  } = props;\n  const model = role || group;\n  const entityName = model.modelDefinition.name;\n  const fieldValue = values[fieldName];\n  const fieldDisplayName = capitalize(fieldName);\n\n  if (!fieldValue) {\n    return Promise.resolve();\n  }\n\n  try {\n    const modelCollection = await api.genericFind(entityName, fieldName, fieldValue);\n\n    if (modelCollection.size > 0) {\n      const foundId = modelCollection.values().next().value.id;\n\n      if (foundId !== model.id) {\n        return {\n          [fieldName]: i18n.t('{{fieldDisplayName}} is already taken', {\n            fieldDisplayName\n          })\n        };\n      }\n    }\n  } catch (error) {\n    const fallBackMsg = i18n.t('Could not verify if this {{fieldDisplayName}} is unique', {\n      fieldDisplayName\n    });\n    return {\n      [fieldName]: createHumanErrorMessage(error, fallBackMsg)\n    };\n  }\n}\n\nasync function getAttributeUniquenessError(values, props, blurredField) {\n  const value = values[blurredField];\n\n  if (!value) {\n    return Promise.resolve();\n  }\n\n  const entityType = props.form === USER_FORM ? USER : USER_GROUP;\n  const id = entityType === USER ? props.user.id || '_' : props.group.id || '_';\n  const attributeId = blurredField.replace(USER_ATTRIBUTE_FIELD_PREFIX, '');\n\n  try {\n    const isUnique = await api.isAttributeUnique(entityType, id, attributeId, value);\n\n    if (!isUnique) {\n      return {\n        [blurredField]: i18n.t('Attribute value needs to be unique, value already taken.')\n      };\n    }\n  } catch (error) {\n    return {\n      [blurredField]: i18n.t('There was a problem checking if this attribute value is unique')\n    };\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport { RaisedButton } from 'material-ui';\nimport { renderTextField } from '../utils/fieldRenderers';\nimport i18n from '@dhis2/d2-i18n';\nimport api from '../api';\nimport { connect } from 'react-redux';\nimport { USER } from '../constants/entityTypes';\nimport { USERNAME, PASSWORD } from '../containers/UserForm/config';\nimport { username, password } from '../utils/validators';\nimport { asyncValidateUsername } from '../utils/validatorsAsync';\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage';\nimport { getList, hideDialog, showSnackbar, hideSnackbar } from '../actions';\nexport const FORM_NAME = 'replicateUserForm';\n/**\n * Form component for replicating a using redux-form and displayed in a Dialog\n */\n\nclass ReplicateUserForm extends Component {\n  replicateUser = async data => {\n    const {\n      user,\n      hideDialog\n    } = this.props;\n    const {\n      username,\n      password\n    } = data;\n\n    try {\n      await api.replicateUser(user.id, username, password);\n      this.replicateSuccesHandler(user.displayName);\n    } catch (error) {\n      this.replicateErrorHandler(error);\n    }\n\n    hideDialog();\n  };\n  replicateSuccesHandler = displayName => {\n    const {\n      getList,\n      showSnackbar\n    } = this.props;\n    const message = i18n.t('User \"{{displayName}}\" replicated successfuly', {\n      displayName\n    });\n    showSnackbar({\n      message\n    });\n    getList(USER, true);\n  };\n  replicateErrorHandler = error => {\n    const {\n      showSnackbar\n    } = this.props;\n    showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem replicating the user'))\n    });\n  };\n\n  render() {\n    const {\n      submitting,\n      pristine,\n      valid,\n      handleSubmit,\n      hideDialog,\n      asyncValidating\n    } = this.props;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    return <form autoComplete=\"off\" onSubmit={handleSubmit(this.replicateUser)}>\n                <Field name={USERNAME} component={renderTextField} label={i18n.t('Username')} hintText={i18n.t('Username for new user')} validate={[username]} autoComplete=\"new-password\" />\n                <Field name={PASSWORD} component={renderTextField} label={i18n.t('Password')} hintText={i18n.t('Password for new user')} validate={[password]} type=\"password\" autoComplete=\"new-password\" />\n                <div style={{\n        marginTop: 16\n      }}>\n                    <RaisedButton label={i18n.t('Replicate')} type=\"submit\" disabled={disableSubmit} primary={true} />\n                    <RaisedButton label={i18n.t('Cancel')} onClick={hideDialog} style={{\n          marginLeft: 8\n        }} />\n                </div>\n            </form>;\n  }\n\n}\n\nReplicateUserForm.propTypes = {\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  hideDialog: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncValidating: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\n\nconst mapStateToProps = state => ({\n  formState: state.form[FORM_NAME]\n});\n\nconst ReduxFormWrapped = reduxForm({\n  form: FORM_NAME,\n  asyncValidate: asyncValidateUsername,\n  asyncBlurFields: [USERNAME]\n})(ReplicateUserForm);\nexport default connect(mapStateToProps, {\n  getList,\n  hideDialog,\n  showSnackbar,\n  hideSnackbar\n})(ReduxFormWrapped);","/**\n * Defines the UserList context menu for current user on a given UserUser model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/UserList/UserContextMenuActions\n */\nimport React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport store from '../../store';\nimport api from '../../api';\nimport { deleteModel } from '../../utils/sharedActions';\nimport { USER } from '../../constants/entityTypes';\nimport { showDialog, hideDialog, showSnackbar, hideSnackbar, getList } from '../../actions';\nimport ReplicateUserForm from '../../components/ReplicateUserForm';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nconst profile = 'profile';\nconst edit = 'edit';\nconst remove = 'remove';\nconst replicate = 'replicate';\nconst disable = 'disable';\nconst enable = 'enable';\nconst disable_2fa = 'disable_2fa';\n/**\n * Determines whether a specific user action should be visible for current user and given a User Model instance\n * @param {Object} model - d2 User model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isUserContextActionAllowed = (model, action) => {\n  const {\n    currentUser\n  } = store.getState();\n\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access,\n    userCredentials: {\n      disabled,\n      twoFA\n    }\n  } = model;\n\n  switch (action) {\n    case profile:\n      return access.read;\n\n    case edit:\n      return access.update;\n\n    case remove:\n      return currentUser.id !== model.id && access.delete;\n\n    case replicate:\n      return access.update && currentUser.authorities.has('F_REPLICATE_USER');\n\n    case disable:\n      return access.update && !disabled;\n\n    case enable:\n      return access.update && disabled;\n\n    case disable_2fa:\n      return access.update && twoFA;\n\n    default:\n      return true;\n  }\n};\nexport const userContextMenuIcons = {\n  [profile]: 'account_circle',\n  [edit]: 'edit',\n  [remove]: 'delete',\n  [replicate]: 'content_copy',\n  [disable]: 'block',\n  [enable]: 'playlist_add_check',\n  [disable_2fa]: 'phonelink_erase'\n};\nexport const userContextMenuActions = Action.createActionsFromNames([profile, edit, remove, replicate, disable, enable, disable_2fa]);\nuserContextMenuActions.profile.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/users/view/${id}`);\n});\nuserContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/users/edit/${id}`);\n});\nuserContextMenuActions.remove.subscribe(({\n  data: user\n}) => {\n  const params = {\n    model: user,\n    entityType: USER\n  };\n  deleteModel(params);\n});\nuserContextMenuActions.replicate.subscribe(({\n  data: user\n}) => {\n  const content = <ReplicateUserForm user={user} />;\n  const props = {\n    onRequestClose: () => store.dispatch(hideDialog()),\n    title: i18n.t('Replicate user')\n  };\n  store.dispatch(showDialog(content, props));\n});\nuserContextMenuActions.disable.subscribe(({\n  data\n}) => {\n  updateDisabledState(data, true);\n});\nuserContextMenuActions.enable.subscribe(({\n  data\n}) => {\n  updateDisabledState(data, false);\n});\nuserContextMenuActions.disable_2fa.subscribe(({\n  data\n}) => {\n  showDisable2FAConfirmation(data);\n});\n\nconst showDisable2FAConfirmation = model => {\n  const baseMsg = i18n.t('Are you sure you want to disable two factor authentication for');\n  const snackbarProps = {\n    message: `${baseMsg} ${model.displayName}`,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onDisable2FAConfirm(model)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onDisable2FAConfirm = async model => {\n  store.dispatch(hideSnackbar());\n  const {\n    displayName,\n    id\n  } = model;\n\n  try {\n    await api.disable2FA(id);\n    const baseMsg = i18n.t('Succesfully disabled two factor authentication for');\n    store.dispatch(showSnackbar({\n      message: `${baseMsg} ${displayName}`\n    }));\n    store.dispatch(getList(USER));\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating two factor authentication'))\n    }));\n  }\n};\n\nconst updateDisabledState = (model, shouldDisable) => {\n  const baseMsg = shouldDisable ? i18n.t('Are you sure you want to disable') : i18n.t('Are you sure you want to enable');\n  const snackbarProps = {\n    message: `${baseMsg} ${model.displayName}`,\n    action: i18n.t('Confirm'),\n    autoHideDuration: null,\n    onActionClick: () => onDisableConfirm(model, shouldDisable)\n  };\n  store.dispatch(showSnackbar(snackbarProps));\n};\n\nconst onDisableConfirm = async (model, shouldDisable) => {\n  store.dispatch(hideSnackbar());\n  const {\n    displayName,\n    id\n  } = model;\n\n  try {\n    await api.updateDisabledState(id, shouldDisable);\n    const baseMsg = shouldDisable ? i18n.t('sucessfully disabled') : i18n.t('successfully enabled');\n    store.dispatch(showSnackbar({\n      message: `${displayName} ${baseMsg}`\n    }));\n    store.dispatch(getList(USER));\n\n    if (shouldDisable) {\n      detectCurrentUserChanges(model, true);\n    }\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating the enabled state'))\n    }));\n  }\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport { USER } from '../constants/entityTypes';\nimport { connect } from 'react-redux';\nimport { updateFilter, hideDialog, getList } from '../actions';\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree';\nimport { TEI_SEARCH_ORG_UNITS } from '../containers/UserForm/config';\n/**\n * Displayed inside of a Dialog and displayed by clicking the OrganisationUnitInput.\n * This component renders a SearchableOrgUnitTree and lets a user select one or more organisation units.\n * When this selection is applied the filter state is updated.\n */\n\nclass OrganisationUnitFilter extends Component {\n  applyFilter = newSelectedOrgUnits => {\n    const {\n      updateFilter,\n      hideDialog,\n      getList,\n      selectedOrgUnits\n    } = this.props;\n\n    if (!isEqual(newSelectedOrgUnits, selectedOrgUnits)) {\n      updateFilter('organisationUnits', newSelectedOrgUnits);\n      getList(USER);\n    }\n\n    hideDialog();\n  };\n\n  render() {\n    const {\n      selectedOrgUnits,\n      hideDialog\n    } = this.props;\n    return <SearchableOrgUnitTree orgUnitType={TEI_SEARCH_ORG_UNITS} selectedOrgUnits={selectedOrgUnits} confirmSelection={this.applyFilter} cancel={hideDialog} />;\n  }\n\n}\n\nOrganisationUnitFilter.propTypes = {\n  getList: PropTypes.func.isRequired,\n  hideDialog: PropTypes.func.isRequired,\n  selectedOrgUnits: PropTypes.array.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  selectedOrgUnits: state.filter.organisationUnits\n});\n\nexport default connect(mapStateToProps, {\n  updateFilter,\n  hideDialog,\n  getList\n})(OrganisationUnitFilter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from 'material-ui/TextField';\nimport ActionOpenInNew from 'material-ui/svg-icons/action/open-in-new';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { showDialog, hideDialog } from '../actions';\nimport OrganisationUnitFilter from './OrganisationUnitFilter';\nimport { orgUnitsAsStringSelector } from '../selectors';\nconst styles = {\n  wrap: {\n    position: 'relative',\n    lineHeight: '24px',\n    height: '72px',\n    cursor: 'pointer',\n    float: 'left',\n    marginRight: '1rem'\n  },\n  icon: {\n    position: 'absolute',\n    right: 0,\n    top: 38,\n    width: 20,\n    height: 20,\n    color: 'rgba(0, 0, 0, 0.3)',\n    cursor: 'pointer'\n  },\n  textField: {\n    cursor: 'pointer',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    width: '152px'\n  },\n  input: {\n    width: 'calc(100% - 20px)',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  }\n};\n/**\n * Part of the UserFilter. This component renders the displayNames of the organisation units that have been set in the filter state.\n * If 3 or more units are selected in the filter, only the length of this array will be displayed.\n */\n\nclass OrganisationUnitInput extends Component {\n  inputRef = React.createRef();\n  focusOrgUnitInput = () => {\n    this.inputRef.current.orgUnitInput.focus();\n  };\n  showOrgTreeInDialog = () => {\n    const {\n      showDialog,\n      hideDialog\n    } = this.props;\n    const content = <OrganisationUnitFilter />;\n    const props = {\n      onRequestClose: hideDialog,\n      title: i18n.t('Select an organisation unit'),\n      contentStyle: {\n        // This doesn't actually influence the height of the dialogue\n        // but it will force it upwards, enabling it to have more height\n        // The actual height is determined by a scrollbox inside the filter component\n        minHeight: '100vh'\n      }\n    };\n    showDialog(content, props);\n  };\n\n  render() {\n    const {\n      organisationUnits\n    } = this.props;\n    return <div style={styles.wrap} onClick={this.focusOrgUnitInput}>\n                <ActionOpenInNew style={styles.icon} />\n                <TextField ref={this.inputRef} style={styles.textField} floatingLabelText={i18n.t('Organisation unit')} onFocus={this.showOrgTreeInDialog} value={organisationUnits} inputStyle={styles.input} />\n            </div>;\n  }\n\n}\n\nOrganisationUnitInput.propTypes = {\n  hideDialog: PropTypes.func.isRequired,\n  organisationUnits: PropTypes.string.isRequired,\n  showDialog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  organisationUnits: orgUnitsAsStringSelector(state.filter.organisationUnits)\n});\n\nexport default connect(mapStateToProps, {\n  showDialog,\n  hideDialog\n})(OrganisationUnitInput);","export const QUERY = 'query';\nexport const INACTIVE_MONTHS = 'inactiveMonths';\nexport const INVITATION_STATUS = 'invitationStatus';\nexport const SELF_REGISTERED = 'selfRegistered';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport TextField from 'material-ui/TextField/TextField';\nimport debounce from 'lodash.debounce';\nimport { updateFilter, getList } from '../actions';\nimport { QUERY } from '../constants/filterFieldNames';\nconst style = {\n  float: 'left',\n  marginRight: '1rem',\n  width: '236px'\n};\n/**\n * Generic search filter component that is used by the RoleList and the GroupList\n */\n\nclass SearchFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localQueryStr: props.filter.query\n    };\n    this.updateSearchFilter = debounce(this.updateSearchFilter, 375);\n  }\n\n  updateSearchFilter = newValue => {\n    const {\n      getList,\n      entityType,\n      updateFilter\n    } = this.props;\n    updateFilter(QUERY, newValue);\n    getList(entityType);\n  };\n  onQueryStrChange = event => {\n    const value = event.target.value;\n    this.setState({\n      localQueryStr: value\n    });\n    this.updateSearchFilter(value);\n  };\n\n  render() {\n    const {\n      localQueryStr\n    } = this.state;\n    return <TextField className=\"search-input\" floatingLabelText={i18n.t('Search by name')} style={style} hintText={''} value={localQueryStr} type=\"search\" onChange={this.onQueryStrChange} />;\n  }\n\n}\n\nSearchFilter.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  getList: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getList,\n  updateFilter\n})(SearchFilter);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Checkbox } from 'material-ui';\nimport { DropDown } from '@dhis2/d2-ui-core';\nimport { updateFilter, getList } from '../../actions';\nimport OrganisationUnitInput from '../../components/OrganisationUnitInput';\nimport SearchFilter from '../../components/SearchFilter';\nimport { INACTIVE_MONTHS, INVITATION_STATUS, SELF_REGISTERED } from '../../constants/filterFieldNames';\nconst style = {\n  float: 'left',\n  marginRight: '1rem'\n};\nconst selfRegisteredStyle = { ...style,\n  display: 'inline-block',\n  float: 'left',\n  width: '182px',\n  paddingTop: '37px',\n  height: '35px'\n};\n/**\n * Renders a SearchFilter, OrganisationUnitInput, dropdowns for inactive months and invitation status, and a checkbox for self registration.\n * Controlled by the filter state and updates this on change.\n */\n\nclass UserFilter extends Component {\n  onFilterChange = (fieldName, newValue) => {\n    const {\n      getList,\n      entityType,\n      updateFilter,\n      filter\n    } = this.props;\n\n    if (filter[fieldName] === newValue) {\n      return;\n    }\n\n    updateFilter(fieldName, newValue);\n    getList(entityType);\n  };\n\n  createInactiveMonthsOptions() {\n    const month = i18n.t('month');\n    const months = i18n.t('months');\n    return Array(12).fill().map((_, index) => {\n      const id = index + 1;\n      const displayName = id === 1 ? `${id} ${month}` : `${id} ${months}`;\n      return {\n        id,\n        displayName\n      };\n    });\n  }\n\n  renderDropDown(config) {\n    const mergedConfig = { ...config,\n      includeEmpty: true,\n      emptyLabel: i18n.t('<No value>')\n    };\n    return <DropDown {...mergedConfig} />;\n  }\n\n  renderInactiveMonthsFilter() {\n    const dropDownConfig = {\n      menuItems: this.createInactiveMonthsOptions(),\n      floatingLabelText: i18n.t('Inactivity'),\n      value: this.props.filter.inactiveMonths,\n      onChange: event => this.onFilterChange(INACTIVE_MONTHS, event.target.value),\n      style: { ...style,\n        width: '132px'\n      }\n    };\n    return this.renderDropDown(dropDownConfig);\n  }\n\n  renderInvitationStatusFilter() {\n    const dropDownConfig = {\n      menuItems: [{\n        id: 'all',\n        displayName: i18n.t('All invitations')\n      }, {\n        id: 'expired',\n        displayName: i18n.t('Expired invitations')\n      }],\n      floatingLabelText: i18n.t('Invitations'),\n      value: this.props.filter.invitationStatus,\n      onChange: event => this.onFilterChange(INVITATION_STATUS, event.target.value),\n      style: { ...style,\n        width: '172px'\n      }\n    };\n    return this.renderDropDown(dropDownConfig);\n  }\n\n  renderSelfRegisteredFilter() {\n    const value = this.props.filter.selfRegistered;\n    const baseClassName = 'data-table__filter-bar__checkbox';\n    const checkedClassName = `${baseClassName}--checked`;\n    return <Checkbox value={value} onCheck={(event, value) => this.onFilterChange(SELF_REGISTERED, value)} label={i18n.t('Self registrations')} className={value ? checkedClassName : baseClassName} style={selfRegisteredStyle} />;\n  }\n\n  render() {\n    const {\n      entityType\n    } = this.props;\n    return <div>\n                <SearchFilter entityType={entityType} />\n                <OrganisationUnitInput />\n                {this.renderInactiveMonthsFilter()}\n                {this.renderInvitationStatusFilter()}\n                {this.renderSelfRegisteredFilter()}\n            </div>;\n  }\n\n}\n\nUserFilter.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  filter: PropTypes.object.isRequired,\n  getList: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateFilter,\n  getList\n})(UserFilter);","import React from 'react';\nimport { USER } from '../../constants/entityTypes';\nimport List from '../../components/List';\nimport i18n from '@dhis2/d2-i18n';\nimport { userContextMenuActions, userContextMenuIcons, isUserContextActionAllowed } from './UserContextMenuActions';\nimport UserFilter from './UserFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of Users\n * @class\n */\n\nconst UserList = () => <List entityType={USER} columns={['displayName', 'userName', 'lastLogin', 'disabled']} filterComponent={UserFilter} primaryAction={userContextMenuActions.edit} contextMenuActions={userContextMenuActions} contextMenuIcons={userContextMenuIcons} isContextActionAllowed={isUserContextActionAllowed} sectionName={i18n.t('User Management')} newItemPath={'/users/new'} className=\"user-list\" />;\n\nexport default UserList;","import UserList from './UserList';\nexport default UserList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconButton from 'material-ui/IconButton';\n/**\n * A component that renders a React-Router Link with an MUI IconButton inside it\n * @class\n */\n\nconst IconLink = ({\n  to,\n  tooltip,\n  icon\n}) => {\n  const iconButton = <IconButton iconClassName=\"material-icons\" tooltip={tooltip}>\n            {icon}\n        </IconButton>;\n  return to ? <Link to={to}>{iconButton}</Link> : iconButton;\n};\n\nIconLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  tooltip: PropTypes.string.isRequired,\n  to: PropTypes.string\n};\nexport default IconLink;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, reduxForm } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport api from '../../api';\nimport navigateTo from '../../utils/navigateTo';\nimport { asyncValidateUniqueness } from '../../utils/validatorsAsync';\nimport { required } from '../../utils/validators';\nimport { clearItem, showSnackbar, getList } from '../../actions';\nimport { NAME, DESCRIPTION, AUTHORITIES, getFields } from './config';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass RoleForm extends Component {\n  fields = getFields();\n  saveRole = async (values, _, props) => {\n    const {\n      role,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    const data = { ...role.toJSON(),\n      [NAME]: values[NAME],\n      [DESCRIPTION]: values[DESCRIPTION],\n      [AUTHORITIES]: values[AUTHORITIES]\n    };\n\n    try {\n      await api.saveRole(data);\n      const msg = i18n.t('User role \"{{displayName}}\" saved successfully', {\n        displayName: data[NAME]\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER_ROLE);\n      this.backToList();\n      detectCurrentUserChanges(role);\n    } catch (error) {\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user role.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/user-roles');\n  };\n\n  renderFields() {\n    return this.fields.map(fieldConfig => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        ...conf\n      } = fieldConfig;\n      const suffix = isRequiredField ? ' *' : '';\n      const labelText = label + suffix;\n      const validators = name === NAME ? [required] : [];\n      return <Field name={name} key={name} component={fieldRenderer} label={labelText} validate={validators} {...conf} />;\n    });\n  }\n\n  render = () => {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid\n    } = this.props;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.saveRole)}>\n                    {this.renderFields()}\n                    <div style={{\n          marginTop: '2rem'\n        }}>\n                        <RaisedButton label={i18n.t('Save')} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  };\n}\n\nRoleForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  clearItem: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  initialValues: PropTypes.object.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  role: PropTypes.object.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  valid: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  role: state.currentItem,\n  initialValues: {\n    [NAME]: state.currentItem[NAME],\n    [DESCRIPTION]: state.currentItem[DESCRIPTION],\n    [AUTHORITIES]: state.currentItem[AUTHORITIES] || []\n  }\n});\n\nconst ReduxFormWrappedRoleForm = reduxForm({\n  form: 'roleForm',\n  asyncValidate: asyncValidateUniqueness,\n  asyncBlurFields: [NAME]\n})(RoleForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedRoleForm);","import { renderTextField, renderAuthorityEditor } from '../../utils/fieldRenderers';\nimport i18n from '@dhis2/d2-i18n';\nexport const NAME = 'name';\nexport const DESCRIPTION = 'description';\nexport const AUTHORITIES = 'authorities';\nexport const ROLE_PROPS = [NAME, DESCRIPTION, AUTHORITIES];\nexport const getFields = () => [{\n  name: NAME,\n  label: i18n.t('Name'),\n  fieldRenderer: renderTextField,\n  isRequiredField: true\n}, {\n  name: DESCRIPTION,\n  label: i18n.t('Description'),\n  fieldRenderer: renderTextField\n}, {\n  name: AUTHORITIES,\n  label: i18n.t('Authorities'),\n  fieldRenderer: renderAuthorityEditor\n}];","import RoleForm from './RoleForm';\nexport default RoleForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport i18n from '@dhis2/d2-i18n';\nimport { Field, reduxForm } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport makeTrashable from 'trashable';\nimport navigateTo from '../../utils/navigateTo';\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync';\nimport { renderSearchableGroupEditor, renderText } from '../../utils/fieldRenderers';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport { clearItem, showSnackbar, getList } from '../../actions';\nimport { FORM_NAME, NAME, CODE, MANAGED_GROUPS, getFields } from './config';\nimport { userGroupFormInitialValuesSelector } from '../../selectors';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport { generateAttributeFields, parseAttributeValues, addUniqueAttributesToAsyncBlurFields } from '../../utils/attributeFieldHelpers';\nimport * as CONFIG from './config';\nimport collectValidators from './collectValidators';\nimport api from '../../api';\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass GroupForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attributeFields: null\n    };\n    this.trashableAttributesPromise = null;\n    this.fields = getFields();\n  }\n\n  async componentDidMount() {\n    const {\n      group,\n      showSnackbar,\n      initialize\n    } = this.props;\n    this.trashableAttributesPromise = makeTrashable(api.getAttributes(USER_GROUP));\n\n    try {\n      const attributes = await this.trashableAttributesPromise;\n      const attributeFields = generateAttributeFields(attributes, group.attributeValues);\n      addUniqueAttributesToAsyncBlurFields(attributeFields, this.props.asyncBlurFields);\n      this.setState({\n        attributeFields\n      });\n      initialize(userGroupFormInitialValuesSelector(group, attributeFields));\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('Could not load the user group data. Please refresh the page.'))\n      });\n    }\n  }\n\n  createIdValueObject(value) {\n    return {\n      id: typeof value === 'string' ? value : value.id\n    };\n  }\n\n  saveGroup = async (values, _, props) => {\n    const {\n      group,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    group[NAME] = values[NAME];\n    group[CODE] = values[CODE];\n    group[MANAGED_GROUPS] = values[MANAGED_GROUPS].map(this.createIdValueObject);\n    group.attributeValues = parseAttributeValues(values, this.state.attributeFields);\n\n    try {\n      await api.saveUserGroup(group.toJSON());\n      const msg = i18n.t('User group \"{{displayName}}\" saved successfully', {\n        displayName: group.name\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER_GROUP);\n      this.backToList();\n      detectCurrentUserChanges(group);\n    } catch (error) {\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user group.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/user-groups');\n  };\n\n  renderFields(fields) {\n    const {\n      group\n    } = this.props;\n    return fields.map(fieldConfig => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        isAttributeField,\n        fieldValidators,\n        ...conf\n      } = fieldConfig;\n      const suffix = isRequiredField ? ' *' : '';\n      const labelText = label + suffix;\n      const validators = [];\n\n      if (fieldRenderer === renderText) {\n        return renderText(fieldConfig);\n      }\n\n      if (fieldRenderer === renderSearchableGroupEditor) {\n        conf.availableItemsQuery = api[conf.availableItemsQuery];\n\n        if (isRequiredField) {\n          conf.assignedItemsLabel += ' *';\n        }\n\n        conf.initialValues = fieldConfig.initialItemsSelector(group);\n      }\n\n      conf.validate = collectValidators(this.props, name, isRequiredField, isAttributeField, fieldValidators);\n      return <Field name={name} key={name} component={fieldRenderer} label={labelText} validate={validators} {...conf} />;\n    });\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid\n    } = this.props;\n    const {\n      attributeFields\n    } = this.state;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n\n    if (!attributeFields) {\n      return <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.saveGroup)}>\n                    {this.renderFields(this.fields)}\n                    {this.renderFields(attributeFields)}\n                    <div style={{\n          marginTop: '2rem'\n        }}>\n                        <RaisedButton label={i18n.t('Save')} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  }\n\n}\n\nGroupForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  clearItem: PropTypes.func.isRequired,\n  getList: PropTypes.func.isRequired,\n  group: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n  initialize: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  group: state.currentItem\n});\n\nconst ReduxFormWrappedGroupForm = reduxForm({\n  form: FORM_NAME,\n  asyncValidate: asyncValidatorSwitch,\n  asyncBlurFields: [NAME, CODE]\n})(GroupForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedGroupForm);","/* eslint-disable max-params */\nimport { required, code } from '../../utils/validators';\nimport { NAME, CODE } from './config';\nexport default function collectValidators(props, name, isRequiredField, isAttributeField, fieldValidators) {\n  const validatorsToApply = [];\n  const isRequiredAttributeField = isAttributeField && isRequiredField;\n\n  if (name === NAME) {\n    validatorsToApply.push(required);\n  }\n\n  if (name === CODE) {\n    validatorsToApply.push(code);\n  }\n\n  if (isRequiredAttributeField) {\n    validatorsToApply.push(required);\n  }\n\n  if (isAttributeField && fieldValidators) {\n    validatorsToApply.push(...fieldValidators);\n  }\n\n  return validatorsToApply;\n}","import GroupForm from './GroupForm';\nexport default GroupForm;","/* eslint-disable max-params */\nimport * as validators from '../../utils/validators';\nimport { USERNAME, PASSWORD, REPEAT_PASSWORD, SURNAME, FIRST_NAME, EMAIL } from './config'; // Use this to make sure validator names match form field names (see const fieldSpecificValidator)\n\nconst validatorLookup = { ...validators,\n  userRoles: validators.requiredArray,\n  organisationUnits: validators.requiredArray\n}; // When creating a user, a password is required, because there is no step to create\n// a password, which a user does get when he is invited by email. On the other hand,\n// the email field is optional, because the user can just use his username to login.\n// And for this reason, the username field is required too.\n\nconst CREATE_REQUIRED_FIELDS = new Set([USERNAME, PASSWORD, REPEAT_PASSWORD, SURNAME, FIRST_NAME]); // When inviting a user, email, firstname and surname is sufficient.\n// The user can setup a username and password when clicking on the invite link.\n\nconst INVITE_REQUIRED_FIELDS = new Set([EMAIL, SURNAME, FIRST_NAME]); // In edit mode, the username field is disabled, because this is create-only.\n// The password fields are also optional, we just keep the current password\n// if no new values are provided. Only firstname and surname are required,\n// to prevent these fields from being cleared.\n\nconst EDIT_REQUIRED_FIELDS = new Set([SURNAME, FIRST_NAME]);\nexport default function collectValidators(props, name, isRequiredField, isAttributeField, fieldValidators) {\n  const validatorsToApply = [];\n  const isEditingUser = Boolean(props.user.id);\n  const isRequiredAttributeField = isAttributeField && isRequiredField;\n  const fieldSpecificValidator = validatorLookup[name];\n  const isRequiredStaticField = !isAttributeField && isEditingUser ? EDIT_REQUIRED_FIELDS.has(name) : props.inviteUser ? INVITE_REQUIRED_FIELDS.has(name) : CREATE_REQUIRED_FIELDS.has(name);\n\n  if (fieldSpecificValidator) {\n    validatorsToApply.push(fieldSpecificValidator);\n  }\n\n  if (isRequiredAttributeField || isRequiredStaticField) {\n    validatorsToApply.push(validators.required);\n  }\n\n  if (isAttributeField && fieldValidators) {\n    validatorsToApply.push(...fieldValidators);\n  }\n\n  return validatorsToApply;\n}","/* eslint-disable max-params */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport HardwareKeyboardArrowUp from 'material-ui/svg-icons/hardware/keyboard-arrow-up';\nimport HardwareKeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down';\nimport i18n from '@dhis2/d2-i18n';\nimport makeTrashable from 'trashable';\nimport navigateTo from '../../utils/navigateTo';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges';\nimport asArray from '../../utils/asArray';\nimport getNestedProp from '../../utils/getNestedProp';\nimport api from '../../api';\nimport { userFormInitialValuesSelector } from '../../selectors';\nimport { clearItem, getList, showSnackbar } from '../../actions';\nimport { USER } from '../../constants/entityTypes';\nimport * as CONFIG from './config';\nimport collectValidators from './collectValidators';\nimport { inviteUserValueSelector } from '../../selectors';\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync';\nimport { generateAttributeFields, addUniqueAttributesToAsyncBlurFields } from '../../utils/attributeFieldHelpers';\nimport { renderTextField, renderText, renderSearchableOrgUnitTree, renderSearchableGroupEditor, renderSelectField } from '../../utils/fieldRenderers';\n/**\n * Container component that is controlled by redux-form. When mounting, it will fetch available and selected locales.\n * Once these are loaded, it renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\n\nclass UserForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMore: false,\n      locales: null,\n      attributeFields: null\n    };\n    this.trashableAttributesPromise = null;\n    this.trashableLocalePromise = null;\n    this.inviteFields = CONFIG.getInviteFields();\n    this.baseFields = CONFIG.getBaseFields();\n    this.additionalFields = CONFIG.getAdditionalFields();\n  }\n\n  async componentDidMount() {\n    const {\n      user,\n      showSnackbar,\n      initialize\n    } = this.props;\n    const username = user.id ? user.userCredentials.username : null;\n    this.trashableLocalePromise = makeTrashable(api.getSelectedAndAvailableLocales(username));\n    this.trashableAttributesPromise = makeTrashable(api.getAttributes(USER));\n\n    try {\n      const locales = await this.trashableLocalePromise;\n      const attributes = await this.trashableAttributesPromise;\n      const attributeFields = generateAttributeFields(attributes, user.attributeValues);\n      addUniqueAttributesToAsyncBlurFields(attributeFields, this.props.asyncBlurFields);\n      this.setState({\n        locales,\n        attributeFields\n      });\n      initialize(userFormInitialValuesSelector(user, locales, attributeFields));\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('Could not load the user data. Please refresh the page.'))\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.trashableLocalePromise.trash();\n    this.trashableAttributesPromise.trash();\n  }\n\n  toggleShowMore = () => {\n    this.setState({\n      showMore: !this.state.showMore\n    });\n  };\n  handleSubmit = async (values, _, props) => {\n    const {\n      user,\n      inviteUser,\n      showSnackbar,\n      clearItem,\n      getList\n    } = props;\n    const initialUiLocale = this.state.locales.ui.selected;\n    const initialDbLocale = this.state.locales.db.selected;\n\n    try {\n      await api.saveOrInviteUser(values, user, inviteUser, initialUiLocale, initialDbLocale, this.state.attributeFields);\n      const msg = i18n.t('User \"{{displayName}}\" saved successfully', {\n        displayName: `${values.firstName} ${values.surname}`\n      });\n      showSnackbar({\n        message: msg\n      });\n      clearItem();\n      getList(USER);\n      this.backToList();\n      detectCurrentUserChanges(user);\n    } catch (error) {\n      console.error(error);\n      showSnackbar({\n        message: createHumanErrorMessage(error, i18n.t('There was a problem saving the user.'))\n      });\n    }\n  };\n  backToList = () => {\n    navigateTo('/users');\n  };\n\n  getLabelText(label, user, isRequiredField) {\n    const {\n      inviteUser\n    } = this.props;\n    return isRequiredField === CONFIG.ALWAYS_REQUIRED || inviteUser && isRequiredField === CONFIG.INVITE_REQUIRED || isRequiredField === CONFIG.CREATE_REQUIRED && !user.id && !inviteUser || typeof isRequiredField === 'boolean' && isRequiredField ? `${label} *` : label;\n  }\n\n  prepareGroupEditor(conf, fieldConfig, user, isRequiredField) {\n    conf.assignedItemsLabel = this.getLabelText(conf.assignedItemsLabel, user, isRequiredField);\n    conf.availableItemsQuery = api[conf.availableItemsQuery];\n    conf.initialValues = fieldConfig.initialItemsSelector(user);\n  }\n\n  exludeField(fieldName) {\n    const {\n      user,\n      inviteUser,\n      externalAuthOnly\n    } = this.props;\n    const systemCanEmail = this.context.d2.system.systemInfo.emailConfigured;\n\n    if ((!systemCanEmail || user.id) && fieldName === CONFIG.INVITE) {\n      return true;\n    }\n\n    if ((inviteUser || externalAuthOnly) && (fieldName === CONFIG.PASSWORD || fieldName === CONFIG.REPEAT_PASSWORD)) {\n      return true;\n    }\n\n    if (inviteUser && [CONFIG.EXTERNAL_AUTH, CONFIG.OPEN_ID, CONFIG.LDAP_ID].includes(fieldName)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderFields(fields) {\n    const {\n      user\n    } = this.props;\n    return fields.reduce((filteredFields, fieldConfig) => {\n      const {\n        name,\n        fieldRenderer,\n        label,\n        isRequiredField,\n        isAttributeField,\n        fieldValidators,\n        ...conf\n      } = fieldConfig;\n      const labelText = this.getLabelText(label, user, isRequiredField);\n\n      if (this.exludeField(name)) {\n        return filteredFields;\n      }\n\n      if (fieldRenderer === renderText) {\n        filteredFields.push(renderText(fieldConfig));\n        return filteredFields;\n      }\n\n      switch (fieldRenderer) {\n        case renderTextField:\n          if (!conf.hintText) {\n            conf.hintText = label;\n          }\n\n          conf.disabled = Boolean(name === CONFIG.USERNAME && user.id);\n          break;\n\n        case renderSearchableOrgUnitTree:\n          conf.initialValues = asArray(user[fieldConfig.name]);\n          break;\n\n        case renderSearchableGroupEditor:\n          this.prepareGroupEditor(conf, fieldConfig, user, isRequiredField);\n          break;\n\n        case renderSelectField:\n          conf.options = fieldConfig.optionsSelector ? getNestedProp(fieldConfig.optionsSelector, this.state) : fieldConfig.options;\n          break;\n\n        default:\n          break;\n      }\n\n      conf.validate = collectValidators(this.props, name, isRequiredField, isAttributeField, fieldValidators);\n      filteredFields.push(<Field name={name} key={name} component={fieldRenderer} label={labelText} {...conf} />);\n      return filteredFields;\n    }, []);\n  }\n\n  renderCreateOrInviteField() {\n    return this.renderFields(this.inviteFields);\n  }\n\n  renderAttributeFields() {\n    return this.renderFields(this.state.attributeFields);\n  }\n\n  renderBaseFields() {\n    return this.renderFields(this.baseFields);\n  }\n\n  renderAdditionalFields(showMore) {\n    if (!showMore) {\n      return null;\n    }\n\n    return <div style={CONFIG.STYLES.additionalFieldsWrap}>\n                {this.renderFields(this.additionalFields)}\n            </div>;\n  }\n\n  renderToggler(showMore) {\n    const togglerText = showMore ? i18n.t('Show fewer options') : i18n.t('Show more options');\n    const icon = showMore ? <HardwareKeyboardArrowUp /> : <HardwareKeyboardArrowDown />;\n    return <div style={CONFIG.STYLES.togglerWrap}>\n                <FlatButton onClick={this.toggleShowMore} label={togglerText} style={CONFIG.STYLES.toggler} icon={icon} />\n            </div>;\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      submitting,\n      asyncValidating,\n      pristine,\n      valid,\n      inviteUser\n    } = this.props;\n    const {\n      showMore,\n      locales\n    } = this.state;\n    const disableSubmit = Boolean(submitting || asyncValidating || pristine || !valid);\n    const submitText = inviteUser === true ? i18n.t('Send invite') : i18n.t('Save');\n\n    if (!locales) {\n      return <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return <main>\n                <form autoComplete=\"off\" onSubmit={handleSubmit(this.handleSubmit)}>\n                    {this.renderCreateOrInviteField()}\n                    {this.renderBaseFields()}\n                    {this.renderAttributeFields()}\n                    {this.renderAdditionalFields(showMore)}\n                    {this.renderToggler(showMore)}\n                    <div>\n                        <RaisedButton label={submitText} type=\"submit\" primary={true} disabled={disableSubmit} style={{\n            marginRight: '8px'\n          }} />\n                        <RaisedButton label={i18n.t('Cancel')} onClick={this.backToList} />\n                    </div>\n                </form>\n            </main>;\n  }\n\n}\n\nUserForm.propTypes = {\n  asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  change: PropTypes.func.isRequired,\n  clearItem: PropTypes.func.isRequired,\n  externalAuthOnly: PropTypes.bool.isRequired,\n  getList: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  initialize: PropTypes.func.isRequired,\n  inviteUser: PropTypes.bool.isRequired,\n  pristine: PropTypes.bool.isRequired,\n  showSnackbar: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  valid: PropTypes.bool.isRequired,\n  asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n  fallbackOrgUnits: PropTypes.object\n};\nUserForm.contextTypes = {\n  d2: PropTypes.object.isRequired\n};\nconst selector = formValueSelector(CONFIG.FORM_NAME);\n\nconst mapStateToProps = state => {\n  return {\n    user: state.currentItem,\n    fallbackOrgUnits: state.currentUser[CONFIG.DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS],\n    inviteUser: inviteUserValueSelector(state.form[CONFIG.FORM_NAME]),\n    externalAuthOnly: Boolean(selector(state, CONFIG.EXTERNAL_AUTH))\n  };\n};\n\nconst ReduxFormWrappedUserForm = reduxForm({\n  form: CONFIG.FORM_NAME,\n  asyncValidate: asyncValidatorSwitch,\n  asyncBlurFields: [CONFIG.USERNAME]\n})(UserForm);\nexport default connect(mapStateToProps, {\n  clearItem,\n  showSnackbar,\n  getList\n})(ReduxFormWrappedUserForm);","import UserForm from './UserForm';\nexport default UserForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper, CircularProgress } from 'material-ui';\nimport { connect } from 'react-redux';\nimport { getItem, initNewItem } from '../actions';\nimport { USER, USER_GROUP, USER_ROLE } from '../constants/entityTypes';\nimport { Heading } from '@dhis2/d2-ui-core';\nimport IconLink from './IconLink';\nimport i18n from '@dhis2/d2-i18n';\nimport kebabCase from 'lodash.kebabcase';\nimport capitalize from 'lodash.capitalize';\nimport ErrorMessage from './ErrorMessage';\nimport RoleForm from '../containers/RoleForm';\nimport GroupForm from '../containers/GroupForm';\nimport UserForm from '../containers/UserForm';\nimport { shortItemSelector } from '../selectors';\nconst styles = {\n  main: {\n    width: '100%',\n    paddingLeft: '2rem'\n  },\n  heading: {\n    paddingBottom: '1rem'\n  },\n  paper: {\n    padding: '2rem 5rem 4rem'\n  }\n};\n\nclass FormLoader extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item,\n      getItem,\n      initNewItem,\n      entityType\n    } = this.props;\n\n    if (id && !(item && item.id === id)) {\n      getItem(entityType, id);\n    } else if (!id) {\n      initNewItem(entityType);\n    }\n\n    this.formNotFoundErrorMsg = i18n.t('There was an error getting the form:');\n  }\n\n  renderForm() {\n    const {\n      entityType\n    } = this.props;\n\n    switch (entityType) {\n      case USER:\n        return <UserForm />;\n\n      case USER_ROLE:\n        return <RoleForm />;\n\n      case USER_GROUP:\n        return <GroupForm />;\n\n      default:\n        return <ErrorMessage introText={this.formNotFoundErrorMsg} errorMessage={''} />;\n    }\n  }\n\n  renderHeader() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item,\n      shortItem,\n      entityType\n    } = this.props;\n    const baseItem = item && item.id === id ? item : shortItem;\n    const entityTxt = baseItem ? baseItem.modelDefinition.displayName : capitalize(entityType);\n    const displayName = baseItem ? baseItem.displayName : '';\n    const updateMsg = `${i18n.t('Update')} ${entityTxt}: ${displayName}`;\n    const createMsg = `${i18n.t('Create new')} ${entityTxt}`;\n    const msg = id ? updateMsg : createMsg;\n    const link = baseItem ? `/${kebabCase(baseItem.modelDefinition.plural)}` : null;\n    const linkTooltip = `${i18n.t('Back to')} ${entityTxt}s`;\n    return <Heading style={styles.heading}>\n                <IconLink to={link} tooltip={linkTooltip} disabled={Boolean(link)} icon=\"arrow_back\" />\n                {msg}\n            </Heading>;\n  }\n\n  renderContent() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      item\n    } = this.props;\n\n    if (typeof item === 'string') {\n      return <ErrorMessage introText={this.formNotFoundErrorMsg} errorMessage={item} />;\n    }\n\n    if (!item || item && item.id !== id) {\n      return <div style={{\n        textAlign: 'center',\n        paddingTop: '2rem'\n      }}>\n                    <CircularProgress />\n                </div>;\n    }\n\n    return this.renderForm();\n  }\n\n  render() {\n    return <main style={styles.main}>\n                {this.renderHeader()}\n                <Paper style={styles.paper}>{this.renderContent()}</Paper>\n            </main>;\n  }\n\n}\n\nFormLoader.propTypes = {\n  entityType: PropTypes.string.isRequired,\n  getItem: PropTypes.func.isRequired,\n  initNewItem: PropTypes.func.isRequired,\n  match: PropTypes.object.isRequired,\n  item: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  shortItem: PropTypes.object\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n    item: state.currentItem,\n    // shortItem is available when navigating from a list but not after refesh\n    shortItem: shortItemSelector(props.match.params.id, state.list.items)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItem,\n  initNewItem\n})(FormLoader);","import api from '../api';\n/**\n * Receives a full UTC data string and return a formatted version according to the user's locale\n * @param {String} utcString - UTC Date String\n * @param {String} includeTime - Include time if true\n * @returns {String} Formatted date string\n * @memberof module:utils\n * @function\n */\n\nconst parseDateFromUTCString = (utcString, includeTime) => {\n  const d2 = api.getD2();\n  const locale = d2.currentUser.userSettings.settings.keyUiLocale;\n  const date = new Date(utcString);\n  const dateOptions = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  };\n  const timeOptions = {\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  const options = includeTime ? { ...dateOptions,\n    ...timeOptions\n  } : dateOptions;\n  return new Intl.DateTimeFormat(locale, options).format(date);\n};\n\nexport default parseDateFromUTCString;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Paper } from 'material-ui';\nimport kebabCase from 'lodash.kebabcase';\nimport capitalize from 'lodash.capitalize';\nimport api from '../api';\nimport i18n from '@dhis2/d2-i18n';\nimport parseDateFromUTCString from '../utils/parseDateFromUTCString';\nimport { LoadingMask, Heading } from '@dhis2/d2-ui-core';\nimport ErrorMessage from './ErrorMessage';\nimport IconLink from './IconLink';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport ImageEdit from 'material-ui/svg-icons/image/edit';\nimport ContentSend from 'material-ui/svg-icons/content/send';\nimport { Link } from 'react-router-dom';\nimport { USER, USER_GROUP, USER_ROLE } from '../constants/entityTypes';\nimport { connect } from 'react-redux';\nimport { getItem } from '../actions';\nconst styles = {\n  main: {\n    width: '100%',\n    paddingLeft: '2rem'\n  },\n  heading: {\n    paddingBottom: '1rem'\n  },\n  raisedButton: {\n    height: '36px',\n    transform: 'translateY(10px)',\n    float: 'right',\n    marginLeft: '1rem'\n  },\n  paper: {\n    padding: '1.4rem'\n  },\n  cell: {\n    fontSize: '1rem',\n    padding: '0.8rem',\n    verticalAlign: 'top'\n  },\n  valueCell: {\n    textAlign: 'right',\n    color: '#757575'\n  }\n};\n/**\n * This component reads specified properties of an object and displays this in a table\n */\n\nclass DetailSummary extends Component {\n  componentDidMount() {\n    const {\n      baseName,\n      routeId,\n      getItem\n    } = this.props;\n    getItem(baseName, routeId);\n  }\n\n  getLabelForEntity(baseName) {\n    switch (baseName) {\n      case USER:\n        return i18n.t('Edit user');\n\n      case USER_GROUP:\n        return i18n.t('Edit user group');\n\n      case USER_ROLE:\n        return i18n.t('Edit user role');\n\n      default:\n        return '';\n    }\n  }\n  /**\n   * Renders a button wrapped in a link.\n   * The link points to a location outside of the user-app where a message can be sent to a user with a given id.\n   * @param {string} userId\n   */\n\n\n  renderSendMessageBtn(userId) {\n    const url = `${api.getContextPath()}/dhis-web-messaging/#/PRIVATE/create/${userId}`;\n    return <RaisedButton style={styles.raisedButton} label={i18n.t('Send message')} secondary={true} containerElement={<a href={url}> </a>} icon={<ContentSend />} />;\n  }\n\n  renderPropertyFields() {\n    const {\n      summaryObject,\n      config\n    } = this.props;\n    const labelCellStyle = { ...styles.cell,\n      ...styles.valueCell\n    };\n    return config.map((field, index) => {\n      const {\n        key,\n        removeText,\n        parseDate,\n        parseDateTime,\n        nestedPropselector,\n        parseArrayAsCommaDelimitedString,\n        count\n      } = field;\n      let {\n        label\n      } = field;\n      label = i18n.t(label);\n      let value = summaryObject[key];\n\n      if (typeof value === 'undefined') {\n        value = '';\n      } else {\n        if (nestedPropselector) {\n          nestedPropselector.forEach(selector => {\n            value = value[selector];\n          });\n        }\n\n        if (parseArrayAsCommaDelimitedString) {\n          // Some nested lists come through as a modelCollection but others are already arrays\n          if (typeof value.toArray === 'function') {\n            value = value.toArray();\n          }\n\n          value = value.map(item => item[parseArrayAsCommaDelimitedString]).join(', ');\n        }\n\n        if (removeText) {\n          value = capitalize(value.replace(removeText, ''));\n        }\n\n        if ((parseDate || parseDateTime) && typeof value === 'string') {\n          value = parseDateFromUTCString(value, parseDateTime);\n        }\n\n        if (count) {\n          if (typeof value.size === 'number') {\n            value = value.size;\n          } else if (typeof value.length === 'number') {\n            value = value.length;\n          }\n        }\n      }\n\n      return <tr key={index}>\n                    <td style={labelCellStyle}>{label}</td>\n                    <td style={styles.cell}>{value}</td>\n                </tr>;\n    });\n  }\n\n  render() {\n    const {\n      summaryObject,\n      baseName\n    } = this.props;\n\n    if (summaryObject === null) {\n      return <LoadingMask />;\n    }\n\n    if (typeof summaryObject === 'string') {\n      const errorText = i18n.t(`There was an error fetching the ${baseName}`);\n      return <ErrorMessage introText={errorText} errorMessage={summaryObject} />;\n    }\n\n    const {\n      id,\n      displayName,\n      access\n    } = summaryObject;\n    const plural = `${baseName}s`,\n          baseRoute = `/${kebabCase(plural)}`,\n          backTooltip = i18n.t(`Back to ${plural}`),\n          editLink = `${baseRoute}/edit/${id}`,\n          editLabel = this.getLabelForEntity(baseName);\n    return <main style={styles.main}>\n                <Heading style={styles.heading}>\n                    <IconLink to={baseRoute} tooltip={backTooltip} icon=\"arrow_back\" />\n                    {displayName}\n\n                    {access.update ? <RaisedButton style={styles.raisedButton} label={editLabel} primary={true} containerElement={<Link to={editLink} />} icon={<ImageEdit />} /> : null}\n\n                    {baseName === USER ? this.renderSendMessageBtn(id) : null}\n                </Heading>\n                <Paper style={styles.paper}>\n                    <table>\n                        <tbody>{this.renderPropertyFields()}</tbody>\n                    </table>\n                </Paper>\n            </main>;\n  }\n\n}\n\nDetailSummary.propTypes = {\n  baseName: PropTypes.string.isRequired,\n  config: PropTypes.array.isRequired,\n  getItem: PropTypes.func.isRequired,\n  routeId: PropTypes.string.isRequired,\n  summaryObject: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  summaryObject: state.currentItem\n});\n\nexport default connect(mapStateToProps, {\n  getItem\n})(DetailSummary);","import i18n from '@dhis2/d2-i18n';\n\nconst getBaseFields = () => [{\n  key: 'displayName',\n  label: i18n.t('Display name')\n}, {\n  key: 'id',\n  label: i18n.t('ID')\n}];\n\nexport const getUserProfile = () => [...getBaseFields(), {\n  key: 'userCredentials',\n  nestedPropselector: ['lastLogin'],\n  label: i18n.t('Last login'),\n  parseDateTime: true\n}, {\n  key: 'created',\n  label: i18n.t('Created'),\n  parseDate: true\n}, {\n  key: 'surname',\n  label: i18n.t('Surname')\n}, {\n  key: 'firstName',\n  label: i18n.t('First name')\n}, {\n  key: 'introduction',\n  label: i18n.t('Introduction')\n}, {\n  key: 'jobTitle',\n  label: i18n.t('Job title')\n}, {\n  key: 'employer',\n  label: i18n.t('Works at')\n}, {\n  key: 'education',\n  label: i18n.t('Education')\n}, {\n  key: 'interests',\n  label: i18n.t('Interests')\n}, {\n  key: 'nationality',\n  label: i18n.t('Nationality')\n}, {\n  key: 'birthday',\n  label: i18n.t('Birthday'),\n  parseDate: true\n}, {\n  key: 'gender',\n  label: i18n.t('Gender'),\n  removeText: 'gender_'\n}, {\n  key: 'languages',\n  label: i18n.t('Speaks')\n}, {\n  key: 'email',\n  label: i18n.t('E-mail')\n}, {\n  key: 'phoneNumber',\n  label: i18n.t('Mobile phone number')\n}, {\n  key: 'organisationUnits',\n  label: i18n.t('Organisations units'),\n  parseArrayAsCommaDelimitedString: 'displayName'\n}, {\n  key: 'userCredentials',\n  label: i18n.t('User roles'),\n  nestedPropselector: ['userRoles'],\n  parseArrayAsCommaDelimitedString: 'displayName'\n}];\nexport const getUserRoleDetails = () => [...getBaseFields(), {\n  key: 'users',\n  label: i18n.t('Members'),\n  count: true\n}];\nexport const getUserGroupDetails = () => [...getBaseFields(), {\n  key: 'users',\n  label: i18n.t('Number of users'),\n  count: true\n}];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserProfile } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a User instance\n * @class\n */\n\nconst UserProfile = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserProfile()} baseName={USER} />;\n\nUserProfile.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default UserProfile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { Link } from 'react-router-dom';\nconst style = {\n  width: '100%',\n  textAlign: 'center',\n  padding: '1.5rem 1.5rem 1rem'\n};\n/**\n * Will display when no matching route was found.\n * Renders text and the pathname that is in the URL after the `/#`\n * @class\n */\n\nconst PageNotFound = ({\n  location\n}) => <div style={style}>\n        <h1>{i18n.t('Page not found.')}</h1>\n        <h3>\n            {i18n.t('No match for')}\n            <code> {location.pathname}</code>\n        </h3>\n        <Link to=\"/\"> {i18n.t('Go back home')}</Link>\n    </div>;\n\nPageNotFound.propTypes = {\n  location: PropTypes.object.isRequired\n};\nexport default PageNotFound;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport Card from 'material-ui/Card/Card';\nimport CardHeader from 'material-ui/Card/CardHeader';\nimport CardText from 'material-ui/Card/CardText';\nimport CardActions from 'material-ui/Card/CardActions';\nimport IconButton from 'material-ui/IconButton/IconButton';\nimport navigateTo from '../utils/navigateTo';\nimport { getSections } from '../constants/routeConfig';\nconst cardStyle = {\n  padding: '0',\n  margin: '.5rem',\n  marginTop: '1rem',\n  float: 'left',\n  width: '230px'\n};\nconst headerStyle = {\n  padding: '1rem',\n  height: 'auto',\n  borderBottom: '1px solid #ddd',\n  cursor: 'pointer',\n  fontWeight: 'bold'\n};\nconst textStyle = {\n  height: '85px',\n  padding: '.5rem 1rem'\n};\nconst actionStyle = {\n  textAlign: 'right'\n};\n/**\n * Conditionally renders cards representing the different sections present in the user-app\n * Cards will only be displayed if the current user can create or delete a model type.\n */\n\nclass CardLinks extends Component {\n  renderActionButtons(card, canList, canCreate) {\n    const actionButtons = [];\n    const createPath = `${card.path}/new`;\n\n    if (canCreate) {\n      actionButtons.push(<IconButton key=\"add\" iconClassName=\"material-icons\" tooltip={i18n.t('Add')} tooltipPosition=\"top-center\" onClick={() => navigateTo(createPath)}>\n                    &#xE145;\n                </IconButton>);\n    }\n\n    if (canList) {\n      actionButtons.push(<IconButton key=\"list\" iconClassName=\"material-icons\" tooltip={i18n.t('list')} tooltipPosition=\"top-center\" onClick={() => navigateTo(card.path)}>\n                    &#xE8EF;\n                </IconButton>);\n    }\n\n    return actionButtons;\n  }\n\n  renderCard = (card, index) => {\n    const {\n      currentUser,\n      models\n    } = this.context.d2; // Based on input from Lars:\n    // \"you should hide menu items for which the user has no \"add\" or \"delete\" authority\"\n\n    const canCreate = currentUser.canCreate(models[card.entityType]);\n    const canDelete = currentUser.canDelete(models[card.entityType]);\n    const canList = canCreate || canDelete;\n\n    if (!canList) {\n      return null;\n    }\n\n    return <Card key={`card-${index}`} style={cardStyle}>\n                <CardHeader onClick={() => navigateTo(card.path)} style={headerStyle} title={card.label} />\n                <CardText style={textStyle}>{card.description}</CardText>\n                <CardActions style={actionStyle}>\n                    {this.renderActionButtons(card, canList, canCreate)}\n                </CardActions>\n            </Card>;\n  };\n\n  render() {\n    const cards = getSections().map(this.renderCard);\n\n    if (cards.length === 0) {\n      return <div>\n                    {i18n.t('You do not have access to any section of the DHIS 2 User Management App')}\n                </div>;\n    }\n\n    return cards;\n  }\n\n}\n\nCardLinks.contextTypes = {\n  d2: PropTypes.object\n};\nexport default CardLinks;","/**\n * Defines the RoleList context menu for current user on a given UserRole model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/RoleList/RoleContextMenuActions\n */\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions';\nconst show_details = 'show_details';\nconst sharing_settings = 'sharing_settings';\nconst edit = 'edit';\nconst remove = 'remove';\n/**\n * Determines whether a specific user role action should be visible for current user and given UserRole instance\n * @param {Object} model - d2 UserRole model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isRoleContextActionAllowed = (model, action) => {\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access\n  } = model;\n\n  switch (action) {\n    case show_details:\n      return access.read;\n\n    case sharing_settings:\n      return access.manage;\n\n    case edit:\n      return access.update;\n\n    case remove:\n      return access.delete;\n\n    default:\n      return true;\n  }\n};\nexport const roleContextMenuIcons = {\n  [show_details]: 'info',\n  [sharing_settings]: 'share',\n  [edit]: 'edit',\n  [remove]: 'delete'\n};\nexport const roleContextMenuActions = Action.createActionsFromNames([[show_details], [sharing_settings], [edit], [remove]]);\nroleContextMenuActions.show_details.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-roles/view/${id}`);\n});\nroleContextMenuActions.sharing_settings.subscribe(openSharingSettings);\nroleContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-roles/edit/${id}`);\n});\nroleContextMenuActions.remove.subscribe(({\n  data: role\n}) => {\n  const params = {\n    model: role,\n    entityType: USER_ROLE\n  };\n  deleteModel(params);\n});","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport { USER_ROLE } from '../../constants/entityTypes';\nimport List from '../../components/List';\nimport { roleContextMenuActions, roleContextMenuIcons, isRoleContextActionAllowed } from './RoleContextMenuActions';\nimport SearchFilter from '../../components/SearchFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserRoles\n * @class\n */\n\nconst RoleList = () => <List entityType={USER_ROLE} filterComponent={SearchFilter} columns={['displayName', 'description']} primaryAction={roleContextMenuActions.edit} contextMenuActions={roleContextMenuActions} contextMenuIcons={roleContextMenuIcons} isContextActionAllowed={isRoleContextActionAllowed} sectionName={i18n.t('User Role Management')} newItemPath={'/user-roles/new'} className={'role-list'} />;\n\nexport default RoleList;","import RoleList from './RoleList';\nexport default RoleList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER_ROLE } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserRoleDetails } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a UserRole instance\n * @class\n */\n\nconst RoleDetails = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserRoleDetails()} baseName={USER_ROLE} />;\n\nRoleDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default RoleDetails;","/**\n * Defines the GroupList context menu for current user on a given UserGroup model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/GroupList/GroupContextMenuActions\n */\nimport i18n from '@dhis2/d2-i18n';\nimport { Action } from '@dhis2/d2-ui-core';\nimport navigateTo from '../../utils/navigateTo';\nimport api from '../../api';\nimport store from '../../store';\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport { showSnackbar, refreshCurrentUser } from '../../actions';\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage';\nconst show_details = 'show_details';\nconst sharing_settings = 'sharing_settings';\nconst edit = 'edit';\nconst join_group = 'join_group';\nconst leave_group = 'leave_group';\nconst remove = 'remove';\n/**\n * Determines whether a specific user group action should be visible for current user and given UserGroup instance\n * @param {Object} model - d2 UserGroup model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\n\nexport const isGroupContextActionAllowed = (model, action) => {\n  if (!model) {\n    return false;\n  }\n\n  const {\n    access\n  } = model;\n\n  switch (action) {\n    case show_details:\n      return access.read;\n\n    case sharing_settings:\n      return access.manage;\n\n    case edit:\n      return access.update;\n\n    case join_group:\n      return access.update && !model.currentUserIsMember;\n\n    case leave_group:\n      return access.update && model.currentUserIsMember;\n\n    case remove:\n      return access.delete;\n\n    default:\n      return true;\n  }\n};\nexport const groupContextMenuIcons = {\n  [show_details]: 'info',\n  [sharing_settings]: 'share',\n  [edit]: 'edit',\n  [join_group]: 'group_add',\n  [leave_group]: 'exit_to_app',\n  [remove]: 'delete'\n};\nexport const groupContextMenuActions = Action.createActionsFromNames([show_details, sharing_settings, edit, join_group, leave_group, remove]);\n\nconst updateGroupMembership = async ({\n  displayName,\n  id\n}, deleteMembership) => {\n  try {\n    await api.updateCurrentUserGroupMembership(id, deleteMembership);\n    const baseMsg = deleteMembership ? i18n.t('You left group') : i18n.t('You joined group');\n    store.dispatch(showSnackbar({\n      message: `${baseMsg} ${displayName}`\n    }));\n    store.dispatch(refreshCurrentUser());\n  } catch (error) {\n    store.dispatch(showSnackbar({\n      message: createHumanErrorMessage(error, i18n.t('There was a problem updating your group membership'))\n    }));\n  }\n};\n\ngroupContextMenuActions.show_details.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-groups/view/${id}`);\n});\ngroupContextMenuActions.sharing_settings.subscribe(openSharingSettings);\ngroupContextMenuActions.edit.subscribe(({\n  data: {\n    id\n  }\n}) => {\n  navigateTo(`/user-groups/edit/${id}`);\n});\ngroupContextMenuActions.join_group.subscribe(({\n  data\n}) => {\n  updateGroupMembership(data, false);\n});\ngroupContextMenuActions.leave_group.subscribe(({\n  data\n}) => {\n  updateGroupMembership(data, true);\n});\ngroupContextMenuActions.remove.subscribe(({\n  data: group\n}) => {\n  const params = {\n    model: group,\n    entityType: USER_GROUP\n  };\n  deleteModel(params);\n});","import React, { Component } from 'react';\nimport List from '../../components/List';\nimport i18n from '@dhis2/d2-i18n';\nimport { isGroupContextActionAllowed, groupContextMenuIcons, groupContextMenuActions } from './GroupContextMenuActions';\nimport { USER_GROUP } from '../../constants/entityTypes';\nimport SearchFilter from '../../components/SearchFilter';\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserGroups\n */\n\nclass GroupList extends Component {\n  render() {\n    return <List entityType={USER_GROUP} filterComponent={SearchFilter} columns={['displayName', 'currentUserIsMember']} primaryAction={groupContextMenuActions.edit} contextMenuActions={groupContextMenuActions} contextMenuIcons={groupContextMenuIcons} isContextActionAllowed={isGroupContextActionAllowed} sectionName={i18n.t('User Group Management')} newItemPath={'/user-groups/new'} className={'group-list'} />;\n  }\n\n}\n\nexport default GroupList;","import GroupList from './GroupList';\nexport default GroupList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { USER_GROUP } from '../constants/entityTypes';\nimport DetailSummary from '../components/DetailSummary';\nimport { getUserGroupDetails } from '../constants/detailFieldConfigs';\n/** Renders a DetailSummary for a UserGroup instance\n * @class\n */\n\nconst GroupDetails = ({\n  match: {\n    params: {\n      id\n    }\n  }\n}) => <DetailSummary routeId={id} config={getUserGroupDetails()} baseName={USER_GROUP} />;\n\nGroupDetails.propTypes = {\n  match: PropTypes.object.isRequired\n};\nexport default GroupDetails;","import React from 'react';\nimport i18n from '@dhis2/d2-i18n';\nimport UserList from '../containers/UserList';\nimport FormLoader from '../components/FormLoader';\nimport UserProfile from '../containers/UserProfile';\nimport PageNotFound from '../components/PageNotFound';\nimport CardLinks from '../components/CardLinks';\nimport RoleList from '../containers/RoleList';\nimport RoleDetails from '../containers/RoleDetails';\nimport GroupList from '../containers/GroupList';\nimport GroupDetails from '../containers/GroupDetails';\nimport { USER, USER_ROLE, USER_GROUP } from './entityTypes';\n\nconst getUserSection = () => ({\n  key: 'user_section',\n  label: i18n.t('User'),\n  icon: 'person',\n  path: '/users',\n  description: i18n.t('Create, modify, view and delete Users'),\n  component: UserList,\n  entityType: USER\n});\n\nconst getUserRoleSection = () => ({\n  key: 'user_role_section',\n  label: i18n.t('User role'),\n  icon: 'folder_shared',\n  path: '/user-roles',\n  description: i18n.t('Create, modify, view and delete User Roles'),\n  component: RoleList,\n  entityType: USER_ROLE\n});\n\nconst getUserGroupSection = () => ({\n  key: 'user_group_section',\n  label: i18n.t('User group'),\n  icon: 'group',\n  path: '/user-groups',\n  description: i18n.t('Create, modify, view and delete User Groups'),\n  component: GroupList,\n  entityType: USER_GROUP\n}); // Label property is used in sidebar, so routes without a label will be omitted\n\n\nconst createRouteConfig = () => [// USER\n{\n  key: 'user_new_view',\n  path: '/users/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER} {...props} />,\n  entityType: USER\n}, {\n  key: 'user_edit_view',\n  path: '/users/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER} {...props} />,\n  entityType: USER\n}, {\n  key: 'user_profile_view',\n  path: '/users/view/:id',\n  component: UserProfile,\n  entityType: USER\n}, getUserSection(), // ROLE\n{\n  key: 'user_role_new_view',\n  path: '/user-roles/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n  entityType: USER_ROLE\n}, {\n  key: 'user_role_edit_view',\n  path: '/user-roles/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n  entityType: USER_ROLE\n}, {\n  key: 'user_role_details_view',\n  path: '/user-roles/view/:id',\n  component: RoleDetails,\n  entityType: USER_ROLE\n}, getUserRoleSection(), // GROUP\n{\n  key: 'user_group_new_view',\n  path: '/user-groups/new',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n  entityType: USER_GROUP\n}, {\n  key: 'user_group_edit_view',\n  path: '/user-groups/edit/:id',\n\n  /* eslint-disable-next-line react/display-name */\n  render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n  entityType: USER_GROUP\n}, {\n  key: 'user_group_details_view',\n  path: '/user-groups/view/:id',\n  component: GroupDetails,\n  entityType: USER_GROUP\n}, getUserGroupSection(), // Other\n{\n  key: 'landing_page',\n  path: '/',\n  component: CardLinks\n}, {\n  key: 'not_found',\n  component: PageNotFound\n}];\n\nexport const getSections = (() => {\n  let sections = null;\n  return () => {\n    if (!sections) {\n      sections = [getUserSection(), getUserRoleSection(), getUserGroupSection()];\n    }\n\n    return sections;\n  };\n})();\nexport default (() => {\n  let routeConfig = null;\n  return () => {\n    if (!routeConfig) {\n      routeConfig = createRouteConfig();\n    }\n\n    return routeConfig;\n  };\n})();","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Sidebar } from '@dhis2/d2-ui-core';\nconst style = {\n  display: 'flex',\n  flex: '0 0 320px'\n};\n/**\n * Renders the sidebar containing the available sections.\n * If its on a path/route that doesn't match any section it will render null.\n * This is because when a form or the CardLinks are displayed, the sidebar should not show.\n */\n\nclass SideNav extends Component {\n  changeSectionHandler = key => {\n    const {\n      sections,\n      history\n    } = this.props;\n    const section = sections.find(section => section.key === key);\n    history.push(section.path);\n  };\n\n  render() {\n    const {\n      sections,\n      location: {\n        pathname\n      }\n    } = this.props;\n    const sectionForPath = sections.find(section => section.path === pathname);\n    const onLandingPage = pathname === '/';\n    const sectionKey = sectionForPath ? sectionForPath.key : null;\n\n    if (!sectionForPath && !onLandingPage) {\n      return null;\n    }\n\n    return <div style={style}>\n                <Sidebar sections={sections} onChangeSection={this.changeSectionHandler} currentSection={sectionKey} />\n            </div>;\n  }\n\n}\n\nSideNav.propTypes = {\n  history: PropTypes.object.isRequired,\n  sections: PropTypes.array.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  })\n};\nexport default withRouter(SideNav);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport i18n from '@dhis2/d2-i18n';\nimport { connect } from 'react-redux';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { initCurrentUser } from '../actions';\nimport { LoadingMask } from '@dhis2/d2-ui-core';\nimport ErrorMessage from './ErrorMessage';\nimport getRouteConfig from '../constants/routeConfig';\nimport SideNav from './SideNav';\nimport navigateTo from '../utils/navigateTo';\nconst style = {\n  display: 'flex',\n  flex: '1 1 0%',\n  paddingRight: '2rem',\n  paddingTop: '1rem'\n};\n/**\n * This component prepares the user-app sections and routes based on the current user's authorities\n * The sections will be rendered in the SideNav and the routes within a react-router Switch component\n */\n\nclass SectionLoader extends Component {\n  componentDidMount() {\n    const {\n      initCurrentUser,\n      currentUser\n    } = this.props;\n\n    if (!currentUser) {\n      initCurrentUser();\n    } else {\n      this.setRouteConfig(currentUser);\n    }\n  }\n\n  componentWillReceiveProps({\n    currentUser,\n    location: {\n      pathname\n    }\n  }) {\n    this.setRouteConfig(currentUser); // Navigate home if the current user has edited a setting that restricts\n    // him from an active section. I.e. adjusting his own user role\n    // so he cannot edit user roles anymore\n\n    if (currentUser && currentUser !== this.props.currentUser && pathname !== '/' && !this.pathHasAvailableSection(pathname)) {\n      navigateTo('/');\n    }\n  }\n\n  pathHasAvailableSection(pathname) {\n    if (!this.routeConfig) {\n      return false;\n    }\n\n    const {\n      sections\n    } = this.routeConfig;\n    return Boolean(sections && sections.find(section => pathname.includes(section.path.split(':')[0])));\n  }\n\n  setRouteConfig(currentUser) {\n    this.routeConfig = !currentUser ? null : getRouteConfig().reduce((routeConfig, configItem) => {\n      const {\n        routes,\n        sections\n      } = routeConfig;\n\n      if (this.userHasAuthorities(configItem, currentUser)) {\n        routes.push(configItem);\n\n        if (configItem.label) {\n          sections.push(configItem);\n        }\n      }\n\n      return routeConfig;\n    }, {\n      routes: [],\n      sections: []\n    });\n  }\n\n  userHasAuthorities({\n    entityType\n  }, currentUser) {\n    if (!entityType) {\n      return true;\n    }\n\n    const {\n      models\n    } = this.context.d2;\n    const canCreate = currentUser.canCreate(models[entityType]);\n    const canDelete = currentUser.canDelete(models[entityType]);\n    return canCreate || canDelete;\n  }\n\n  renderRoutes(routes) {\n    return routes.map(section => <Route key={section.key} exact strict {...section} />);\n  }\n\n  renderContent() {\n    const {\n      currentUser\n    } = this.props;\n\n    if (!currentUser) {\n      return <LoadingMask />;\n    }\n\n    if (typeof currentUser === 'string') {\n      const introText = i18n.t('There was an error loading the current user');\n      return <ErrorMessage introText={introText} errorMessage={currentUser} />;\n    }\n\n    const {\n      routes,\n      sections\n    } = this.routeConfig;\n\n    if (sections && sections.length === 0) {\n      const introText = i18n.t('You do not have authorities to see users, user roles or user groups');\n      return <ErrorMessage introText={introText} errorMessage=\"\" />;\n    }\n\n    return [<SideNav key=\"sidenav\" sections={sections} />, <Switch key=\"routeswitch\">{this.renderRoutes(routes)}</Switch>];\n  }\n\n  render() {\n    return <main style={style}>{this.renderContent()}</main>;\n  }\n\n}\n\nSectionLoader.contextTypes = {\n  d2: PropTypes.object\n};\nSectionLoader.propTypes = {\n  initCurrentUser: PropTypes.func.isRequired,\n  currentUser: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nconst mapStateToProps = ({\n  currentUser\n}) => ({\n  currentUser\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  initCurrentUser\n})(SectionLoader));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from 'material-ui/Snackbar';\nimport { hideSnackbar } from '../actions';\n/**\n * A small wrapper around the  MUI Snackbar so it can easily be controlled by state\n * @class\n */\n\nconst SnackbarContainer = ({\n  open,\n  snackbarProps,\n  hideSnackbar\n}) => {\n  const defaults = {\n    autoHideDuration: 6000,\n    onRequestClose: hideSnackbar,\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    // Forces text to stay on one line\n    bodyStyle: {\n      maxWidth: '100%'\n    },\n    // Overrides the default max-width of 587px\n    contentStyle: {\n      display: 'flex'\n    } // Forces the confirm button to be on the same line as the text\n\n  };\n  const finalProps = { ...defaults,\n    ...snackbarProps\n  };\n  return <Snackbar open={open} {...finalProps} />;\n};\n\nSnackbarContainer.propTypes = {\n  hideSnackbar: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  snackbarProps: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.snackbar.show,\n  snackbarProps: state.popups.snackbar.props\n});\n\nexport default connect(mapStateToProps, {\n  hideSnackbar\n})(SnackbarContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Dialog from 'material-ui/Dialog';\n/**\n * A thin wrapper around the MUI Dialog component so it can easily be controlled by redux state\n * @class\n */\n\nconst DialogContainer = ({\n  open,\n  dialogProps,\n  content\n}) => <Dialog key=\"dialog\" open={open} {...dialogProps}>\n        {content}\n    </Dialog>;\n\nDialogContainer.propTypes = {\n  dialogProps: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  content: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.dialog.show,\n  dialogProps: state.popups.dialog.props,\n  content: state.popups.dialog.content\n});\n\nexport default connect(mapStateToProps)(DialogContainer);","import SharingDialog from '@dhis2/d2-ui-sharing-dialog';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport api from '../api';\nimport { hideSharingDialog } from '../actions';\n/**\n * A small wrapper around the d2-ui SharingDialog so it can easily be controlled by state\n * @class\n */\n\nconst SharingDialogContainer = ({\n  open,\n  id,\n  type,\n  hideSharingDialog\n}) => {\n  return <SharingDialog open={open} id={id} type={type} onRequestClose={hideSharingDialog} d2={api.getD2()} />;\n};\n\nSharingDialogContainer.propTypes = {\n  hideSharingDialog: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  id: PropTypes.string,\n  type: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  open: state.popups.sharing.show,\n  id: state.popups.sharing.id,\n  type: state.popups.sharing.type\n});\n\nexport default connect(mapStateToProps, {\n  hideSharingDialog\n})(SharingDialogContainer);","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport history from './utils/history';\nimport SectionLoader from './components/SectionLoader';\nimport SnackbarContainer from './components/SnackbarContainer';\nimport DialogContainer from './components/DialogContainer';\nimport SharingDialogContainer from './components/SharingDialogContainer';\n/**\n * Main Component\n * @class\n */\n\nconst App = () => <div>\n        <Router history={history} hashType={'noslash'}>\n            <SectionLoader />\n        </Router>\n        <SnackbarContainer />\n        <DialogContainer />\n        <SharingDialogContainer />\n    </div>;\n\nexport default App;","import Spacing from 'material-ui/styles/spacing';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { blue100, blue500, blue700, grey100, grey400, orange500, orangeA200, darkBlack, white } from 'material-ui/styles/colors';\nimport { fade } from 'material-ui/utils/colorManipulator';\nconst theme = {\n  spacing: Spacing,\n  fontFamily: 'Roboto, sans-serif',\n  palette: {\n    primary1Color: blue500,\n    primary2Color: blue700,\n    primary3Color: blue100,\n    accent1Color: orange500,\n    accent2Color: grey100,\n    accent3Color: orangeA200,\n    textColor: darkBlack,\n    alternateTextColor: white,\n    canvasColor: white,\n    borderColor: grey400,\n    disabledColor: fade(darkBlack, 0.3)\n  }\n};\nconst muiTheme = getMuiTheme(theme);\nexport default Object.assign({}, muiTheme, {\n  forms: {\n    minWidth: 350,\n    maxWidth: 750\n  },\n  formInput: {\n    fontWeight: 100\n  }\n});","import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport PropTypes from 'prop-types';\nimport theme from '../theme';\n/**\n * Component that adds d2 to the context and applies the dhis2 theme\n * @param {Object} props\n * @param {Object} props.d2 - The d2 instance to add to the context of children\n * @class\n */\n\nclass AppWithD2ContextAndTheme extends Component {\n  getChildContext = () => ({\n    d2: this.props.d2\n  });\n  render = () => <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>;\n}\n\nAppWithD2ContextAndTheme.childContextTypes = {\n  d2: PropTypes.object\n};\nAppWithD2ContextAndTheme.propTypes = {\n  children: PropTypes.object.isRequired,\n  d2: PropTypes.object\n};\nexport default AppWithD2ContextAndTheme;","import React from 'react';\nimport { useD2 } from '@dhis2/app-runtime-adapter-d2';\nimport { Provider } from 'react-redux';\nimport api from './api';\nimport App from './App';\nimport store from './store';\nimport AppWithD2ContextAndTheme from './components/AppWithD2ContextAndTheme';\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\nimport './styles/styles.css';\nimport { CircularProgress } from 'material-ui';\n\nconst AppWrapper = () => {\n  const {\n    d2\n  } = useD2({\n    d2Config: {\n      schemas: ['userRole', 'user', 'userGroup', 'userCredentials', 'organisationUnit']\n    },\n    i18nRoot: './d2i18n',\n    onInitialized: d2 => {\n      api.init(d2);\n    }\n  });\n\n  if (!d2) {\n    return <AppWithD2ContextAndTheme>\n                <div className=\"page-loader-wrap\">\n                    <CircularProgress size={48} />\n                </div>\n            </AppWithD2ContextAndTheme>;\n  }\n\n  return <Provider store={store}>\n            <AppWithD2ContextAndTheme d2={d2}>\n                <App />\n            </AppWithD2ContextAndTheme>\n        </Provider>;\n};\n\nexport default AppWrapper;"],"sourceRoot":""}