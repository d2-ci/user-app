{"version":3,"sources":["utils/history.js","reducers/list.js","constants/actionTypes.js","constants/defaults.js","reducers/filter.js","reducers/pager.js","reducers/currentItem.js","reducers/currentUser.js","reducers/popups/snackbar.js","reducers/popups/dialog.js","reducers/popups/sharing.js","reducers/popups/index.js","store.js","theme.js","components/AppWithD2ContextAndTheme.js","constants/queryFields.js","utils/asArray.js","utils/getNestedProp.js","components/ErrorMessage.js","utils/createHumanErrorMessage.js","components/SearchableGroupEditor.js","components/AsyncAutoComplete.js","components/SearchableOrgUnitTree.js","components/AuthorityEditor/AuthorityFilter.js","components/AuthorityEditor/utils/filterAuthorities.js","components/AuthorityEditor/HighlightableText.js","components/AuthorityEditor/AuthorityItem.js","components/AuthorityEditor/utils/authorityGroupNames.js","components/AuthorityEditor/utils/groupAuthorities.js","components/AuthorityEditor/AuthorityGroup.js","components/AuthorityEditor/AuthoritySection.js","components/AuthorityEditor/FilteredAuthoritySections.js","components/AuthorityEditor/AuthorityEditor.js","components/AuthorityEditor/index.js","utils/fieldRenderers.js","containers/GroupForm/config.js","selectors/index.js","containers/UserForm/config.js","constants/entityTypes.js","utils/validators.js","utils/browserHasDateInputSupport.js","utils/attributeFieldHelpers.js","api/utils.js","api/index.js","actions/index.js","utils/navigateTo.js","components/List/booleanValueRenderer.js","components/List/List.js","components/List/index.js","utils/detectCurrentUserChanges.js","utils/sharedActions.js","utils/validatorsAsync.js","components/ReplicateUserForm.js","containers/UserList/UserContextMenuActions.js","components/OrganisationUnitFilter.js","components/OrganisationUnitInput.js","constants/filterFieldNames.js","components/SearchFilter.js","containers/UserList/UserFilter.js","containers/UserList/index.js","containers/UserList/UserList.js","components/IconLink.js","containers/RoleForm/config.js","containers/RoleForm/RoleForm.js","containers/RoleForm/index.js","containers/GroupForm/GroupForm.js","containers/GroupForm/collectValidators.js","containers/GroupForm/index.js","containers/UserForm/collectValidators.js","containers/UserForm/UserForm.js","containers/UserForm/index.js","components/FormLoader.js","utils/parseDateFromUTCString.js","components/DetailSummary.js","constants/detailFieldConfigs.js","containers/UserProfile.js","components/PageNotFound.js","components/CardLinks.js","containers/RoleList/RoleContextMenuActions.js","containers/RoleList/RoleList.js","containers/RoleList/index.js","containers/RoleDetails.js","containers/GroupList/GroupContextMenuActions.js","containers/GroupList/GroupList.js","containers/GroupList/index.js","containers/GroupDetails.js","constants/routeConfig.js","components/SideNav.js","components/SectionLoader.js","components/SnackbarContainer.js","components/DialogContainer.js","components/SharingDialogContainer.js","App.js","serviceWorker.js","locales/index.js","index.js"],"names":["createHashHistory","initialState","type","items","listReducer","state","arguments","length","undefined","_ref","payload","message","LIST_FILTER","query","inactiveMonths","selfRegistered","invitationStatus","organisationUnits","INITIAL_SNACKBAR_STATE","show","props","INITIAL_DIALOG_STATE","content","INITIAL_SHARING_STATE","id","filterReducer","DEFAULT_FILTER","updateKey","updateValue","Object","objectSpread","defineProperty","pagerReducer","pager","currentItemReducer","currentUserReducer","snackbarReducer","dialogReducer","sharingReducer","popupsReducer","combineReducers","snackbar","dialog","sharing","middlewares","ReduxThunk","rootReducer","list","filter","currentItem","currentUser","popups","form","formReducer","createStore","applyMiddleware","apply","theme","spacing","Spacing","fontFamily","palette","primary1Color","blue500","primary2Color","blue700","primary3Color","blue100","accent1Color","orange500","accent2Color","grey100","accent3Color","orangeA200","textColor","darkBlack","alternateTextColor","white","canvasColor","borderColor","grey400","disabledColor","fade","muiTheme","getMuiTheme","assign","forms","minWidth","maxWidth","formInput","fontWeight","AppWithD2ContextAndTheme","getChildContext","d2","_this","render","react_default","a","createElement","MuiThemeProvider_default","children","Component","childContextTypes","PropTypes","object","USER_GROUP_LIST","USER_ROLE_LIST","concat","CURRENT_USER_ORG_UNITS_FIELDS","fields","ORG_UNITS_QUERY_CONFIG","paging","FIELDS","USER_LIST","USER_DETAILS","USER_GROUP_DETAILS","USER_ROLE_DETAILS","asArray","input","toArray","getNestedProp","propertyPathStr","parent","split","reduce","currentLevel","propName","style","clear","color","backgroundColor","padding","fontSize","width","ErrorMessage","introText","errorMessage","fallBackDefault","i18n","t","createHumanErrorMessage","messages","httpStatusCode","fallbackMsg","useMessage","map","_ref2","join","styles","outerWrap","paddingTop","paddingBottom","headerWrap","display","headerSpacer","flex","header","error","red500","errorText","marginLeft","SearchableGroupEditor","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","availableItemsReceivedHandler","response","_this$props","initiallyAssignedItems","returnModelsOnUpdate","_this$state","itemStore","assignedItemStore","modelLookup","Map","assignedItems","availableItems","item","set","text","displayName","name","value","setState","onAssignItems","assigned","update","onRemoveItems","indexOf","updateFilterText","event","filterText","target","Store","create","fetchErrorMsg","availableItemsQuery","_context","t0","assignedItemIds","_this2","_this$props2","onChange","onBlur","get","Promise","resolve","_this$props3","availableItemsHeader","assignedItemsHeader","assignedStyle","Heading_component","level","TextField_default","fullWidth","floatingLabelText","hintText","marginTop","_this$state2","components_ErrorMessage","GroupEditor_component","height","renderHeader","renderSearchInput","renderGroupEditor","info","warning","loaderDataSource","MenuItem_default","textAlign","CircularProgress_default","baseState","filteredItems","searchWarning","errorStyle","defaultAutoCompleteProps","AsyncAutoComplete","onAutoCompleteChange","autoCompleteText","getItems","asyncToGenerator","regenerator_default","mark","_callee","minCharLength","queryParam","filteredResults","wrap","prev","next","minCharCount","trashableQuery","makeTrashable","sent","model","stop","_x","onItemSelect","dataSourceItem","selectHandler","debounceTime","queryDebounceTime","debounce","trash","autoCompleteProps","mergedAutoCompleteProps","marginBottom","mergedProps","onUpdateInput","onNewRequest","searchText","dataSource","floatingLabelShrinkStyle","menuStyle","maxHeight","AutoComplete_default","defaultProps","wrapper","minHeight","position","scrollBox","overflowY","borderRadius","loader","top","left","transform","buttonStrip","buttonMargin","marginRight","SearchableOrgUnitTree","toggleSelectedOrgUnits","_","orgUnit","selectedOrgUnits","orgUnitIndex","getIndexOfOrgUnit","newOrgUnits","toConsumableArray","slice","selectAndShowFilteredOrgUnit","initiallyExpanded","removeLastPathSegment","clearSelection","defer","applySelection","confirmSelection","roots","orgUnitFilter","getInitiallyExpandedItems","orgUnits","expandedUnits","strippedPath","push","selectedUnit","find","unit","path","substr","lastIndexOf","updateObject","cancel","orgUnitType","headerText","wrapperStyle","selected","components_AsyncAutoComplete","api","queryOrgUnits","Paper_default","OrgUnitTreeMultipleRoots_component","onSelectClick","orgUnitsPathsToInclude","RaisedButton_default","label","primary","onClick","disabled","secondary","connect","orgUnitRootsSelector","AuthorityFilter","onSelectedOnlyChange","selectedOnly","onFilterChange","searchStr","onSearchStrChange","className","index_es","checked","onCheck","filterAuthorities","allAuthorities","selectedItemsLookup","searchChunks","keys","filtered","key","section","allowedBySearchStr","strToMatch","toLowerCase","some","chunk","matchesSearchStr","allowedBySelectedSetting","lookup","subItem","Boolean","matchesSelectedSetting","HighlightableText","main_default","highlightClassName","searchWords","autoEscape","textToHighlight","AuthorityItem","onChecked","authSubject","onCheckedCallBack","newProps","withLabel","context","empty","implicit","AuthorityEditor_HighlightableText","contextTypes","array","authorityGroupNames","EMPTY_GROUPED_AUTHORITIES","metadata","headers","apps","tracker","importExport","system","ALL_METADATA_SUFFIXES","EMPTY_GROUP_ITEM","IMPLICIT_GROUP_ITEM","AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE","Set","AUTHORITY_GROUPS","sortGroupedAuthorities","groupedAuthories","forEach","group","sortBy","hasNoGroupSuffix","auth","suffix","endsWith","createMetadataGroup","authSuffix","baseName","replace","genericAdd","externalAccess","hasImplicitAddPrivateAndDelete","has","publicAddAuth","privateAddAuth","deleteAuth","externalAccessAuth","delete","nameLookup","addToAuthoritySection","groupedAuthorities","groupKey","groupAuthorities","authorities","emptyGroupedAuthorities","groupedBase","startsWith","metadataGroup","AuthorityGroup","onAuthGroupChanged","onAuthChange","isPublicAdd","forceUpdate","publicAddSelected","_this$context","shouldSelect","authGroup","index","isPrivateAdd","implicitSelect","AuthorityEditor_AuthorityItem","func","isRequired","AuthoritySection","renderAuthRow","AuthorityEditor_AuthorityGroup","renderedItems","appendInterval","authSection","createBatchedRenderInterval","clearInterval","currSliceEnd","setInterval","currItems","sliceEnd","newItems","size","errorMsg","msg","renderInfoRow","renderLoaderRow","sectionKey","wrapperClassName","tableClassName","renderTableHead","renderContent","FilteredAuthoritySections","filteredAuthorities","allGroupedAuthorities","updateFilter","nextProps","updateFilteredAuthorities","all","AuthorityEditor_AuthoritySection","AuthorityEditor","filteredAuthSections","reduxFormOnBlur","reduxFormOnChange","authorityIds","initiallySelected","groupedAuthoritiesPromise","getGroupedAuthorities","handleAuthorityFetchError","total","newObject","oldObject","changes","nextState","propChanges","getChangedProperties","stateChanges","allChanges","includes","AuthorityEditor_AuthorityFilter","AuthorityEditor_FilteredAuthoritySections","ref","comp","checkbox","renderTextField","_ref$meta","meta","touched","asyncValidating","other","objectWithoutProperties","renderCheckbox","_ref3","Checkbox_default","renderSelectField","_ref4","_ref4$meta","options","SelectField_default","setTimeout","_ref5","i","primaryText","renderSearchableGroupEditor","_ref6","_ref6$meta","availableItemsLabel","assignedItemsLabel","initialValues","components_SearchableGroupEditor","renderSearchableOrgUnitTree","_ref7","components_SearchableOrgUnitTree","renderText","_ref8","FORM_NAME","NAME","USERS","CODE","MANAGED_GROUPS","STYLES","loaderWrap","fieldRenderer","isRequiredField","initialItemsSelector","pagerSelector","memoize","pageCount","page","pageSize","pageCalculationValue","startItem","endItem","currentlyShown","listSelector","groupMemberships","listType","modelDefinition","listMappings","user","userName","userCredentials","username","lastLogin","userRole","userGroup","currentUserIsMember","orgUnitsAsStringSelector","count","addInitialValueFrom","sourceObject","DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS","catDimensionConstraints","cogsDimensionConstraints","isUndefined","Array","isArray","userFormInitialValuesSelector","locales","attributeFields","INVITE","SET_PASSWORD","USER_PROPS","USER_CRED_PROPS","field","INTERFACE_LANGUAGE","ui","DATABASE_LANGUAGE","db","userGroupFormInitialValuesSelector","USER_GROUP_FIELDS","analyticsDimensionsRestrictionsSelector","catConstraints","cogsConstraints","shortItemSelector","systemOrgRoots","systemOrganisationUnitRoots","requestedOrgUnitRoots","fallBackOrgUnitRoots","DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS","orgUnitRoots","inviteUserValueSelector","formState","registeredFields","values","INVITE_USER","toggler","blue600","orgUnitTree","float","togglerWrap","additionalFieldsWrap","USERNAME","EXTERNAL_AUTH","PASSWORD","REPEAT_PASSWORD","OPEN_ID","LDAP_ID","USE_DB_LOCALE","BASE_CAPTION","fontStyle","INVITE_FIELDS","BASE_FIELDS","optionsSelector","paddingRight","paddingLeft","ADDITIONAL_FIELDS","userGroups","USER","USER_ROLE","USER_GROUP","EMAIL_ADDRESS_PATTERN","INTERNATIONAL_PHONE_NUMBER_PATTERN","DATE_PATTERN","LOWER_CASE_PATTERN","UPPER_CASE_PATTERN","DIGIT_PATTERN","SPECIAL_CHARACTER_PATTERN","code","hasValue","date","test","email","integer","isInteger","negativeInteger","parseInt","number","isNaN","password","allValues","inviteUser","shouldValidatePassword","passwordError","checkPasswordForErrors","positiveInteger","repeatPassword","required","requiredArray","whatsApp","x","parseFloat","hasDateInputSupport","notADateValue","USER_ATTRIBUTE_FIELD_PREFIX","NO_VALUE_OPTION","generateAttributeFields","attributes","userAttributeValues","attribute","valueType","mandatory","unique","optionSet","userAttribute","attributeValue","valueTypeProps","valueTypeMapping","OPTION_SET","option","TEXT","getValueTypeProps","isAttributeField","shouldBeUnique","attributeId","generateAttributeField","addUniqueAttributesToAsyncBlurFields","asyncBlurFields","parseAttributeValues","fieldTypeLookup","attributeValues","LONG_TEXT","multiLine","rows","rowsMax","DATE","floatingLabelFixed","document","setAttribute","browserHasDateInputSupport","fieldValidators","BOOLEAN","TRUE_ONLY","NUMBER","INTEGER","INTEGER_POSITIVE","INTEGER_NEGATIVE","getQueryFields","entityName","detailFields","formattedEntityName","snakeCase","toUpperCase","varName","createListRequestData","requestData","order","isSuperUser","userOrgUnits","includeChildren","ids","addValueAsProp","data","parseUserSaveData","isNewUser","userId","generateUid","userCredId","userModelOwnedProperties","getOwnedPropertyNames","userInfo","cred","catCogsDimensionConstraints","constraint","dimensionType","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","ownedPropName","err","return","parseLocaleUrl","val","mapLocale","locale","getRestrictedOrgUnits","store","getState","availableOrgUnits","isAvailableUnit","hasAvailableAncestor","ancestors","ancestor","appendUsernameToDisplayName","userModelCollection","parse200Error","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","typeReports","typeReport","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","objectReports","objectReport","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","errorReports","errorReport","Api","getD2","getContextPath","systemInfo","contextPath","getList","getCurrentUser","models","getItem","genericFind","propertyName","on","equals","replicateUser","url","d2Api","post","listConfig","then","getAvailableUserRoles","userRoles","canIssue","getAvailableDataAnalyticsDimensionRestrictions","dimensions","updateDisabledState","patch","disable2FA","twoFA","getSelectedAndAvailableLocales","encodeURIComponent","useDbLocaleOption","dbLocales","uiLocales","uiLocale","settings","dbLocale","slicedToArray","available","saveOrInviteUser","initialUiLocale","initialDbLocale","userData","postUrl","status","reject","localePromises","dbLocalePromise","getManagedUsers","getAvailableUserGroups","groupedAuths","request","systemAuthorities","initCurrentUser","getUserGroups","getUserRoles","getCurrentUserOrgUnits","getSystemOrgUnitRoots","_ref6$","dataViewOrganisationUnits","teiSearchOrganisationUnits","refreshCurrentUser","CurrentUserClass","constructor","me","userSettings","users","modelCollection","updateCurrentUserGroupMembership","groupId","deleteMembership","method","getInstance","getApi","entityType","resp","modelId","notEqual","userCollection","getAttributesWithValueAndId","createAction","createListActionSequence","dispatch","promise","silent","_x2","_x3","_x4","_getState","createAsyncActionSequence","_callee2","actionTypes","_context2","requested","received","errored","_x5","_x6","_x7","currentUserActions","clearItem","showSnackbar","hideSnackbar","showDialog","hideDialog","navigateTo","history","addValueRenderer","check_default","dataTableWrap","clearBoth","filterBar","headerBarPagination","headerBarFilterWrap","pagination","userSelect","List","executeEditIfAllowed","isContextActionAllowed","primaryAction","action","autoHideDuration","onActionClick","resetFilter","resetPager","incrementPage","decrementPage","_this$getPagerConfig","getPagerConfig","visibility","paginationProps","hasNextPage","hasPreviousPage","onNextPageClick","onPreviousPageClick","Pagination_component","_this$props4","FilterComponent","renderPagination","_this$props5","columns","contextMenuActions","contextMenuIcons","LoadingMask_component","DataTable_component","_this$props6","sectionName","newItemPath","renderHeaderBar","renderDataTable","FloatingActionButton_default","add_default","getNextPage","getPreviousPage","refresh","logout","logoutUrl","window","location","detectCurrentUserChanges","disable","deleteModel","interpolator","confirmMsg","successMsg","snackbarProps","onRemoveConfirm","openSharingSettings","asyncValidatorSwitch","_asyncValidatorSwitch","blurredField","priorErrors","newError","errors","asyncErrors","abrupt","USER_FORM","getUserNameError","GROUP_FORM","getGenericUniquenessError","getAttributeUniquenessError","asyncSingleFieldValidator","_callee3","_context3","_callee4","apiMethod","_context4","_callee5","newUserName","editingExistingUser","_context5","REPLICATE_USER_FORM","_callee6","fieldName","role","fieldValue","fieldDisplayName","fallBackMsg","_context6","capitalize","_callee7","_context7","isAttributeUnique","ReplicateUserForm","replicateSuccesHandler","replicateErrorHandler","submitting","pristine","valid","handleSubmit","disableSubmit","onSubmit","Field","component","validate","ReduxFormWrapped","reduxForm","asyncValidate","_x8","_asyncValidateUsername","isUserContextActionAllowed","access","_model$userCredential","read","userContextMenuIcons","_userContextMenuIcons","userContextMenuActions","Action","createActionsFromNames","profile","subscribe","edit","remove","replicate","components_ReplicateUserForm","onRequestClose","title","enable","disable_2fa","showDisable2FAConfirmation","baseMsg","onDisable2FAConfirm","shouldDisable","onDisableConfirm","_ref9","OrganisationUnitFilter","applyFilter","newSelectedOrgUnits","isEqual","fallbackOrgUnits","lineHeight","cursor","icon","right","textField","whiteSpace","overflow","textOverflow","OrganisationUnitInput","focusOrgUnitInput","refs","orgUnitInput","focus","showOrgTreeInDialog","components_OrganisationUnitFilter","contentStyle","open_in_new_default","material_ui_TextField_default","onFocus","inputStyle","QUERY","SearchFilter","updateSearchFilter","newValue","onQueryStrChange","localQueryStr","selfRegisteredStyle","UserFilter","month","months","fill","config","mergedConfig","includeEmpty","emptyLabel","DropDown_component","dropDownConfig","menuItems","createInactiveMonthsOptions","renderDropDown","_this3","_this4","checkedClassName","components_SearchFilter","components_OrganisationUnitInput","renderInactiveMonthsFilter","renderInvitationStatusFilter","renderSelfRegisteredFilter","UserList","components_List","IconLink","to","tooltip","iconButton","IconButton_default","iconClassName","react_router_dom","DESCRIPTION","AUTHORITIES","components_AuthorityEditor","RoleForm","saveRole","_objectSpread2","toJSON","backToList","renderFields","fieldConfig","conf","labelText","validators","ReduxFormWrappedRoleForm","_x9","_x10","_x11","_x12","_asyncValidateUniqueness","_initialValues","GroupForm","saveGroup","createIdValueObject","save","trashableAttributesPromise","initialize","getAttributes","console","validatorsToApply","isRequiredAttributeField","collectValidators","CONFIG","ReduxFormWrappedGroupForm","validatorLookup","CREATE_REQUIRED_FIELDS","INVITE_REQUIRED_FIELDS","EDIT_REQUIRED_FIELDS","UserForm","toggleShowMore","showMore","firstName","surname","trashableLocalePromise","getLabelText","externalAuthOnly","emailConfigured","filteredFields","exludeField","prepareGroupEditor","isEditingUser","fieldSpecificValidator","isRequiredStaticField","togglerText","keyboard_arrow_up_default","keyboard_arrow_down_default","FlatButton_default","submitText","renderCreateOrInviteField","renderBaseFields","renderAttributeFields","renderAdditionalFields","renderToggler","selector","formValueSelector","ReduxFormWrappedUserForm","main","heading","paper","FormLoader","match","params","initNewItem","formNotFoundErrorMsg","containers_UserForm","containers_RoleForm","containers_GroupForm","shortItem","baseItem","entityTxt","updateMsg","createMsg","link","kebabCase","plural","linkTooltip","components_IconLink","renderForm","newItem","parseDateFromUTCString","utcString","includeTime","keyUiLocale","Date","dateOptions","day","year","hour","minute","Intl","DateTimeFormat","format","raisedButton","cell","verticalAlign","valueCell","DetailSummary","routeId","containerElement","href","send_default","summaryObject","labelCellStyle","removeText","parseDate","parseDateTime","nestedPropselector","parseArrayAsCommaDelimitedString","baseRoute","backTooltip","editLink","editTooltip","edit_default","renderSendMessageBtn","renderPropertyFields","USER_PROFILE","UserProfile","components_DetailSummary","PageNotFound","pathname","cardStyle","margin","headerStyle","borderBottom","textStyle","actionStyle","CardLinks","renderCard","card","_this$context$d","canCreate","canDelete","canList","Card_default","CardHeader_default","CardText_default","description","CardActions_default","renderActionButtons","actionButtons","createPath","IconButton_IconButton_default","tooltipPosition","cards","SECTIONS","isRoleContextActionAllowed","manage","roleContextMenuIcons","_roleContextMenuIcons","roleContextMenuActions","show_details","sharing_settings","RoleList","RoleDetails","isGroupContextActionAllowed","groupContextMenuIcons","_groupContextMenuIcon","groupContextMenuActions","updateGroupMembership","join_group","leave_group","GroupList","GroupDetails","USER_SECTION","USER_ROLE_SECTION","USER_GROUP_SECTION","ROUTE_CONFIG","components_FormLoader","SideNav","changeSectionHandler","sections","sectionForPath","onLandingPage","Sidebar_component","onChangeSection","currentSection","withRouter","SectionLoader","setRouteConfig","pathHasAvailableSection","routeConfig","configItem","routes","userHasAuthorities","react_router","exact","strict","_this$routeConfig","components_SideNav","renderRoutes","open","defaults","bodyStyle","finalProps","Snackbar_default","dialogProps","Dialog_default","hideSharingDialog","d2_ui_sharing_dialog_default","App","es","components_AppWithD2ContextAndTheme","HeaderBar_default","appName","hashType","components_SectionLoader","components_SnackbarContainer","components_DialogContainer","components_SharingDialogContainer","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","moment","addResources","arTranslations","enTranslations","svTranslations","setDefaultNamespace","changeLanguage","configI18n","sources","add","baseUrl","process","initConfig","schemas","getUserSettings","init","setupD2","rootEl","getElementById","src_App","URL","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ccb8e609.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\n\n/**\n * Creates and exports an empty hash history object that will be used by the Router\n * This history object can be imported and addressed directly outside of components\n * For example, it is used by navigateTo in ../utils/index\n * @name history\n * @memberof module:utils\n */\n\nexport default createHashHistory()\n","import {\n    LIST_REQUESTED,\n    LIST_RECEIVED,\n    LIST_ERRORED,\n} from '../constants/actionTypes'\n\nconst initialState = {\n    type: null,\n    items: null,\n}\n\n/**\n * Reducer to control the list state\n * @memberof module:reducers\n * @param {Object} state - The list state\n * @param {String|null} state.type=null - The list type, either one of 'user', 'userGroup', 'userRole', or `null` after error.\n * @param {Object|String|null} state.items=null - Can have the following forms:\n * - A d2 ModelCollection instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\nconst listReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case LIST_REQUESTED:\n            return {\n                type: payload,\n                items: null,\n            }\n        case LIST_RECEIVED:\n            return state.type === payload.type\n                ? {\n                      type: payload.type,\n                      items: payload.items,\n                  }\n                : state\n        case LIST_ERRORED:\n            return {\n                type: null,\n                items: payload.message,\n            }\n        default:\n            return state\n    }\n}\n\nexport default listReducer\n","// LISTS\nexport const LIST_REQUESTED = 'LIST_REQUESTED'\nexport const LIST_RECEIVED = 'LIST_RECEIVED'\nexport const LIST_ERRORED = 'LIST_ERRORED'\n\n// ITEMS\nexport const CLEAR_ITEM = 'CLEAR_ITEM'\nexport const INIT_NEW_ITEM = 'INIT_NEW_ITEM'\nexport const ITEM_REQUESTED = 'ITEM_REQUESTED'\nexport const ITEM_RECEIVED = 'ITEM_RECEIVED'\nexport const ITEM_ERRORED = 'ITEM_ERRORED'\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR'\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR'\nexport const SHOW_DIALOG = 'SHOW_DIALOG'\nexport const HIDE_DIALOG = 'HIDE_DIALOG'\nexport const SHOW_SHARING_DIALOG = 'SHOW_SHARING_DIALOG'\nexport const HIDE_SHARING_DIALOG = 'HIDE_SHARING_DIALOG'\n\n// PAGER\nexport const PAGER_RESET = 'PAGER_RESET'\n\n// FILTER\nexport const FILTER_UPDATED = 'FILTER_UPDATED'\nexport const FILTER_RESET = 'FILTER_RESET'\n\n// CURRENT USER\nexport const CURRENT_USER_REQUESTED = 'CURRENT_USER_REQUESTED'\nexport const CURRENT_USER_RECEIVED = 'CURRENT_USER_RECEIVED'\nexport const CURRENT_USER_ERRORED = 'CURRENT_USER_ERRORED'\n","export const PAGE_SIZE = 50\nexport const PAGE = 1\n\nexport const LIST_FILTER = {\n    query: '', // string\n    inactiveMonths: null, // Number\n    selfRegistered: false, // Bool\n    invitationStatus: null, // 'all' || 'expired',\n    organisationUnits: [],\n}\n\nexport const INITIAL_SNACKBAR_STATE = {\n    show: false,\n    props: {\n        message: '',\n    },\n}\n\nexport const INITIAL_DIALOG_STATE = {\n    show: false,\n    props: {},\n    content: null,\n}\n\nexport const INITIAL_SHARING_STATE = {\n    show: false,\n    id: null,\n    type: null,\n}\n","import { FILTER_UPDATED, FILTER_RESET } from '../constants/actionTypes'\nimport { LIST_FILTER as DEFAULT_FILTER } from '../constants/defaults'\n\n/**\n * Reducer to control the filter state that is used to GET filtered lists\n * @memberof module:reducers\n * @param {Object} state - Object containing values\n * @param {String} state.query='' - Query string to filter results by\n * @param {Number|null} state.inactiveMonths=null - Filter by number of inactive months (USER only)\n * @param {Bool} state.selfRegistered=false - Show self registered users only (USER only)\n * @param {String|null} state.invitationStatus=null - Filter by invitation status, possible values: 'all' or 'expired', (USER only)\n * @param {Array} state.organisationUnits=[]] - IDs of the organisation units to filter by (USER only)\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @param {String} action.payload.updateKey - Filter property key to update\n * @param {*} action.payload.updateValue - Value to set property to\n * @returns {Object} - A new filter state object\n * @function\n */\nconst filterReducer = (state = DEFAULT_FILTER, { type, payload }) => {\n    switch (type) {\n        case FILTER_UPDATED:\n            const { updateKey, updateValue } = payload\n            return {\n                ...state,\n                [updateKey]: updateValue,\n            }\n        case FILTER_RESET:\n            return { ...DEFAULT_FILTER }\n        default:\n            return state\n    }\n}\n\nexport default filterReducer\n","import { LIST_RECEIVED, PAGER_RESET } from '../constants/actionTypes'\n\n/**\n * Reducer to control the pager state. The pager state is used as a query parameter when fetching lists from the API.\n * @memberof module:reducers\n * @param {Object|null} state=null - Either an instance of a d2 Pager, or null incase the pager is being reset.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Input for the new state\n * @returns {Object|null} - A new state object\n * @function\n */\nconst pagerReducer = (state = null, { type, payload }) => {\n    switch (type) {\n        case PAGER_RESET:\n            return null\n        case LIST_RECEIVED:\n            return payload.items.pager\n        default:\n            return state\n    }\n}\n\nexport default pagerReducer\n","import {\n    CLEAR_ITEM,\n    INIT_NEW_ITEM,\n    ITEM_REQUESTED,\n    ITEM_RECEIVED,\n    ITEM_ERRORED,\n} from '../constants/actionTypes'\n\n/**\n * @module reducers\n */\n\n/**\n * Reducer to control the current item state\n * @memberof module:reducers\n * @param {Object|String|null} state=null - Can have the following forms:\n * - A d2 model instance of type User, UserGroup, or UserRole\n * - A string in case of an error\n * - `null` while the API request is pending.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object|String|null} - A new state object\n * @function\n */\nconst currentItemReducer = (state = null, { type, payload }) => {\n    switch (type) {\n        case CLEAR_ITEM:\n        case ITEM_REQUESTED:\n            return null\n        case INIT_NEW_ITEM:\n        case ITEM_RECEIVED:\n            return payload\n        case ITEM_ERRORED:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport default currentItemReducer\n","import {\n    CURRENT_USER_REQUESTED,\n    CURRENT_USER_RECEIVED,\n    CURRENT_USER_ERRORED,\n} from '../constants/actionTypes'\n\n/**\n * Reducer to control the current user state, initialized from the sectionLoader,\n * Can also be reloaded if certain changes take place that influence the current user.\n * @memberof module:reducers\n * @param {Object|null} state=null - An object containing relevant properties of the current user.\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object|String|null} action.payload - Input for the new state\n * @returns {Object} - A new state object\n * @function\n */\nconst currentUserReducer = (state = null, { type, payload }) => {\n    switch (type) {\n        case CURRENT_USER_REQUESTED:\n            return null\n        case CURRENT_USER_RECEIVED:\n        case CURRENT_USER_ERRORED:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport default currentUserReducer\n","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from '../../constants/actionTypes'\nimport { INITIAL_SNACKBAR_STATE } from '../../constants/defaults'\n\n/**\n * Reducer to show / hide the SnackbarContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the Snackbar\n * @param {Object} state.props={message:''} - Props to pass to the MUI Snackbar component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - Props for the new state\n * @returns {Object} - A new state object\n * @function\n */\nconst snackbarReducer = (state = INITIAL_SNACKBAR_STATE, { type, payload }) => {\n    switch (type) {\n        case SHOW_SNACKBAR:\n            return {\n                show: true,\n                props: payload,\n            }\n        case HIDE_SNACKBAR:\n            return { ...INITIAL_SNACKBAR_STATE }\n        default:\n            return state\n    }\n}\n\nexport default snackbarReducer\n","import { SHOW_DIALOG, HIDE_DIALOG } from '../../constants/actionTypes'\nimport { INITIAL_DIALOG_STATE } from '../../constants/defaults'\n\n/**\n * Reducer to show / hide the DialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the dialog\n * @param {Object} state.props={} - Props to pass to the MUI Dialog component\n * @param {Object|null} state.content=null - The content to be rendered by the MUI Dialog component\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The content and props for the new state\n * @returns {Object} - A new state object\n * @function\n */\nconst dialogReducer = (state = INITIAL_DIALOG_STATE, { type, payload }) => {\n    switch (type) {\n        case SHOW_DIALOG:\n            return {\n                show: true,\n                ...payload,\n            }\n        case HIDE_DIALOG:\n            return { ...INITIAL_DIALOG_STATE }\n        default:\n            return state\n    }\n}\n\nexport default dialogReducer\n","import {\n    SHOW_SHARING_DIALOG,\n    HIDE_SHARING_DIALOG,\n} from '../../constants/actionTypes'\nimport { INITIAL_SHARING_STATE } from '../../constants/defaults'\n\n/**\n * Reducer to show / hide the SharingDialogContainer\n * @memberof module:reducers/popups\n * @param {Object} state\n * @param {Boolean} state.show=false - Flag to show or hide the SharingDialog\n * @param {String|null} state.id=null - The model instance ID for which to open the sharing settings\n * @param {String|null} state.type=null - The model instance name\n * @param {Object} action\n * @param {String} action.type - Indicator of action to switch to\n * @param {Object} action.payload - The ID and type for the new state\n * @returns {Object} - A new state object\n * @function\n */\nconst sharingReducer = (state = INITIAL_SHARING_STATE, { type, payload }) => {\n    switch (type) {\n        case SHOW_SHARING_DIALOG:\n            return {\n                show: true,\n                ...payload,\n            }\n        case HIDE_SHARING_DIALOG:\n            return { ...INITIAL_SHARING_STATE }\n        default:\n            return state\n    }\n}\n\nexport default sharingReducer\n","import { combineReducers } from 'redux'\nimport snackbarReducer from './snackbar'\nimport dialogReducer from './dialog'\nimport sharingReducer from './sharing'\n\n/**\n * @module reducers/popups\n */\nconst popupsReducer = combineReducers({\n    snackbar: snackbarReducer,\n    dialog: dialogReducer,\n    sharing: sharingReducer,\n})\n\nexport default popupsReducer\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { reducer as formReducer } from 'redux-form'\nimport listReducer from './reducers/list'\nimport filterReducer from './reducers/filter'\nimport pagerReducer from './reducers/pager'\nimport currentItemReducer from './reducers/currentItem'\nimport currentUserReducer from './reducers/currentUser'\nimport popupsReducer from './reducers/popups/'\n\nconst middlewares = [ReduxThunk]\n\nconst shouldLog = false\n\nif (process.env.NODE_ENV === 'development' && shouldLog) {\n    middlewares.push(logger)\n}\n\nconst rootReducer = combineReducers({\n    list: listReducer,\n    filter: filterReducer,\n    pager: pagerReducer,\n    currentItem: currentItemReducer,\n    currentUser: currentUserReducer,\n    popups: popupsReducer,\n    form: formReducer,\n})\n\nexport default createStore(rootReducer, applyMiddleware(...middlewares))\n","import Spacing from 'material-ui/styles/spacing'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\n\nimport {\n    blue100,\n    blue500,\n    blue700,\n    grey100,\n    grey400,\n    orange500,\n    orangeA200,\n    darkBlack,\n    white,\n} from 'material-ui/styles/colors'\nimport { fade } from 'material-ui/utils/colorManipulator'\n\nconst theme = {\n    spacing: Spacing,\n    fontFamily: 'Roboto, sans-serif',\n    palette: {\n        primary1Color: blue500,\n        primary2Color: blue700,\n        primary3Color: blue100,\n        accent1Color: orange500,\n        accent2Color: grey100,\n        accent3Color: orangeA200,\n        textColor: darkBlack,\n        alternateTextColor: white,\n        canvasColor: white,\n        borderColor: grey400,\n        disabledColor: fade(darkBlack, 0.3),\n    },\n}\n\nconst muiTheme = getMuiTheme(theme)\n\nexport default Object.assign({}, muiTheme, {\n    forms: {\n        minWidth: 350,\n        maxWidth: 750,\n    },\n    formInput: {\n        fontWeight: 100,\n    },\n})\n","import React, { Component } from 'react'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport PropTypes from 'prop-types'\nimport theme from '../theme'\n\n/**\n * Component that adds d2 to the context and applies the dhis2 theme\n * @param {Object} props\n * @param {Object} props.d2 - The d2 instance to add to the context of children\n * @class\n */\nclass AppWithD2ContextAndTheme extends Component {\n    getChildContext = () => ({\n        d2: this.props.d2,\n    })\n\n    render = () => (\n        <MuiThemeProvider muiTheme={theme}>\n            {this.props.children}\n        </MuiThemeProvider>\n    )\n}\n\nAppWithD2ContextAndTheme.childContextTypes = {\n    d2: PropTypes.object,\n}\n\nAppWithD2ContextAndTheme.propTypes = {\n    d2: PropTypes.object.isRequired,\n    children: PropTypes.object.isRequired,\n}\n\nexport default AppWithD2ContextAndTheme\n","// LISTS\nexport const USER_LIST = [\n    'displayName',\n    'id',\n    'access',\n    'userCredentials[username,disabled,lastLogin,twoFA]',\n    'teiSearchOrganisationUnits[id,path]',\n]\nexport const USER_GROUP_LIST = [\n    'displayName',\n    'id',\n    'access',\n    'user[displayName,id]',\n    'publicAccess',\n    'userGroupAccesses',\n]\nexport const USER_ROLE_LIST = [...USER_GROUP_LIST, 'description']\n\n// DETAILS\nexport const USER_DETAILS = [\n    ':owner',\n    'access',\n    'displayName',\n    'userGroups',\n    'organisationUnits[id,displayName,path]',\n    'dataViewOrganisationUnits[id,displayName,path]',\n    'userCredentials[id,username,lastLogin,externalAuth,userRoles[id,displayName],cogsDimensionConstraints[id,displayName,dimensionType],catDimensionConstraints[id,displayName,dimensionType],openId,ldapId]',\n    'teiSearchOrganisationUnits[id,path]',\n    'whatsApp',\n    'facebookMessenger',\n    'skype',\n    'telegram',\n    'twitter',\n]\n\nexport const USER_ROLE_DETAILS = [\n    'id',\n    'access',\n    'displayName',\n    'name',\n    'users',\n    'description',\n    'authorities',\n]\n\nexport const USER_GROUP_DETAILS = [\n    'id',\n    'code',\n    'access',\n    'displayName',\n    'name',\n    'users',\n    'managedGroups',\n    'attributeValues',\n]\n\nexport const CURRENT_USER_ORG_UNITS_FIELDS = {\n    fields: [\n        'organisationUnits[id,path,displayName,children::isNotEmpty]',\n        'dataViewOrganisationUnits[id,path,displayName,children::isNotEmpty]',\n        'teiSearchOrganisationUnits[id,path,displayName,children::isNotEmpty]',\n    ],\n}\n\nexport const ORG_UNITS_QUERY_CONFIG = {\n    paging: false,\n    // userDataViewFallback: true\n    fields: ['id', 'path', 'displayName', 'children::isNotEmpty', 'ancestors'],\n}\n\nexport const USER_GROUP_QUERY_CONFIG = {\n    paging: false,\n    fields: ['id', 'displayName'],\n}\n\nconst FIELDS = {\n    USER_LIST,\n    USER_GROUP_LIST,\n    USER_ROLE_LIST,\n    USER_DETAILS,\n    USER_GROUP_DETAILS,\n    USER_ROLE_DETAILS,\n}\nexport default FIELDS\n","/**\n * @module utils\n */\n\n/**\n * It is not always clear when d2 will return an array or a ModelCollection instance.\n * This function is used to work with both in the same way.\n * @param {Array|Object} input - Either an array of d2 model instances or a ModelCollection instance\n * @returns {Array} An array of model instances\n * @memberof module:utils\n * @function\n */\nconst asArray = input => {\n    if (!input) {\n        return []\n    }\n    return typeof input.toArray === 'function' ? input.toArray() : input\n}\n\nexport default asArray\n","/**\n * Helper function for form components (UserForm, GroupForm, RoleForm).\n * This function can receive a string representation of a property path, i.e. 'userCredentials.username'\n * and an object to pick from and will return the nested property's value.\n * This works recursively so it can be as many levels deep as required.\n * @param {String} propertyPathStr - String representation of a property path\n * @param {*} parent - The base object to pick from\n * @returns {*} The value of the nested property\n * @memberof module:utils\n * @function\n */\nconst getNestedProp = (propertyPathStr, parent) => {\n    return propertyPathStr.split('.').reduce((currentLevel, propName) => {\n        return currentLevel && currentLevel[propName]\n            ? currentLevel[propName]\n            : null\n    }, parent)\n}\n\nexport default getNestedProp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst style = {\n    clear: 'both',\n    color: '#c33017',\n    backgroundColor: '#ffe3de',\n    padding: '1.5rem 1.5rem 1rem',\n    fontSize: '1rem',\n    width: '100%',\n}\n\n/**\n * A simple component that can display an error message\n * @class\n */\nconst ErrorMessage = ({ introText, errorMessage }) => (\n    <div style={style}>\n        {introText}\n        <pre>{errorMessage}</pre>\n    </div>\n)\n\nErrorMessage.propTypes = {\n    introText: PropTypes.string.isRequired,\n    errorMessage: PropTypes.string.isRequired,\n}\n\nexport default ErrorMessage\n","import i18n from '@dhis2/d2-i18n'\n/**\n * It is preffered to show the error message from the server it is a 401-499 code\n * @param {Object} error - The error object\n * @param {Number} error.httpStatusCode - The error status code\n * @param {Number} error.message - The error message\n * @param {String} fallbackMsg - The message to show in case the actual message is\n * likely to be useless for normal users\n * @memberof module:utils\n * @function\n */\nconst fallBackDefault = i18n.t(\n    'Something went wrong when processing your request.'\n)\n\nconst createHumanErrorMessage = (\n    { message, messages, httpStatusCode },\n    fallbackMsg = fallBackDefault\n) => {\n    const useMessage =\n        (httpStatusCode && httpStatusCode >= 400 && httpStatusCode < 500) ||\n        (!httpStatusCode && messages && messages.length > 0)\n\n    if (!message && messages && messages.length > 0) {\n        message = messages.map(({ message }) => message).join(', ')\n    }\n\n    return useMessage ? message : fallbackMsg\n}\n\nexport default createHumanErrorMessage\n","import React, { Component } from 'react'\nimport GroupEditor from 'd2-ui/lib/group-editor/GroupEditor.component'\nimport Store from 'd2-ui/lib/store/Store'\nimport PropTypes from 'prop-types'\nimport { red500 } from 'material-ui/styles/colors'\nimport TextField from 'material-ui/TextField/TextField'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport asArray from '../utils/asArray'\nimport ErrorMessage from './ErrorMessage'\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage'\nimport i18n from '@dhis2/d2-i18n'\n\nconst styles = {\n    outerWrap: {\n        paddingTop: 0,\n        paddingBottom: '2.5rem',\n    },\n    headerWrap: {\n        display: 'flex',\n    },\n    headerSpacer: {\n        flex: '0 0 120px',\n    },\n    header: {\n        flex: '1 0 120px',\n        paddingBottom: 0,\n        fontSize: '1.2rem',\n    },\n    error: {\n        color: red500,\n    },\n    errorText: {\n        fontSize: '0.8rem',\n        marginLeft: '0.8rem',\n    },\n}\n\n/**\n * A component that renders the d2-ui GroupEditor with a search input above it.\n * It can fetch its own items and has been made compliant with redux form.\n * On update it can return an array of either IDs or d2-models\n */\nclass SearchableGroupEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            itemStore: Store.create(),\n            assignedItemStore: Store.create(),\n            filterText: '',\n            fetchErrorMsg: null,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const availableItems = await this.props.availableItemsQuery()\n            this.availableItemsReceivedHandler(availableItems)\n        } catch (error) {\n            const fetchErrorMsg = createHumanErrorMessage(\n                error,\n                i18n.t('Could not load available items')\n            )\n            this.setState({ fetchErrorMsg })\n        }\n    }\n\n    availableItemsReceivedHandler = response => {\n        // On update we want to be able to return an array of IDs or models\n        const { initiallyAssignedItems, returnModelsOnUpdate } = this.props\n        const { itemStore, assignedItemStore } = this.state\n\n        if (returnModelsOnUpdate) {\n            this.modelLookup = new Map()\n        }\n\n        const assignedItems = asArray(initiallyAssignedItems).map(\n            ({ id }) => id\n        )\n        const availableItems = asArray(response).map(item => {\n            if (returnModelsOnUpdate) {\n                this.modelLookup.set(item.id, item)\n            }\n            const text = item.displayName || item.name\n            return {\n                value: item.id,\n                text: text,\n            }\n        })\n\n        itemStore.setState(availableItems)\n        assignedItemStore.setState(assignedItems)\n    }\n\n    onAssignItems = items => {\n        const { assignedItemStore } = this.state\n        const assigned = assignedItemStore.state.concat(items)\n\n        return this.update(assigned)\n    }\n\n    onRemoveItems = items => {\n        const { assignedItemStore } = this.state\n        const assigned = assignedItemStore.state.filter(\n            item => items.indexOf(item) === -1\n        )\n\n        return this.update(assigned)\n    }\n\n    update(assignedItemIds) {\n        const { onChange, returnModelsOnUpdate, onBlur } = this.props\n        const { assignedItemStore } = this.state\n        const assignedItems = returnModelsOnUpdate\n            ? assignedItemIds.map(id => this.modelLookup.get(id))\n            : assignedItemIds\n\n        assignedItemStore.setState(assignedItemIds)\n        onChange(assignedItems)\n        // Also call onBlur if this is available. In a redux-form the component will be 'touched' by it\n        onBlur && onBlur()\n        return Promise.resolve()\n    }\n\n    updateFilterText = event => {\n        this.setState({ filterText: event.target.value })\n    }\n\n    renderHeader() {\n        const {\n            availableItemsHeader,\n            assignedItemsHeader,\n            errorText,\n        } = this.props\n        const assignedStyle = errorText\n            ? { ...styles.header, ...styles.error }\n            : styles.header\n\n        return (\n            <div style={styles.headerWrap}>\n                <Heading level={4} style={styles.header}>\n                    {availableItemsHeader}\n                </Heading>\n                <div style={styles.headerSpacer} />\n                <Heading level={4} style={assignedStyle}>\n                    {assignedItemsHeader}\n                    {errorText ? (\n                        <span style={styles.errorText}>{errorText}</span>\n                    ) : null}\n                </Heading>\n            </div>\n        )\n    }\n\n    renderSearchInput() {\n        return (\n            <TextField\n                fullWidth={true}\n                type=\"search\"\n                onChange={this.updateFilterText}\n                value={this.state.filterText}\n                floatingLabelText={i18n.t('Filter')}\n                hintText={i18n.t('Filter available and selected items')}\n                style={{ marginTop: '-16px' }}\n            />\n        )\n    }\n    renderGroupEditor() {\n        const {\n            itemStore,\n            assignedItemStore,\n            filterText,\n            fetchErrorMsg,\n        } = this.state\n\n        if (fetchErrorMsg) {\n            const introText = i18n.t(\n                'There was a problem displaying the GroupEditor'\n            )\n            return (\n                <ErrorMessage\n                    introText={introText}\n                    errorMessage={fetchErrorMsg}\n                />\n            )\n        }\n\n        return (\n            <GroupEditor\n                itemStore={itemStore}\n                assignedItemStore={assignedItemStore}\n                onAssignItems={this.onAssignItems}\n                onRemoveItems={this.onRemoveItems}\n                height={250}\n                filterText={filterText}\n            />\n        )\n    }\n\n    render() {\n        return (\n            <div style={styles.outerWrap}>\n                {this.renderHeader()}\n                {this.renderSearchInput()}\n                {this.renderGroupEditor()}\n            </div>\n        )\n    }\n}\n\nSearchableGroupEditor.propTypes = {\n    availableItemsQuery: PropTypes.func.isRequired,\n    initiallyAssignedItems: PropTypes.oneOfType([\n        PropTypes.object.isRequired,\n        PropTypes.array.isRequired,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    availableItemsHeader: PropTypes.string.isRequired,\n    assignedItemsHeader: PropTypes.string.isRequired,\n    returnModelsOnUpdate: PropTypes.bool,\n    errorText: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n    onBlur: PropTypes.func,\n}\n\nexport default SearchableGroupEditor\n","import React, { Component } from 'react'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport AutoComplete from 'material-ui/AutoComplete'\nimport MenuItem from 'material-ui/MenuItem'\nimport { orange500, blue500, red500 } from 'material-ui/styles/colors'\nimport i18n from '@dhis2/d2-i18n'\nimport makeTrashable from 'trashable'\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage'\nimport debounce from 'lodash.debounce'\nimport PropTypes from 'prop-types'\nimport asArray from '../utils/asArray'\n\nconst styles = {\n    error: {\n        info: {\n            color: blue500,\n        },\n        warning: {\n            color: orange500,\n        },\n        error: {\n            color: red500,\n        },\n    },\n}\n\nconst loaderDataSource = [\n    {\n        text: 'loading...',\n        value: (\n            <MenuItem style={{ textAlign: 'center' }}>\n                <CircularProgress style={{ marginTop: '12px' }} />\n            </MenuItem>\n        ),\n    },\n]\n\nconst baseState = {\n    filteredItems: [],\n    searchWarning: null,\n    errorStyle: styles.error.info,\n}\n\nconst defaultAutoCompleteProps = {\n    floatingLabelText: i18n.t('Search'),\n    hintText: i18n.t('Enter search term'),\n    fullWidth: true,\n    type: 'search',\n    filter: () => true,\n}\n\n/**\n * Generic component that renders a MUI AutoComplete. It can execute an async query and show a list of results.\n * Which query to execute and what happens when a list item is clicked should be defined in the parent component.\n */\nclass AsyncAutoComplete extends Component {\n    constructor(props) {\n        super(props)\n        const debounceTime = props.queryDebounceTime || 375\n        this.state = { ...baseState }\n        this.getItems = debounce(this.getItems, debounceTime)\n        this.trashableQuery = null\n    }\n\n    componentWillUnmount() {\n        this.trashableQuery && this.trashableQuery.trash()\n    }\n\n    onAutoCompleteChange = value => {\n        this.setState({ autoCompleteText: value })\n        this.getItems(value)\n    }\n\n    getItems = async value => {\n        const { minCharLength, query, queryParam } = this.props\n\n        if (!value || value.length < minCharLength) {\n            // Don't query if too few characters were entered\n            const searchWarning = value\n                ? i18n.t(\n                      'Please enter at least {{ minCharCount }} characters',\n                      {\n                          minCharCount: minCharLength,\n                      }\n                  )\n                : null\n            this.setState({ ...baseState, searchWarning })\n        } else {\n            // Set loading state\n            this.setState({ ...baseState, filteredItems: loaderDataSource })\n\n            // Then query\n            this.trashableQuery = makeTrashable(query(value, queryParam))\n            try {\n                let filteredResults = await this.trashableQuery\n                filteredResults = asArray(filteredResults)\n                if (filteredResults.length > 0) {\n                    // Display results if any were returned\n                    const filteredItems = filteredResults.map(model => ({\n                        text: model.displayName,\n                        value: model,\n                    }))\n                    this.setState({\n                        ...baseState,\n                        filteredItems: filteredItems,\n                    })\n                } else {\n                    // Otherwise show warning\n                    this.setState({\n                        ...baseState,\n                        errorStyle: styles.error.warning,\n                        searchWarning: i18n.t('No matches found'),\n                    })\n                }\n            } catch (error) {\n                // Show error on input\n                this.setState({\n                    ...baseState,\n                    errorStyle: styles.error.warning,\n                    searchWarning: createHumanErrorMessage(\n                        error,\n                        i18n.t(\n                            'There was a problem retreiving your search results'\n                        )\n                    ),\n                })\n            }\n        }\n    }\n\n    onItemSelect = dataSourceItem => {\n        const { selectHandler } = this.props\n        this.setState({ autoCompleteText: '' })\n        selectHandler(dataSourceItem)\n    }\n\n    render() {\n        const { autoCompleteProps } = this.props\n        const mergedAutoCompleteProps = {\n            ...defaultAutoCompleteProps,\n            ...autoCompleteProps,\n        }\n        const {\n            filteredItems,\n            searchWarning,\n            errorStyle,\n            autoCompleteText,\n        } = this.state\n        const marginBottom = searchWarning ? 0 : 28\n        const mergedProps = {\n            ...mergedAutoCompleteProps,\n            onUpdateInput: this.onAutoCompleteChange,\n            onNewRequest: this.onItemSelect,\n            searchText: autoCompleteText,\n            dataSource: filteredItems,\n            errorText: searchWarning,\n            errorStyle: errorStyle,\n            floatingLabelShrinkStyle: errorStyle,\n            style: { marginBottom: marginBottom },\n            menuStyle: { maxHeight: '600px' },\n        }\n\n        return <AutoComplete {...mergedProps} />\n    }\n}\n\nAsyncAutoComplete.propTypes = {\n    queryDebounceTime: PropTypes.number,\n    minCharLength: PropTypes.number,\n    query: PropTypes.func.isRequired,\n    queryParam: PropTypes.any,\n    selectHandler: PropTypes.func.isRequired,\n    autoCompleteProps: PropTypes.object,\n}\n\nAsyncAutoComplete.defaultProps = {\n    queryDebounceTime: 375,\n    minCharLength: 3,\n}\n\nexport default AsyncAutoComplete\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport OrgUnitTreeMultipleRoots from 'd2-ui/lib/org-unit-tree/OrgUnitTreeMultipleRoots.component'\nimport Paper from 'material-ui/Paper'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport AsyncAutoComplete from './AsyncAutoComplete'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport i18n from '@dhis2/d2-i18n'\nimport defer from 'lodash.defer'\nimport PropTypes from 'prop-types'\nimport api from '../api'\nimport { orgUnitRootsSelector } from '../selectors'\n\nconst styles = {\n    wrapper: {\n        minHeight: '300px',\n        maxHeight: '60vh',\n        position: 'relative',\n    },\n    scrollBox: {\n        position: 'relative',\n        marginTop: '-12px',\n        maxHeight: 'calc(60vh - 154px)',\n        minHeight: 'calc(300px - 154px)',\n        overflowY: 'auto',\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        borderRadius: '2px',\n    },\n    loader: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    buttonStrip: {\n        paddingTop: '16px',\n        height: '36px',\n    },\n    buttonMargin: {\n        marginRight: '8px',\n    },\n    header: {\n        paddingBottom: 0,\n        fontSize: '1.2rem',\n        marginBottom: '-16px',\n    },\n}\n\n/**\n * Renders a d2-ui OrgUnitTreeMultipleRoots with an asyncAutoComplete above it and a button strip below\n * This component will only show buttons if you pass it a confirmSelection (func) property\n * It has been made compliant with redux form\n */\nclass SearchableOrgUnitTree extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roots: null,\n            selectedOrgUnits: [...props.selectedOrgUnits],\n            orgUnitFilter: null,\n            initiallyExpanded: this.getInitiallyExpandedItems(\n                props.selectedOrgUnits\n            ),\n        }\n    }\n\n    getInitiallyExpandedItems(orgUnits) {\n        return orgUnits.reduce((expandedUnits, orgUnit) => {\n            const strippedPath = this.removeLastPathSegment(orgUnit)\n            if (strippedPath) {\n                expandedUnits.push(strippedPath)\n            }\n            return expandedUnits\n        }, [])\n    }\n\n    getIndexOfOrgUnit(orgUnit) {\n        const { selectedOrgUnits } = this.state\n        const selectedUnit = selectedOrgUnits.find(\n            unit => unit.path === orgUnit.path\n        )\n        return selectedOrgUnits.indexOf(selectedUnit)\n    }\n\n    removeLastPathSegment({ path }) {\n        return path.substr(0, path.lastIndexOf('/'))\n    }\n\n    update(selectedOrgUnits, initiallyExpanded) {\n        const { onChange } = this.props\n        const updateObject = initiallyExpanded\n            ? { selectedOrgUnits, initiallyExpanded }\n            : { selectedOrgUnits }\n\n        if (onChange) {\n            onChange(selectedOrgUnits.map(unit => unit.id))\n        }\n\n        this.setState(updateObject)\n    }\n\n    toggleSelectedOrgUnits = (_, orgUnit) => {\n        const { selectedOrgUnits } = this.state\n        const orgUnitIndex = this.getIndexOfOrgUnit(orgUnit)\n        const newOrgUnits =\n            orgUnitIndex === -1\n                ? [...selectedOrgUnits, orgUnit]\n                : [\n                      ...selectedOrgUnits.slice(0, orgUnitIndex),\n                      ...selectedOrgUnits.slice(orgUnitIndex + 1),\n                  ]\n\n        this.update(newOrgUnits, [])\n    }\n\n    selectAndShowFilteredOrgUnit = dataSourceItem => {\n        const orgUnit = dataSourceItem.value\n        const { selectedOrgUnits } = this.state\n        const initiallyExpanded = [this.removeLastPathSegment(orgUnit)]\n        const newOrgUnits = [...selectedOrgUnits, orgUnit]\n\n        this.update(newOrgUnits, initiallyExpanded)\n    }\n\n    clearSelection = () => {\n        this.update([])\n        defer(this.applySelection)\n    }\n\n    applySelection = () => {\n        const { selectedOrgUnits } = this.state\n        const { confirmSelection } = this.props\n        confirmSelection(selectedOrgUnits)\n    }\n\n    render() {\n        const {\n            selectedOrgUnits,\n            initiallyExpanded,\n            orgUnitFilter,\n        } = this.state\n        const {\n            roots,\n            confirmSelection,\n            cancel,\n            orgUnitType,\n            headerText,\n            wrapperStyle,\n        } = this.props\n        const selected = selectedOrgUnits.map(unit => unit.path)\n        const autoCompleteProps = {\n            floatingLabelText: i18n.t('Search'),\n            hintText: i18n.t('Enter search term'),\n            fullWidth: true,\n        }\n\n        return (\n            <div style={{ ...styles.wrapper, ...wrapperStyle }}>\n                {headerText ? (\n                    <Heading level={4} style={styles.header}>\n                        {headerText}\n                    </Heading>\n                ) : null}\n                <AsyncAutoComplete\n                    autoCompleteProps={autoCompleteProps}\n                    query={api.queryOrgUnits}\n                    queryParam={orgUnitType}\n                    minCharLength={2}\n                    queryDebounceTime={375}\n                    selectHandler={this.selectAndShowFilteredOrgUnit}\n                />\n                <Paper style={styles.scrollBox}>\n                    {!roots ? (\n                        <CircularProgress style={styles.loader} />\n                    ) : (\n                        <OrgUnitTreeMultipleRoots\n                            roots={roots}\n                            onSelectClick={this.toggleSelectedOrgUnits}\n                            selected={selected}\n                            initiallyExpanded={initiallyExpanded}\n                            orgUnitsPathsToInclude={orgUnitFilter}\n                        />\n                    )}\n                </Paper>\n                {confirmSelection ? (\n                    <div style={styles.buttonStrip}>\n                        <RaisedButton\n                            label={i18n.t('Apply')}\n                            primary={true}\n                            style={styles.buttonMargin}\n                            onClick={this.applySelection}\n                            disabled={!roots}\n                        />\n                        <RaisedButton\n                            label={i18n.t('Clear all')}\n                            secondary={true}\n                            style={styles.buttonMargin}\n                            onClick={this.clearSelection}\n                            disabled={!roots}\n                        />\n                        <RaisedButton\n                            onClick={cancel}\n                            label={i18n.t('Cancel')}\n                        />\n                    </div>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nSearchableOrgUnitTree.propTypes = {\n    roots: PropTypes.array,\n    selectedOrgUnits: PropTypes.array.isRequired,\n    orgUnitType: PropTypes.string.isRequired,\n    headerText: PropTypes.string,\n    wrapperStyle: PropTypes.object,\n    confirmSelection: PropTypes.func,\n    onChange: PropTypes.func,\n    cancel: PropTypes.func,\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        roots: orgUnitRootsSelector(props.orgUnitType, state.currentUser),\n    }\n}\n\nexport default connect(mapStateToProps)(SearchableOrgUnitTree)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { TextField, Checkbox } from 'material-ui'\n\n/**\n * Renders a TextField and Checkbox above the AuthoritySections.\n * The actual filtering is being done in the FilteredAuthoritySections component which uses `utils/filterAuthorities`\n * However, this is done via the AuthorityEditor component\n */\nclass AuthorityFilter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            searchStr: '',\n            selectedOnly: false,\n        }\n    }\n\n    onSelectedOnlyChange = (_, value) => {\n        this.setState({ selectedOnly: value })\n        this.props.onFilterChange(this.state.searchStr, value)\n    }\n\n    onSearchStrChange = event => {\n        const value = event.target.value\n        this.setState({ searchStr: value })\n        this.props.onFilterChange(value, this.state.selectedOnly)\n    }\n\n    render() {\n        return (\n            <div className=\"authority-editor__filterbar\">\n                <TextField\n                    className=\"authority-editor__filter-text-input search-input\"\n                    floatingLabelText={i18n.t('Search')}\n                    onChange={this.onSearchStrChange}\n                    type=\"search\"\n                />\n                <Checkbox\n                    className=\"authority-editor__filter-checkbox\"\n                    label={i18n.t('Selected authorities only')}\n                    checked={this.state.selectedOnly}\n                    onCheck={this.onSelectedOnlyChange}\n                    style={{ width: '300px' }}\n                />\n            </div>\n        )\n    }\n}\n\nAuthorityFilter.propTypes = {\n    onFilterChange: PropTypes.func.isRequired,\n}\n\nexport default AuthorityFilter\n","/* eslint-disable max-params */\n\n/** @module AuthorityEditor/utils/filterAuthorities */\n\nconst matchesSearchStr = (item, searchChunks) => {\n    if (!searchChunks) {\n        return true\n    }\n    const strToMatch = item.name.toLowerCase()\n\n    return searchChunks.some(chunk => {\n        // Ignore single characters when there are multiple chunks\n        // because this makes the results list grow like crazy\n        // i.e. this would be like the user typing \"analytics t\" and\n        // this function returning true for all matches on \"t\"\n        if (chunk.length <= 1 && searchChunks.length > 1) {\n            return false\n        }\n        return strToMatch.indexOf(chunk) > -1\n    })\n}\n\nconst matchesSelectedSetting = (item, selectedOnly, lookup) => {\n    if (!selectedOnly) {\n        return true\n    }\n\n    if (item.items && item.items.length) {\n        return item.items.some(subItem => lookup.get(subItem.id))\n    } else {\n        return Boolean(lookup.get(item.id))\n    }\n}\n\n/**\n * Filters a list of all available authorities based on a search chunks and a selectedOnly flag\n * @param {Object} allAuthorities - A nested object in which all authorities have been grouped in a logical way\n * @param {Object} selectedItemsLookup - A lookup Map that can be used for quickly filtering selected authorities\n * @param {Array} searchChunks - A search string that has been split into an array by spaces\n * @param {Boolean} selectedOnly - Flag for only allowing selected items\n * @returns {Object} An object with the same structure as `allAuthorities` but containing filtered arrays of authorities\n */\nconst filterAuthorities = (\n    allAuthorities,\n    selectedItemsLookup,\n    searchChunks,\n    selectedOnly\n) => {\n    if (!searchChunks && !selectedOnly) {\n        return allAuthorities\n    }\n    return Object.keys(allAuthorities).reduce((filtered, key) => {\n        const section = allAuthorities[key]\n        const filteredItems = section.items.filter(item => {\n            const allowedBySearchStr = matchesSearchStr(item, searchChunks)\n            const allowedBySelectedSetting = matchesSelectedSetting(\n                item,\n                selectedOnly,\n                selectedItemsLookup\n            )\n            return allowedBySearchStr && allowedBySelectedSetting\n        })\n        filtered[key] = { ...section, items: filteredItems }\n        return filtered\n    }, {})\n}\n\nexport default filterAuthorities\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Highlighter from 'react-highlight-words'\n\n/**\n * Will return either a string or a nested element with spans and marks that are highlighted\n * depending on the presence of searchChunks\n * @param {Object} props - The component props\n * @param {String} props.text - The text to display\n * @param {Array} props.searchChunks - The searchChunks to highlight in the text\n * @class\n */\nconst HighlightableText = ({ text, searchChunks }) => {\n    // If there is nothing to highlight, return the label text as it is\n    if (!searchChunks) {\n        return text\n    }\n\n    // Otherwise return a highlighted label text\n    return (\n        <Highlighter\n            highlightClassName=\"authority-editor__search-highlight\"\n            searchWords={searchChunks}\n            autoEscape={true}\n            textToHighlight={text}\n        />\n    )\n}\n\nHighlightableText.propTypes = {\n    text: PropTypes.string,\n    searchChunks: PropTypes.array,\n}\n\nexport default HighlightableText\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox } from 'material-ui'\nimport HighlightableText from './HighlightableText'\n\n/**\n * Renders a single authority cell. This can be an empty cell, or a checkbox with or without a label.\n * If label and searchChunks are present, the label text will be highlighted.\n * Depending on state this checkbox can be disabled or selected.\n */\nclass AuthorityItem extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { selected: props.selected }\n    }\n\n    onChecked = (_, value) => {\n        const {\n            authSubject: { id },\n            onCheckedCallBack,\n        } = this.props\n        this.setState({ selected: value })\n        onCheckedCallBack(id, value)\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.selected !== this.state.selected) {\n            this.setState({ selected: newProps.selected })\n        }\n    }\n\n    render() {\n        const { authSubject, withLabel, disabled } = this.props\n        const { searchChunks } = this.context\n        const { name, empty, implicit } = authSubject\n        const baseClassName = 'authority-editor__auth-checkbox'\n        const className = withLabel\n            ? baseClassName\n            : `${baseClassName}--without-label`\n        const label = withLabel ? (\n            <HighlightableText text={name} searchChunks={searchChunks} />\n        ) : (\n            ''\n        )\n\n        return (\n            <td>\n                {!empty ? (\n                    <Checkbox\n                        onCheck={this.onChecked}\n                        label={label}\n                        className={className}\n                        checked={this.state.selected || Boolean(implicit)}\n                        disabled={implicit || disabled}\n                    />\n                ) : (\n                    <div className=\"authority-editor__empty-cell\" />\n                )}\n            </td>\n        )\n    }\n}\n\nAuthorityItem.propTypes = {\n    authSubject: PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.string,\n        empty: PropTypes.bool,\n        implicit: PropTypes.bool,\n    }).isRequired,\n    withLabel: PropTypes.bool.isRequired,\n    onCheckedCallBack: PropTypes.func.isRequired,\n    selected: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n}\n\nAuthorityItem.contextTypes = {\n    searchChunks: PropTypes.array,\n}\n\nexport default AuthorityItem\n","import i18n from '@dhis2/d2-i18n'\n\nexport default new Map([\n    ['ALL', i18n.t('All (Full authority)')],\n    ['F_ANALYTICSTABLEHOOK', i18n.t('Analytics Table Hook')],\n    ['F_ATTRIBUTE', i18n.t('Attribute')],\n    ['F_CATEGORY_COMBO', i18n.t('Category Combo')],\n    ['F_CATEGORY', i18n.t('Category')],\n    ['F_CATEGORY_OPTION', i18n.t('Category Option')],\n    ['F_CATEGORY_OPTION_GROUP', i18n.t('Category Option Group')],\n    ['F_CATEGORY_OPTION_GROUP_SET', i18n.t('Category Option Group Set')],\n    ['F_CHART', i18n.t('Chart')],\n    ['F_COLOR_SET', i18n.t('Color Set')],\n    ['F_CONSTANT', i18n.t('Constant')],\n    ['F_DASHBOARD', i18n.t('Dashboard')],\n    ['F_DATAELEMENTGROUPSET', i18n.t('Data Element Group Sets')],\n    ['F_DATAELEMENTGROUP', i18n.t('Data Element Groups')],\n    ['F_DATAELEMENT', i18n.t('Data Element')],\n    ['F_DATAELEMENT_MINMAX', i18n.t('Min/max rule')],\n    ['F_DATASET', i18n.t('Data Set')],\n    ['F_DATAVALUE', i18n.t('Data Value')],\n    ['F_DOCUMENT', i18n.t('Document')],\n    ['F_EVENTCHART', i18n.t('Event Chart')],\n    ['F_EVENTREPORT', i18n.t('Event Report')],\n    ['F_EXTERNAL_MAP_LAYER', i18n.t('External Map Layer')],\n    ['F_INDICATORGROUPSET', i18n.t('Indicator Group Sets')],\n    ['F_INDICATORGROUP', i18n.t('Indicator Group')],\n    ['F_INDICATORTYPE', i18n.t('Indicator Type')],\n    ['F_INDICATOR', i18n.t('Indicator')],\n    ['F_LEGEND_SET', i18n.t('Legend Set')],\n    ['F_MAP', i18n.t('Map')],\n    ['F_MINMAX_DATAELEMENT', i18n.t('Min-Max Data Element')],\n    ['F_OPTIONGROUPSET', i18n.t('Option Group Set')],\n    ['F_OPTIONGROUP', i18n.t('Option Group')],\n    ['F_OPTIONSET', i18n.t('Option Set')],\n    ['F_ORGANISATIONUNIT', i18n.t('Organisation Unit')],\n    ['F_ORGUNITGROUPSET', i18n.t('Organisation Unit Group Set')],\n    ['F_ORGUNITGROUP', i18n.t('Organisation Unit Group')],\n    ['F_PREDICTOR', i18n.t('Predictor')],\n    ['F_PROGRAMSTAGE', i18n.t('Program Stage')],\n    ['F_PROGRAM', i18n.t('Program')],\n    ['F_PROGRAM_INDICATOR', i18n.t('Program Indicator')],\n    ['F_PROGRAM_INDICATOR_GROUP', i18n.t('Program Indicator Group')],\n    ['F_PROGRAM_RULE', i18n.t('Program Rule')],\n    [\n        'F_PROGRAM_TRACKED_ENTITY_ATTRIBUTE_GROUP',\n        i18n.t('Program Tracked Entity Attribute Group'),\n    ],\n    ['F_PUSH_ANALYSIS', i18n.t('Push Analysis')],\n    ['F_RELATIONSHIPTYPE', i18n.t('Relationship Type')],\n    ['F_REPORTTABLE', i18n.t('Report Table')],\n    ['F_REPORT', i18n.t('Report')],\n    ['F_SECTION', i18n.t('Section')],\n    ['F_SQLVIEW', i18n.t('SQL View')],\n    ['F_TRACKED_ENTITY', i18n.t('Tracked Entity')],\n    ['F_TRACKED_ENTITY_ATTRIBUTE', i18n.t('Tracked Entity Attribute')],\n    ['F_TRACKED_ENTITY_DATAVALUE', i18n.t('Tracked Entity Data Value')],\n    ['F_TRACKED_ENTITY_INSTANCE', i18n.t('Tracked Entity Instance')],\n    ['F_USERGROUP', i18n.t('User Group')],\n    ['F_USERROLE', i18n.t('User Role')],\n    ['F_USER', i18n.t('User')],\n    ['F_VALIDATIONRULEGROUP', i18n.t('Validation Rule Group')],\n    ['F_VALIDATIONRULE', i18n.t('Validation Rule')],\n    ['F_PREDICTORGROUP', i18n.t('Data predictor group')],\n    ['F_SKIP_DATA_IMPORT_AUDIT', i18n.t('Skip data import audit')],\n])\n","/** @module AuthorityEditor/utils/groupAuthorities */\nimport i18n from '@dhis2/d2-i18n'\nimport startsWith from 'lodash.startswith'\nimport endsWith from 'lodash.endswith'\nimport sortBy from 'lodash.sortby'\nimport nameLookup from './authorityGroupNames'\n\n// The next 3 constants are exported so they can be used by the AuthorityEditor component\n\n// The target object to which the allAuths array will be mapped\nexport const EMPTY_GROUPED_AUTHORITIES = {\n    metadata: {\n        name: 'Metadata',\n        items: null,\n        headers: [\n            'Name',\n            'Add/Update Public',\n            'Add/Update Private',\n            'Delete',\n            'External access',\n        ],\n    },\n    apps: {\n        name: i18n.t('Apps'),\n        items: null,\n        headers: ['Name'],\n    },\n    tracker: {\n        name: i18n.t('Tracker'),\n        items: null,\n        headers: ['Name'],\n    },\n    importExport: {\n        name: i18n.t('Import-Export'),\n        items: null,\n        headers: ['Name'],\n    },\n    system: {\n        name: i18n.t('System'),\n        items: null,\n        headers: ['Name'],\n    },\n}\n\n// Suffixes and prefixes\nexport const PUBLIC_ADD_SUFFIX = '_PUBLIC_ADD'\nexport const PRIVATE_ADD_SUFFIX = '_PRIVATE_ADD'\n\nconst ADD_SUFFIX = '_ADD'\nconst DELETE_SUFFIX = '_DELETE'\nconst EXTERNAL_ACCESS_SUFFIX = '_EXTERNAL'\nconst APP_AUTH_PREFIX = 'M_'\n\n// Suffix groups for lookups and group construction\nconst ALL_METADATA_SUFFIXES = [\n    PUBLIC_ADD_SUFFIX,\n    PRIVATE_ADD_SUFFIX,\n    ADD_SUFFIX,\n    DELETE_SUFFIX,\n    EXTERNAL_ACCESS_SUFFIX,\n]\n\n// Blueprints for creating implicit options and empty cells\nconst EMPTY_GROUP_ITEM = {\n    id: null,\n    empty: true,\n}\nconst IMPLICIT_GROUP_ITEM = {\n    implicit: true,\n}\n\n// Metadata with implicit add and delete\nconst AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE = new Set([\n    'F_CHART_PUBLIC_ADD',\n    'F_DASHBOARD_PUBLIC_ADD',\n    'F_EVENTCHART_PUBLIC_ADD',\n    'F_EVENTREPORT_PUBLIC_ADD',\n    'F_MAP_PUBLIC_ADD',\n    'F_REPORTTABLE_PUBLIC_ADD',\n])\n\nconst AUTHORITY_GROUPS = {\n    tracker: new Set([\n        'F_PROGRAM_DASHBOARD_CONFIG_ADMIN',\n        'F_PROGRAM_ENROLLMENT',\n        'F_PROGRAM_ENROLLMENT_READ',\n        'F_PROGRAM_UNENROLLMENT',\n        'F_TEI_CASCADE_DELETE',\n        'F_TRACKED_ENTITY_DATAVALUE_READ',\n        'F_TRACKED_ENTITY_INSTANCE_SEARCH',\n        'F_TRACKED_ENTITY_INSTANCE_SEARCH_IN_ALL_ORGUNITS',\n        'F_TRACKED_ENTITY_UPDATE',\n        'F_UNCOMPLETE_EVENT',\n        'F_VIEW_EVENT_ANALYTICS',\n        'F_PROGRAM_RULE_MANAGEMENT',\n        'F_ENROLLMENT_CASCADE_DELETE',\n    ]),\n    importExport: new Set([\n        'F_EXPORT_DATA',\n        'F_EXPORT_EVENTS',\n        'F_IMPORT_DATA',\n        'F_IMPORT_EVENTS',\n        'F_IMPORT_GML',\n        'F_METADATA_EXPORT',\n        'F_METADATA_IMPORT',\n        'F_METADATA_MANAGE',\n        'F_SKIP_DATA_IMPORT_AUDIT',\n    ]),\n    system: new Set([\n        'ALL',\n        'F_APPROVE_DATA',\n        'F_APPROVE_DATA_LOWER_LEVELS',\n        'F_ACCEPT_DATA_LOWER_LEVELS',\n        'F_VIEW_UNAPPROVED_DATA',\n        'F_ORGANISATIONUNIT_MOVE',\n        'F_ORGANISATIONUNITLEVEL_UPDATE',\n        'F_RUN_VALIDATION',\n        'F_REPLICATE_USER',\n        'F_USER_VIEW',\n        'F_USERGROUP_MANAGING_RELATIONSHIPS_ADD',\n        'F_USERGROUP_MANAGING_RELATIONSHIPS_VIEW',\n        'F_PERFORM_MAINTENANCE',\n        'F_SCHEDULING_ADMIN',\n        'F_GENERATE_MIN_MAX_VALUES',\n        'F_PREDICTOR_RUN',\n        'F_INSERT_CUSTOM_JS_CSS',\n        'F_SYSTEM_SETTING',\n        'F_SEND_EMAIL',\n        'F_MOBILE_SETTINGS',\n        'F_MOBILE_SENDSMS',\n        'F_OAUTH2_CLIENT_MANAGE',\n    ]),\n}\n\n/**\n * This function receives an array of authorities and reduces this into an object that is grouped into\n * logical sections. This is done in a semi dynamic way by using pre- and suffixes in tandem\n * with hard-coded group definitions\n * @param {Object[]} authorities - The list of authorities that will be transformed\n * @param {string} authorities[].id - The identifier of an authority using UPPER_SNAKE_CASE containing patterns that can be used for grouping.\n * @param {string} authorities[].name - The display name of an authority.\n * @returns {Object} - The grouped authorities object\n */\nconst groupAuthorities = authorities => {\n    // A lookup map that can be used to verify the existence of a particular authority ID in linear time\n    const lookup = authorities.reduce((lookup, auth) => {\n        lookup.set(auth.id, auth)\n        return lookup\n    }, new Map())\n\n    // The initial state of items in EMPTY_GROUPED_AUTHORITIES is null, which makes the authority sections render a loader\n    // but the accumulator object passed into the reduce function below expects items to be empty arrays\n    const emptyGroupedAuthorities = Object.keys(\n        EMPTY_GROUPED_AUTHORITIES\n    ).reduce((groupedBase, key) => {\n        groupedBase[key] = { ...EMPTY_GROUPED_AUTHORITIES[key], items: [] }\n        return groupedBase\n    }, {})\n\n    // Append items to the groupedAuthorities accumulator and return the accumulated object\n    const groupedAuthories = authorities.reduce((groupedAuthorities, auth) => {\n        if (startsWith(auth.id, APP_AUTH_PREFIX)) {\n            // Group under apps\n            groupedAuthorities.apps.items.push(auth)\n            lookup.delete(auth.id)\n        } else if (hasNoGroupSuffix(auth)) {\n            // Group under specified key-value section\n            addToAuthoritySection(auth, groupedAuthorities, lookup)\n        } else {\n            const metadataGroup = createMetadataGroup(auth, lookup)\n\n            if (metadataGroup) {\n                // If any type of metadata group was created add it to the metadata items list\n                groupedAuthorities.metadata.items.push(metadataGroup)\n            } else if (lookup.get(auth.id)) {\n                // If no metadata group was created, we are dealing with and authority which had a metadata suffix,\n                // but actually was not a metadata authority\n                addToAuthoritySection(auth, groupedAuthorities, lookup)\n            }\n        }\n        return groupedAuthorities\n    }, emptyGroupedAuthorities)\n\n    return sortGroupedAuthorities(groupedAuthories)\n}\n\nconst sortGroupedAuthorities = groupedAuthories => {\n    Object.keys(groupedAuthories).forEach(key => {\n        const group = groupedAuthories[key]\n        group.items = sortBy(group.items, 'name')\n    })\n    return groupedAuthories\n}\n\n/**\n * Checks if a given authority contains any group suffixes\n * @param {Object} auth - The authority which ID could contain a group suffix\n * @return {Boolean} - True if no group suffix was found in the auth id\n */\nconst hasNoGroupSuffix = auth => {\n    return !ALL_METADATA_SUFFIXES.some(suffix => endsWith(auth.id, suffix))\n}\n\n/**\n * Receives an authority item and creates an authority metadata group based on suffixes\n * @param {Object} auth - The authority to group\n * @param {Object} suffixes - The list of authority suffixes to check against\n * @param {Object} lookup - The authority lookup map\n * @return {Object} group - A metadata authority group\n */\nconst createMetadataGroup = (auth, lookup) => {\n    // Exit if authority is no longer in the lookup\n    if (!lookup.get(auth.id)) {\n        return null\n    }\n\n    // The suffix of the the incoming authority, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"_DELETE\"\n    const authSuffix = ALL_METADATA_SUFFIXES.find(suffix =>\n        endsWith(auth.id, suffix)\n    )\n    // The authority baseName, i.e. \"F_CATEGORY_COMBO_DELETE\" => \"F_CATEGORY_COMBO\"\n    const baseName = auth.id.replace(authSuffix, '')\n\n    // Some metadata authorities distinguish between PUBLIC_ADD and PRIVATE_ADD\n    // Others only have a _ADD version which equates to PUBLIC_ADD and PRIVATE_ADD may be left empty\n    const genericAdd = lookup.get(baseName + ADD_SUFFIX)\n\n    // Some metadata authorities have an external access authority version. If not present this may be left empty\n    const externalAccess = lookup.get(baseName + EXTERNAL_ACCESS_SUFFIX)\n\n    // Some authorities do not have _ADD_PRIVATE and _DELETE siblings in the authority list\n    // however, they do belong to the metadata section. If a role is granted ADD_PUBLIC rights it is also allowed\n    // to ADD_PRIVATE and DELETE implicitly\n    const hasImplicitAddPrivateAndDelete = AUTHS_WITH_IMPLICIT_ADD_PRIVATE_AND_DELETE.has(\n        baseName + PUBLIC_ADD_SUFFIX\n    )\n\n    // Set each authority item for the current authority group\n    const publicAddAuth = genericAdd || lookup.get(baseName + PUBLIC_ADD_SUFFIX)\n    const privateAddAuth = genericAdd\n        ? EMPTY_GROUP_ITEM\n        : hasImplicitAddPrivateAndDelete\n        ? IMPLICIT_GROUP_ITEM\n        : lookup.get(baseName + PRIVATE_ADD_SUFFIX)\n    const deleteAuth = hasImplicitAddPrivateAndDelete\n        ? IMPLICIT_GROUP_ITEM\n        : lookup.get(baseName + DELETE_SUFFIX)\n    const externalAccessAuth = externalAccess || EMPTY_GROUP_ITEM\n\n    // If any of these variable are undefined, the authority in question has an ID with a metadata suffix,\n    // but is not actually a metadata authority. I.e. \"F_ENROLLMENT_CASCADE_DELETE\"\n    if (!publicAddAuth || !privateAddAuth || !deleteAuth) {\n        return null\n    }\n\n    // Delete from lookup to prevent double entries\n    ALL_METADATA_SUFFIXES.forEach(suffix => lookup.delete(baseName + suffix))\n\n    return {\n        name: nameLookup.get(baseName) || baseName,\n        items: [publicAddAuth, privateAddAuth, deleteAuth, externalAccessAuth],\n    }\n}\n\n/**\n * Assigns non-app, non-metadata authorities to the correct section. If it cannot find a correct section it will be assigned to 'system'\n * @param {Object} auth - The authority to assign to a section\n * @param {Object} groupedAuthorities - The object to assign to\n * @param {Object} lookup - The authority lookup map\n */\nconst addToAuthoritySection = (auth, groupedAuthorities, lookup) => {\n    const groupKey =\n        Object.keys(AUTHORITY_GROUPS).find(groupKey =>\n            AUTHORITY_GROUPS[groupKey].has(auth.id)\n        ) || 'system'\n\n    if (auth.id === 'ALL') {\n        auth.name = nameLookup.get(auth.id)\n    }\n\n    groupedAuthorities[groupKey].items.push(auth)\n    lookup.delete(auth.id)\n}\n\nexport default groupAuthorities\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport endsWith from 'lodash.endswith'\n\nimport AuthorityItem from './AuthorityItem'\nimport HighlightableText from './HighlightableText'\nimport { PUBLIC_ADD_SUFFIX, PRIVATE_ADD_SUFFIX } from './utils/groupAuthorities'\n\n/**\n * A metadata authority group, which renders an array of 5 table cells.\n * The first cell contains the authority name and subsequent cells are authority-types corresponding to this name\n */\nclass AuthorityGroup extends Component {\n    onAuthGroupChanged = (id, value) => {\n        this.context.onAuthChange(id, value)\n\n        if (this.isPublicAdd(id)) {\n            // Force rerender on entire group when public add changes\n            this.forceUpdate()\n        }\n    }\n\n    isPublicAdd(id) {\n        return endsWith(id, PUBLIC_ADD_SUFFIX)\n    }\n\n    isPrivateAdd(id) {\n        return endsWith(id, PRIVATE_ADD_SUFFIX)\n    }\n\n    render() {\n        const { name, items } = this.props\n        const { shouldSelect, searchChunks } = this.context\n        let publicAddSelected\n\n        return items.reduce(\n            (authGroup, authSubject, index) => {\n                const isPublicAdd = this.isPublicAdd(authSubject.id)\n                const isPrivateAdd = this.isPrivateAdd(authSubject.id)\n                const implicitSelect = Boolean(\n                    publicAddSelected && isPrivateAdd\n                )\n                const selected = shouldSelect(authSubject.id) || implicitSelect\n\n                if (isPublicAdd) {\n                    publicAddSelected = selected\n                }\n\n                authGroup.push(\n                    <AuthorityItem\n                        key={`authitem-${index}`}\n                        authSubject={authSubject}\n                        withLabel={false}\n                        selected={selected}\n                        disabled={implicitSelect}\n                        onCheckedCallBack={this.onAuthGroupChanged}\n                    />\n                )\n                return authGroup\n            },\n            [\n                <td key={'group-label'}>\n                    <HighlightableText\n                        text={name}\n                        searchChunks={searchChunks}\n                    />\n                </td>,\n            ]\n        )\n    }\n}\n\nAuthorityGroup.propTypes = {\n    items: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n}\n\nAuthorityGroup.contextTypes = {\n    shouldSelect: PropTypes.func.isRequired,\n    onAuthChange: PropTypes.func.isRequired,\n    searchChunks: PropTypes.array,\n}\n\nexport default AuthorityGroup\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper, CircularProgress } from 'material-ui'\nimport i18n from '@dhis2/d2-i18n'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport AuthorityGroup from './AuthorityGroup'\nimport AuthorityItem from './AuthorityItem'\n\nconst FLUSH_COUNT = 7\nconst FLUSH_INTERVAL = 10\n\n/**\n * Renders a logical authority section. Within the section it can either render rows with `AuthorityGroups` for metadata,\n * or `AuthorityItems` for other types of authorities. This component renders a lot MUI checkboxes which would cause the UI to hang\n * if they were all rendered in one cycle. To prevent this UI lag, it uses batched rendering.\n */\nclass AuthoritySection extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { renderedItems: null }\n        this.appendInterval = null\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.authSection.items.length) {\n            this.setState({ renderedItems: null })\n            this.createBatchedRenderInterval(newProps.authSection.items)\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.appendInterval)\n    }\n\n    /**\n     * Will receives a (long) array of authorities and gradually populates the state.renderedItems with these.\n     * By decreasing the `FLUSH_COUNT` and/or increasing the `FLUSH_INTERVAL` the rendering will become slower but the UI will be more responsive.\n     * @param {Array} items - The authorities to render\n     */\n    createBatchedRenderInterval(items) {\n        let currSliceEnd = 0\n        this.appendInterval = setInterval(() => {\n            const currItems = this.state.renderedItems || []\n            const reachedEnd = currSliceEnd + FLUSH_COUNT > items.length\n            const sliceEnd = reachedEnd\n                ? items.length\n                : currSliceEnd + FLUSH_COUNT\n            const newItems = items.slice(currSliceEnd, sliceEnd)\n            const renderedItems = [...currItems, ...newItems]\n\n            currSliceEnd = sliceEnd\n\n            if (renderedItems.length === items.length) {\n                clearInterval(this.appendInterval)\n            }\n\n            this.setState({ renderedItems })\n        }, FLUSH_INTERVAL)\n    }\n\n    renderAuthRow = (authSubject, index) => {\n        const { shouldSelect, onAuthChange } = this.context\n        return (\n            <tr key={`row-${index}`}>\n                {authSubject.items ? (\n                    <AuthorityGroup\n                        items={authSubject.items}\n                        name={authSubject.name}\n                    />\n                ) : (\n                    <AuthorityItem\n                        authSubject={authSubject}\n                        withLabel={true}\n                        selected={shouldSelect(authSubject.id)}\n                        onCheckedCallBack={onAuthChange}\n                    />\n                )}\n            </tr>\n        )\n    }\n\n    renderLoaderRow() {\n        return (\n            <tr>\n                <td className=\"authority-editor__placeholder-cell\">\n                    <CircularProgress size={24} />\n                </td>\n            </tr>\n        )\n    }\n\n    renderInfoRow(errorMsg) {\n        let className = 'authority-editor__placeholder-cell'\n        let msg = i18n.t('No matches found')\n\n        if (errorMsg) {\n            className += '--error'\n            msg = errorMsg\n        }\n\n        return (\n            <tr>\n                <td className={className}>{msg}</td>\n            </tr>\n        )\n    }\n\n    renderContent(authSection) {\n        const { renderedItems } = this.state\n        if (!authSection.items || !renderedItems) {\n            return this.renderLoaderRow()\n        }\n\n        if (typeof authSection.items === 'string') {\n            return this.renderInfoRow(authSection.items)\n        }\n\n        if (authSection.items.length === 0) {\n            return this.renderInfoRow()\n        }\n\n        return this.state.renderedItems.map(this.renderAuthRow)\n    }\n\n    renderTableHead({ headers }) {\n        return (\n            <thead>\n                <tr>\n                    {headers.map((header, index) => (\n                        <th key={`header-${index}`}>{header}</th>\n                    ))}\n                </tr>\n            </thead>\n        )\n    }\n\n    render() {\n        const { sectionKey, authSection } = this.props\n        let wrapperClassName = `authority-editor__auth-group ${sectionKey}`\n        if (authSection.items && authSection.items.length > 11) {\n            wrapperClassName += ' scrollable'\n        }\n\n        let tableClassName = 'authority-editor__auth-group-table'\n        tableClassName += ` columns-${authSection.headers.length}`\n\n        return (\n            <Paper className={wrapperClassName}>\n                <Heading\n                    level={6}\n                    className=\"authority-editor__auth-group-header\"\n                >\n                    {authSection.name}\n                </Heading>\n                <table className={tableClassName}>\n                    {this.renderTableHead(authSection)}\n                    <tbody>{this.renderContent(authSection)}</tbody>\n                </table>\n            </Paper>\n        )\n    }\n}\n\nAuthoritySection.propTypes = {\n    sectionKey: PropTypes.string.isRequired,\n    authSection: PropTypes.object.isRequired,\n}\n\nAuthoritySection.contextTypes = {\n    shouldSelect: PropTypes.func.isRequired,\n    onAuthChange: PropTypes.func.isRequired,\n}\n\nexport default AuthoritySection\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport debounce from 'lodash.debounce'\nimport filterAuthorities from './utils/filterAuthorities'\nimport AuthoritySection from './AuthoritySection'\n\n/**\n * Component responsible for providing the `AuthoritySections` with filtered authority lists.\n */\nclass FilteredAuthoritySections extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filteredAuthorities: props.allGroupedAuthorities,\n            searchChunks: null,\n        }\n        this.updateFilter = debounce(this.updateFilter, 375)\n    }\n\n    getChildContext() {\n        return {\n            searchChunks: this.state.searchChunks,\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.updateFilteredAuthorities(\n            nextProps.allGroupedAuthorities,\n            null,\n            null\n        )\n    }\n\n    updateFilter(searchStr, selectedOnly) {\n        const { allGroupedAuthorities } = this.props\n        this.updateFilteredAuthorities(\n            allGroupedAuthorities,\n            searchStr,\n            selectedOnly\n        )\n    }\n\n    updateFilteredAuthorities(all, searchStr, selectedOnly) {\n        const { selectedItemsLookup } = this.context\n        const searchChunks = searchStr\n            ? searchStr.toLowerCase().split(' ')\n            : null\n        this.setState({\n            filteredAuthorities: filterAuthorities(\n                all,\n                selectedItemsLookup,\n                searchChunks,\n                selectedOnly\n            ),\n            searchChunks,\n        })\n    }\n\n    render() {\n        const { filteredAuthorities } = this.state\n\n        return (\n            <div className=\"authority-editor__auth-group-wrap\">\n                {Object.keys(filteredAuthorities).map(key => {\n                    return (\n                        <AuthoritySection\n                            key={key}\n                            sectionKey={key}\n                            authSection={filteredAuthorities[key]}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nFilteredAuthoritySections.propTypes = {\n    allGroupedAuthorities: PropTypes.object,\n}\n\nFilteredAuthoritySections.contextTypes = {\n    shouldSelect: PropTypes.func.isRequired,\n    onAuthChange: PropTypes.func.isRequired,\n    selectedItemsLookup: PropTypes.object.isRequired,\n}\nFilteredAuthoritySections.childContextTypes = {\n    searchChunks: PropTypes.array,\n}\n\nexport default FilteredAuthoritySections\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport './style.css'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport makeTrashable from 'trashable'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\nimport api from '../../api'\nimport AuthorityFilter from './AuthorityFilter'\nimport FilteredAuthoritySections from './FilteredAuthoritySections'\nimport { EMPTY_GROUPED_AUTHORITIES } from './utils/groupAuthorities'\n\n/**\n * This is the parent component of the authorities section in the RoleForm.\n * It has been made compliant with redux-form.\n */\nclass AuthorityEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allGroupedAuthorities: EMPTY_GROUPED_AUTHORITIES,\n        }\n        // This lookup may be updated without triggering re-renders\n        this.selectedItemsLookup = props.initiallySelected.reduce(\n            (lookup, item) => lookup.set(item, true),\n            new Map()\n        )\n        this.groupedAuthoritiesPromise = null\n    }\n\n    getChildContext() {\n        return {\n            shouldSelect: this.shouldSelect,\n            onAuthChange: this.onAuthChange,\n            selectedItemsLookup: this.selectedItemsLookup,\n        }\n    }\n\n    async componentDidMount() {\n        this.groupedAuthoritiesPromise = makeTrashable(\n            api.getGroupedAuthorities()\n        )\n        try {\n            const allGroupedAuthorities = await this.groupedAuthoritiesPromise\n            this.setState({ allGroupedAuthorities })\n        } catch (error) {\n            this.handleAuthorityFetchError(error)\n        }\n    }\n\n    componentWillUnmount() {\n        this.groupedAuthoritiesPromise.trash()\n    }\n\n    handleAuthorityFetchError(error) {\n        const errorMsg = createHumanErrorMessage(\n            error,\n            i18n.t('There was a problem retreiving the available authorities.')\n        )\n        const allGroupedAuthorities = Object.keys(\n            EMPTY_GROUPED_AUTHORITIES\n        ).reduce((total, key) => {\n            total[key] = { ...EMPTY_GROUPED_AUTHORITIES[key], items: errorMsg }\n            return total\n        }, {})\n        this.setState({ allGroupedAuthorities })\n    }\n\n    getChangedProperties(newObject, oldObject) {\n        return Object.keys(newObject).reduce((changes, key) => {\n            if (newObject[key] !== oldObject[key]) {\n                changes.push(key)\n            }\n            return changes\n        }, [])\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const propChanges = this.getChangedProperties(nextProps, this.props)\n        const stateChanges = this.getChangedProperties(nextState, this.state)\n        const allChanges = [...propChanges, ...stateChanges]\n\n        return (\n            allChanges.length > 0 &&\n            allChanges.includes('allGroupedAuthorities')\n        )\n    }\n\n    onFilterChange = (searchStr, selectedOnly) => {\n        // Here we directly call a method on a child component instead of\n        // letting state changes trigger full re-render. This is to prevent the TextField\n        // from being blocked whilst typing.\n        this.filteredAuthSections.updateFilter(searchStr, selectedOnly)\n    }\n\n    /**\n     * Responds to checkbox changes. Will also notify redux-form Field components if onChange and onBlur handlers were passed\n     * @param {string} id - The ID of the authority that was toggled\n     * @param {boolean} value - Checkbox was toggled to checked (true) or unchecked (false)\n     * @method\n     */\n    onAuthChange = (id, value) => {\n        const { reduxFormOnBlur, reduxFormOnChange } = this.props\n        const authorityIds = []\n\n        this.selectedItemsLookup.set(id, value)\n\n        this.selectedItemsLookup.forEach((value, key) => {\n            if (value) {\n                authorityIds.push(key)\n            }\n        })\n        reduxFormOnChange && reduxFormOnChange(authorityIds)\n        reduxFormOnBlur && reduxFormOnBlur()\n    }\n\n    shouldSelect = id => {\n        return Boolean(this.selectedItemsLookup.get(id))\n    }\n\n    render() {\n        const { allGroupedAuthorities } = this.state\n\n        return (\n            <div className=\"authority-editor\">\n                <Heading level={4} className=\"authority-editor__header\">\n                    {i18n.t('Authorities')}\n                </Heading>\n                <AuthorityFilter onFilterChange={this.onFilterChange} />\n                <FilteredAuthoritySections\n                    ref={comp => {\n                        this.filteredAuthSections = comp\n                    }}\n                    allGroupedAuthorities={allGroupedAuthorities}\n                />\n            </div>\n        )\n    }\n}\n\nAuthorityEditor.propTypes = {\n    initiallySelected: PropTypes.array,\n    reduxFormOnChange: PropTypes.func,\n    reduxFormOnBlur: PropTypes.func,\n}\n\nAuthorityEditor.defaultProps = {\n    initiallySelected: [],\n}\n\nAuthorityEditor.childContextTypes = {\n    shouldSelect: PropTypes.func.isRequired,\n    onAuthChange: PropTypes.func.isRequired,\n    selectedItemsLookup: PropTypes.object.isRequired,\n}\n\nexport default AuthorityEditor\n","import AuthorityEditor from './AuthorityEditor'\nexport default AuthorityEditor\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport TextField from 'material-ui/TextField/TextField'\nimport Checkbox from 'material-ui/Checkbox/Checkbox'\nimport SelectField from 'material-ui/SelectField/SelectField'\nimport MenuItem from 'material-ui/MenuItem'\nimport SearchableGroupEditor from '../components/SearchableGroupEditor'\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree'\nimport { orange500 } from 'material-ui/styles/colors'\nimport AuthorityEditor from '../components/AuthorityEditor'\n\nconst styles = {\n    checkbox: {\n        marginTop: '32px',\n        fontSize: '16px',\n    },\n    warning: {\n        color: orange500,\n    },\n}\n\n/**\n * Helper functions used as \"component\" props for redux-form Field components.\n * @name fieldRenderers\n * @memberof module:utils\n */\nexport const renderTextField = ({\n    input,\n    label,\n    meta: { touched, error, asyncValidating },\n    ...other\n}) => {\n    const errorText = asyncValidating\n        ? i18n.t('Validating...')\n        : touched && error\n\n    if (asyncValidating) {\n        other.errorStyle = styles.warning\n    }\n\n    return (\n        <TextField\n            floatingLabelText={label}\n            hintText={label}\n            fullWidth={true}\n            errorText={errorText}\n            {...other}\n            {...input}\n        />\n    )\n}\n\nexport const renderAuthorityEditor = ({ input }) => {\n    const initiallySelected = input.value === '' ? [] : input.value\n    return (\n        <AuthorityEditor\n            initiallySelected={initiallySelected}\n            reduxFormOnChange={input.onChange}\n            reduxFormOnBlur={input.onBlur}\n        />\n    )\n}\n\nexport const renderCheckbox = ({ input, label }) => {\n    return (\n        <Checkbox\n            checked={Boolean(input.value)}\n            onCheck={input.onChange}\n            label={label}\n            {...input}\n            style={styles.checkbox}\n        />\n    )\n}\n\nexport const renderSelectField = ({\n    input,\n    label,\n    meta: { touched, error, asyncValidating },\n    options,\n    style,\n}) => {\n    const errorText = asyncValidating\n        ? i18n.t('Validating...')\n        : touched && error\n    const errorStyle = asyncValidating ? styles.warning : undefined\n\n    return (\n        <SelectField\n            floatingLabelText={label}\n            fullWidth={true}\n            {...input}\n            onChange={(event, index, value) => {\n                input.onChange(value)\n                // Trigger onBlur after a value is selected, in order to trigger\n                // a validator to run if the SelectField is in the asyncBlurFields list\n                setTimeout(() => input.onBlur(value), 1)\n            }}\n            style={style}\n            errorText={errorText}\n            errorStyle={errorStyle}\n        >\n            {options.map(({ id, label }, i) => (\n                <MenuItem key={`option_${i}`} value={id} primaryText={label} />\n            ))}\n        </SelectField>\n    )\n}\n\nexport const renderSearchableGroupEditor = ({\n    input,\n    meta: { touched, error },\n    availableItemsQuery,\n    availableItemsLabel,\n    assignedItemsLabel,\n    initialValues,\n    ...other\n}) => {\n    return (\n        <SearchableGroupEditor\n            initiallyAssignedItems={initialValues}\n            onChange={input.onChange}\n            onBlur={input.onBlur}\n            availableItemsQuery={availableItemsQuery}\n            availableItemsHeader={availableItemsLabel}\n            assignedItemsHeader={assignedItemsLabel}\n            errorText={touched && error}\n            {...other}\n        />\n    )\n}\n\nexport const renderSearchableOrgUnitTree = ({\n    input,\n    label,\n    wrapperStyle,\n    initialValues,\n    orgUnitType,\n}) => {\n    return (\n        <SearchableOrgUnitTree\n            selectedOrgUnits={initialValues}\n            onChange={input.onChange}\n            wrapperStyle={wrapperStyle}\n            headerText={label}\n            orgUnitType={orgUnitType}\n        />\n    )\n}\n\nexport const renderText = ({ name, label, style }) => {\n    return (\n        <p key={name} style={style}>\n            {label}\n        </p>\n    )\n}\n\nconst sharedPropTypes = {\n    input: PropTypes.object.isRequired,\n    label: PropTypes.string,\n    meta: PropTypes.shape({\n        touched: PropTypes.bool.isRequired,\n        error: PropTypes.string,\n    }),\n}\n\nrenderTextField.propTypes = sharedPropTypes\n\nrenderCheckbox.propTypes = sharedPropTypes\n\nrenderSelectField.propTypes = {\n    ...sharedPropTypes,\n    options: PropTypes.array.isRequired,\n}\n\nrenderSearchableGroupEditor.propTypes = {\n    ...sharedPropTypes,\n    availableItemsQuery: PropTypes.func.isRequired,\n    availableItemsLabel: PropTypes.string,\n    assignedItemsLabel: PropTypes.string,\n    initialValues: PropTypes.array.isRequired,\n}\n\nrenderSearchableOrgUnitTree.propTypes = {\n    ...sharedPropTypes,\n    wrapperStyle: PropTypes.object,\n    initialValues: PropTypes.array.isRequired,\n}\n\nrenderAuthorityEditor.propTypes = {\n    ...sharedPropTypes,\n    initialValues: PropTypes.array,\n}\n\nrenderText.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    style: PropTypes.object.isRequired,\n}\n","import {\n    renderTextField,\n    renderSearchableGroupEditor,\n} from '../../utils/fieldRenderers'\nimport asArray from '../../utils/asArray'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const FORM_NAME = 'groupForm'\nexport const NAME = 'name'\nexport const USERS = 'users'\nexport const CODE = 'code'\nexport const MANAGED_GROUPS = 'managedGroups'\n\nexport const GROUP_PROPS = [NAME, CODE, USERS, MANAGED_GROUPS]\n\nexport const STYLES = {\n    loaderWrap: {\n        paddingTop: '2rem',\n        textAlign: 'center',\n    },\n}\n\nexport const FIELDS = [\n    {\n        name: NAME,\n        label: i18n.t('Name'),\n        fieldRenderer: renderTextField,\n        isRequiredField: true,\n    },\n    {\n        name: CODE,\n        label: i18n.t('Code'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: USERS,\n        fieldRenderer: renderSearchableGroupEditor,\n        isRequiredField: true,\n        initialItemsSelector: group => asArray(group[USERS]),\n        availableItemsQuery: 'getManagedUsers',\n        availableItemsLabel: i18n.t('Available users'),\n        assignedItemsLabel: i18n.t('Group members'),\n    },\n    {\n        name: MANAGED_GROUPS,\n        fieldRenderer: renderSearchableGroupEditor,\n        initialItemsSelector: group => asArray(group[MANAGED_GROUPS]),\n        availableItemsQuery: 'getAvailableUserGroups',\n        availableItemsLabel: i18n.t('Available user groups'),\n        assignedItemsLabel: i18n.t('Managed user groups'),\n    },\n]\n","/**\n * A collection of selector functions that return derived state slices. Results are memoized where possible.\n * @module selectors\n */\nimport memoize from 'lodash.memoize'\nimport isUndefined from 'lodash.isundefined'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    USER_PROPS,\n    USER_CRED_PROPS,\n    INTERFACE_LANGUAGE,\n    DATABASE_LANGUAGE,\n    INVITE,\n    INVITE_USER,\n    DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n    DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n    SET_PASSWORD,\n} from '../containers/UserForm/config'\nimport { FIELDS as USER_GROUP_FIELDS } from '../containers/GroupForm/config'\nimport asArray from '../utils/asArray'\nimport getNestedProp from '../utils/getNestedProp'\n\n/**\n * @param {Object} pager - A d2 Pager instance\n * @returns {Object} The d2 Pager instance with an appended 'currentlyShown' property\n * @function\n */\nexport const pagerSelector = memoize(pager => {\n    if (pager === null) {\n        return pager\n    }\n    const {\n        total,\n        pageCount,\n        page,\n        query: { pageSize },\n    } = pager\n    const pageCalculationValue =\n        total - (total - (pageCount - (pageCount - page)) * pageSize)\n    const startItem = 1 + pageCalculationValue - pageSize\n    const endItem = pageCalculationValue\n\n    pager.currentlyShown = `${startItem} - ${endItem > total ? total : endItem}`\n    return pager\n})\n\n/**\n * @param {Object} list - A d2 list ModelCollection instance\n * @param {Object} [groupMemberships] - An array of groupMembership IDs (userGroup only)\n * @returns {Array} An array of d2 model instances with properties appended for use in the List component\n * @function\n */\nexport const listSelector = (list, groupMemberships) => {\n    if (!list || typeof list === 'string') {\n        return list\n    }\n\n    const listType = list.modelDefinition.name\n    return list\n        .toArray()\n        .map(item => listMappings[listType](item, groupMemberships))\n}\n\nconst listMappings = {\n    user: item => {\n        item.userName = item.userCredentials.username\n        item.disabled = item.userCredentials.disabled\n        item.lastLogin = item.userCredentials.lastLogin\n        return item\n    },\n    userRole: item => item,\n    userGroup: (item, groupMemberships) => {\n        item.currentUserIsMember = Boolean(groupMemberships.get(item.id))\n        return item\n    },\n}\n\n/**\n * @param {Object} orgUnits - an array of d2 organisation unit instances\n * @returns {String} Either a comma delimited list of organisation unit names, or a count of selected organisation units phrase\n * @function\n */\nexport const orgUnitsAsStringSelector = memoize(orgUnits => {\n    return orgUnits.length < 3\n        ? orgUnits.map(unit => unit.displayName).join(', ')\n        : i18n.t('{{count}} selected', { count: orgUnits.length })\n})\n\nconst addInitialValueFrom = (sourceObject, initialValues, propName) => {\n    if (propName === DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS) {\n        initialValues[propName] = [\n            ...sourceObject.catDimensionConstraints,\n            ...sourceObject.cogsDimensionConstraints,\n        ]\n    } else if (\n        (sourceObject[propName] && !isUndefined(sourceObject[propName].size)) ||\n        Array.isArray(sourceObject[propName])\n    ) {\n        initialValues[propName] = asArray(sourceObject[propName]).map(\n            ({ id }) => id\n        )\n    } else {\n        initialValues[propName] = sourceObject[propName]\n    }\n}\n\n/**\n * Produces initial values for redux form\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @param {Object} locales - Contains available and selected locales for the UI and DB\n * @returns {Object} Initial values for the redux form wrapping the UserForm component\n * @function\n */\nexport const userFormInitialValuesSelector = memoize(\n    (user, locales, attributeFields) => {\n        const initialValues = {\n            [INVITE]: SET_PASSWORD,\n        }\n\n        if (user.id) {\n            USER_PROPS.forEach(propName => {\n                addInitialValueFrom(user, initialValues, propName)\n            })\n\n            USER_CRED_PROPS.forEach(propName => {\n                addInitialValueFrom(\n                    user.userCredentials,\n                    initialValues,\n                    propName\n                )\n            })\n\n            attributeFields.forEach(\n                field => (initialValues[field.name] = field.value)\n            )\n        }\n\n        // 'en' is a fallback for systems that have no default system UI locale specified\n        initialValues[INTERFACE_LANGUAGE] = locales.ui.selected || 'en'\n        initialValues[DATABASE_LANGUAGE] = locales.db.selected\n\n        return initialValues\n    }\n)\n\nexport const userGroupFormInitialValuesSelector = memoize(\n    (userGroup, attributeFields) => {\n        const initialValues = {}\n\n        USER_GROUP_FIELDS.forEach(field => {\n            addInitialValueFrom(userGroup, initialValues, field.name)\n        })\n\n        attributeFields.forEach(\n            field => (initialValues[field.name] = field.value)\n        )\n\n        return initialValues\n    }\n)\n\n/**\n * Used to combine cat and cog dimension restrictions into a single array\n * @param {Object} user - A d2 user model instance (state.currentItem)\n * @returns {Object} An array of cat and cog IDs\n * @function\n */\nexport const analyticsDimensionsRestrictionsSelector = memoize(user => {\n    const catConstraints = asArray(\n        getNestedProp('userCredentials.catDimensionConstraints', user)\n    )\n    const cogsConstraints = asArray(\n        getNestedProp('userCredentials.cogsDimensionConstraints', user)\n    )\n    return [...catConstraints, ...cogsConstraints]\n})\n\n/**\n * A short item is a basic version of state.currentItem, derived from a list.\n * It is used to display basic information in a FormLoader or DetailSummary component\n * while the full version of the currentItem is being fetched.\n * @param {String} id - The id of the model selected in a list\n * @param {Object} list - A d2  model collection instance instance (state.list)\n * @returns {Object} A d2 model instance containing only a few basic properties\n * @function\n */\nexport const shortItemSelector = memoize((id, list) => {\n    if (!list || !id) {\n        return null\n    }\n    return list.get(id)\n})\n\n/**\n * Organisation unit trees should have different roots depending on the context.\n * @param {String} orgUnitType - The type orgUnits to return\n * @param {Object} currentUser - state.currentUser\n * @returns {Array|null} The roots of the organisation unit tree to be displayed\n * @function\n */\nexport const orgUnitRootsSelector = (orgUnitType, currentUser) => {\n    const systemOrgRoots = currentUser.systemOrganisationUnitRoots\n    const requestedOrgUnitRoots = currentUser[orgUnitType]\n    const fallBackOrgUnitRoots =\n        currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS]\n\n    let orgUnitRoots = null\n    if (currentUser.authorities.has('ALL')) {\n        orgUnitRoots = systemOrgRoots\n    } else if (requestedOrgUnitRoots.size === 0) {\n        orgUnitRoots = fallBackOrgUnitRoots.toArray()\n    } else if (fallBackOrgUnitRoots.size > 0) {\n        orgUnitRoots = fallBackOrgUnitRoots.toArray()\n    }\n\n    return orgUnitRoots\n}\n\n/**\n * The redux form `formValueSelector` was returning incorrect values,\n * so this selector was born.\n * @param {Object} formState - state.form.userForm\n * @returns {Boolean} - True if select box was switched to 'Invite user'\n * @function\n */\nexport const inviteUserValueSelector = formState => {\n    const fields = formState && formState.registeredFields\n    const values = formState && formState.values\n    const isRenderedField = Boolean(fields && fields[INVITE])\n    const fieldValue = isRenderedField && values && values[INVITE]\n\n    return fieldValue === INVITE_USER\n}\n","import { blue600 } from 'material-ui/styles/colors'\nimport asArray from '../../utils/asArray'\nimport i18n from '@dhis2/d2-i18n'\nimport getNestedProp from '../../utils/getNestedProp'\nimport { analyticsDimensionsRestrictionsSelector } from '../../selectors'\nimport {\n    renderTextField,\n    renderCheckbox,\n    renderSelectField,\n    renderSearchableGroupEditor,\n    renderSearchableOrgUnitTree,\n    renderText,\n} from '../../utils/fieldRenderers'\n\nexport const STYLES = {\n    loaderWrap: {\n        paddingTop: '2rem',\n        textAlign: 'center',\n    },\n    toggler: {\n        color: blue600,\n    },\n    orgUnitTree: {\n        width: 'calc(50% - 60px)',\n        float: 'left',\n        minHeight: '100px',\n        maxHeight: '1200px',\n    },\n    togglerWrap: {\n        clear: 'both',\n        paddingTop: '1.2rem',\n        marginBottom: '1.5rem',\n    },\n    additionalFieldsWrap: {\n        clear: 'both',\n        paddingTop: '1.5rem',\n    },\n}\n\nexport const FORM_NAME = 'userForm'\nexport const USERNAME = 'username'\nexport const EMAIL = 'email'\nexport const INVITE = 'inviteUser'\nexport const EXTERNAL_AUTH = 'externalAuth'\nexport const PASSWORD = 'password'\nexport const REPEAT_PASSWORD = 'repeatPassword'\nexport const SURNAME = 'surname'\nexport const FIRST_NAME = 'firstName'\nexport const OPEN_ID = 'openId'\nexport const LDAP_ID = 'ldapId'\nexport const PHONE_NUMBER = 'phoneNumber'\nexport const INTERFACE_LANGUAGE = 'interfaceLanguage'\nexport const DATABASE_LANGUAGE = 'databaseLanguage'\nexport const ASSIGNED_ROLES = 'userRoles'\nexport const DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS = 'organisationUnits'\nexport const DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS = 'dataViewOrganisationUnits'\nexport const TEI_SEARCH_ORG_UNITS = 'teiSearchOrganisationUnits'\nexport const ASSIGNED_USER_GROUPS = 'userGroups'\nexport const DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS =\n    'catCogsDimensionConstraints'\nexport const WHATS_APP = 'whatsApp'\nexport const FACEBOOK_MESSENGER = 'facebookMessenger'\nexport const SKYPE = 'skype'\nexport const TELEGRAM = 'telegram'\nexport const TWITTER = 'twitter'\n\nexport const USER_PROPS = [\n    SURNAME,\n    FIRST_NAME,\n    EMAIL,\n    PHONE_NUMBER,\n    WHATS_APP,\n    FACEBOOK_MESSENGER,\n    SKYPE,\n    TELEGRAM,\n    TWITTER,\n    DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n    DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n    ASSIGNED_USER_GROUPS,\n    TEI_SEARCH_ORG_UNITS,\n]\n\nexport const USER_CRED_PROPS = [\n    USERNAME,\n    EXTERNAL_AUTH,\n    PASSWORD,\n    OPEN_ID,\n    LDAP_ID,\n    ASSIGNED_ROLES,\n    DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n]\n\nexport const ALWAYS_REQUIRED = 'ALWAYS_REQUIRED'\nexport const INVITE_REQUIRED = 'INVITE_REQUIRED'\nexport const CREATE_REQUIRED = 'CREATE_REQUIRED'\n\nexport const USE_DB_LOCALE = 'use_db_locale'\n\nexport const SET_PASSWORD = 'SET_PASSWORD'\nexport const INVITE_USER = 'INVITE_USER'\n\nconst BASE_CAPTION = {\n    label: i18n.t(\n        'Selecting an organisation unit provides access to all units in the sub-hierarchy'\n    ),\n    fieldRenderer: renderText,\n    style: {\n        clear: 'both',\n        paddingTop: '0.8rem',\n        fontStyle: 'italic',\n        fontSize: '0.9rem',\n    },\n}\n\nexport const INVITE_FIELDS = [\n    {\n        name: INVITE,\n        label: i18n.t('Create account or email invitation'),\n        fieldRenderer: renderSelectField,\n        options: [\n            {\n                id: SET_PASSWORD,\n                label: 'Create account with user details',\n            },\n            {\n                id: INVITE_USER,\n                label: 'Email invitation to create account',\n            },\n        ],\n        props: {\n            style: {\n                // backgroundColor: 'rgb(110,188,253)',\n            },\n        },\n    },\n]\n\nexport const BASE_FIELDS = [\n    {\n        name: USERNAME,\n        label: i18n.t('Username'),\n        fieldRenderer: renderTextField,\n        isRequiredField: CREATE_REQUIRED,\n    },\n    {\n        name: EMAIL,\n        label: i18n.t('E-mail'),\n        fieldRenderer: renderTextField,\n        isRequiredField: INVITE_REQUIRED,\n    },\n    {\n        name: EXTERNAL_AUTH,\n        label: i18n.t('External authentication only (OpenID or LDAP)'),\n        fieldRenderer: renderCheckbox,\n    },\n    {\n        name: PASSWORD,\n        label: i18n.t('Password'),\n        fieldRenderer: renderTextField,\n        isRequiredField: CREATE_REQUIRED,\n        props: {\n            type: 'password',\n        },\n    },\n    {\n        name: REPEAT_PASSWORD,\n        label: i18n.t('Retype password'),\n        fieldRenderer: renderTextField,\n        isRequiredField: CREATE_REQUIRED,\n        props: {\n            type: 'password',\n        },\n    },\n    {\n        name: SURNAME,\n        label: i18n.t('Surname'),\n        isRequiredField: ALWAYS_REQUIRED,\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: FIRST_NAME,\n        label: i18n.t('First name'),\n        isRequiredField: ALWAYS_REQUIRED,\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: OPEN_ID,\n        label: i18n.t('OpenID'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: LDAP_ID,\n        label: i18n.t('LDAP identifier'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: PHONE_NUMBER,\n        label: i18n.t('Mobile phone number'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: WHATS_APP,\n        label: i18n.t('WhatsApp'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: FACEBOOK_MESSENGER,\n        label: i18n.t('Facebook Messenger'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: SKYPE,\n        label: i18n.t('Skype'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: TELEGRAM,\n        label: i18n.t('Telegram'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: TWITTER,\n        label: i18n.t('Twitter'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: INTERFACE_LANGUAGE,\n        label: i18n.t('Interface language'),\n        fieldRenderer: renderSelectField,\n        optionsSelector: 'locales.ui.available',\n    },\n    {\n        name: DATABASE_LANGUAGE,\n        label: i18n.t('Database language'),\n        fieldRenderer: renderSelectField,\n        optionsSelector: 'locales.db.available',\n    },\n    {\n        name: ASSIGNED_ROLES,\n        fieldRenderer: renderSearchableGroupEditor,\n        isRequiredField: ALWAYS_REQUIRED,\n        initialItemsSelector: user =>\n            asArray(getNestedProp('userCredentials.userRoles', user) || []),\n        availableItemsQuery: 'getAvailableUserRoles',\n        availableItemsLabel: i18n.t('Available roles'),\n        assignedItemsLabel: i18n.t('Selected roles'),\n    },\n    {\n        name: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n        label: i18n.t('Data capture and maintenance organisation units'),\n        orgUnitType: DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n        fieldRenderer: renderSearchableOrgUnitTree,\n        wrapperStyle: { ...STYLES.orgUnitTree, paddingRight: '60px' },\n    },\n    {\n        name: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n        label: i18n.t('Data output and analytic organisation units'),\n        orgUnitType: DATA_OUTPUT_AND_ANALYTICS_ORG_UNITS,\n        fieldRenderer: renderSearchableOrgUnitTree,\n        wrapperStyle: { ...STYLES.orgUnitTree, paddingLeft: '60px' },\n    },\n    {\n        ...BASE_CAPTION,\n        name: 'org_unit_info_1',\n    },\n]\n\nexport const ADDITIONAL_FIELDS = [\n    {\n        name: TEI_SEARCH_ORG_UNITS,\n        label: i18n.t('Search Organisation Units'),\n        orgUnitType: TEI_SEARCH_ORG_UNITS,\n        fieldRenderer: renderSearchableOrgUnitTree,\n        wrapperStyle: { ...STYLES.orgUnitTree, paddingRight: '60px' },\n    },\n    {\n        ...BASE_CAPTION,\n        name: 'org_unit_info_2',\n    },\n    {\n        name: ASSIGNED_USER_GROUPS,\n        fieldRenderer: renderSearchableGroupEditor,\n        initialItemsSelector: user => asArray(user.userGroups) || [],\n        availableItemsQuery: 'getAvailableUserGroups',\n        availableItemsLabel: i18n.t('Available user groups'),\n        assignedItemsLabel: i18n.t('Selected user groups'),\n    },\n    {\n        name: DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n        fieldRenderer: renderSearchableGroupEditor,\n        initialItemsSelector: user =>\n            analyticsDimensionsRestrictionsSelector(user),\n        availableItemsQuery: 'getAvailableDataAnalyticsDimensionRestrictions',\n        availableItemsLabel: i18n.t(\n            'Available dimension restrictions for data analytics'\n        ),\n        assignedItemsLabel: i18n.t(\n            'Selected dimension restrictions for data analytics'\n        ),\n        returnModelsOnUpdate: true,\n    },\n]\n","export const USER = 'user'\nexport const USER_ROLE = 'userRole'\nexport const USER_GROUP = 'userGroup'\n","import i18n from '@dhis2/d2-i18n'\nimport { PASSWORD, REPEAT_PASSWORD } from '../containers/UserForm/config'\n\nconst EMAIL_ADDRESS_PATTERN = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\nconst INTERNATIONAL_PHONE_NUMBER_PATTERN = /^\\+(?:[0-9].?){4,14}[0-9]$/\nconst DATE_PATTERN = /[0-9]{4}-[0-9]{2}-[0-9]{2}/\nconst LOWER_CASE_PATTERN = /^(?=.*[a-z]).+$/\nconst UPPER_CASE_PATTERN = /^(?=.*[A-Z]).+$/\nconst DIGIT_PATTERN = /^(?=.*[0-9]).+$/\n// Using this regex to match all non-alphanumeric characters to match server-side implementation\n// https://github.com/dhis2/dhis2-core/blob/master/dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/user/SpecialCharacterValidationRule.java#L39\nconst SPECIAL_CHARACTER_PATTERN = /[^a-zA-Z0-9]/\n\n// validators (ordered alphabetically)\nexport function code(value) {\n    if (hasValue(value) && value.length > 50) {\n        return i18n.t('Exceeds maximum character limit of 50')\n    }\n}\n\nexport function date(value) {\n    if (hasValue(value) && !DATE_PATTERN.test(value)) {\n        return i18n.t(\n            'Please enter a valid date with the following format yyyy-mm-dd'\n        )\n    }\n}\n\nexport function email(value) {\n    if (hasValue(value) && !EMAIL_ADDRESS_PATTERN.test(value.toLowerCase())) {\n        return i18n.t('Please provide a valid email address')\n    }\n}\n\nexport function integer(value) {\n    if (hasValue(value) && !isInteger(value)) {\n        return i18n.t('Value should be an integer')\n    }\n}\n\nexport function negativeInteger(value) {\n    if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) >= 0)) {\n        return i18n.t('Value should be a nagative integer')\n    }\n}\n\nexport function number(value) {\n    if (hasValue(value) && isNaN(value)) {\n        return i18n.t('Value should be a number')\n    }\n}\n\nexport function password(value, allValues, props) {\n    if (!shouldValidatePassword(allValues, props)) {\n        return undefined\n    }\n    const passwordError = checkPasswordForErrors(allValues[PASSWORD])\n    if (passwordError) {\n        return passwordError\n    }\n}\n\nexport function positiveInteger(value) {\n    if (hasValue(value) && (!isInteger(value) || parseInt(value, 10) <= 0)) {\n        return i18n.t('Value should be a positive integer')\n    }\n}\n\nexport function repeatPassword(value, allValues) {\n    if (allValues[REPEAT_PASSWORD] !== allValues[PASSWORD]) {\n        return i18n.t('Passwords do not match')\n    }\n}\n\nexport function required(value) {\n    return !hasValue(value) ? i18n.t('This field is required') : undefined\n}\n\nexport function requiredArray(value) {\n    if (!(Array.isArray(value) && value.length > 0)) {\n        return i18n.t('This field is required. Please select at least one')\n    }\n}\n\nexport function username(value) {\n    if (hasValue(value) && value.length < 2) {\n        return i18n.t('A username should be at least 2 characters long')\n    }\n\n    if (hasValue(value) && value.length > 140) {\n        return i18n.t('Username may not exceed 140 characters')\n    }\n}\n\nexport function whatsApp(value) {\n    if (hasValue(value) && !INTERNATIONAL_PHONE_NUMBER_PATTERN.test(value)) {\n        return i18n.t(\n            'Please provide a valid international phone number (+0123456789)'\n        )\n    }\n}\n\n// Helpers\n/**\n * Tests if a given password is compliant with the password restrictions. This function checks all restrictions below, but returns when the first violation was found:\n * - At least 8 characters\n * - No more than 34 characters\n * - Contains at least 1 lowercase character\n * - Contains at least 1 UPPERCASE character\n * - Contains at least 1 number\n * - Contains at least 1 special character\n * @param {String} password\n * @return {null|String} Null if password is OK, otherwise an error message\n * @memberof module:utils\n * @function\n */\nfunction checkPasswordForErrors(password) {\n    if (!hasValue(password)) {\n        return i18n.t('This field is required')\n    }\n    if (password.length < 8) {\n        return i18n.t('Password should be at least 8 characters long')\n    }\n    if (password.length > 35) {\n        return i18n.t('Password should be no longer than 34 characters')\n    }\n    if (!LOWER_CASE_PATTERN.test(password)) {\n        return i18n.t('Password should contain at least one lowercase letter')\n    }\n    if (!UPPER_CASE_PATTERN.test(password)) {\n        return i18n.t('Password should contain at least one UPPERCASE letter')\n    }\n    if (!DIGIT_PATTERN.test(password)) {\n        return i18n.t('Password should contain at least one number')\n    }\n    if (!SPECIAL_CHARACTER_PATTERN.test(password)) {\n        return i18n.t('Password should have at least one special character')\n    }\n\n    return null\n}\n\nfunction isInteger(value) {\n    if (isNaN(value)) {\n        return false\n    }\n    const x = parseFloat(value)\n    return (x | 0) === x\n}\n\nfunction shouldValidatePassword(allValues, props) {\n    if (props.inviteUser) {\n        return false\n    }\n\n    const isEditingUser = Boolean(props.user.id)\n    const isEmptyOnEdit =\n        isEditingUser && !allValues[PASSWORD] && !allValues[REPEAT_PASSWORD]\n\n    return isEmptyOnEdit ? false : true\n}\n\nfunction hasValue(value) {\n    return typeof value !== 'undefined' && value !== null && value !== ''\n}\n","const notADateValue = 'not-a-date'\nlet hasDateInputSupport\n\nexport default function browserHasDateInputSupport() {\n    // Return cached result if available\n    if (typeof hasDateInputSupport !== 'undefined') {\n        return hasDateInputSupport\n    }\n\n    let input = document.createElement('input')\n    input.setAttribute('type', 'date')\n    input.setAttribute('value', notADateValue)\n    // Cache result\n    hasDateInputSupport = input.value !== notADateValue\n    input = null\n    return hasDateInputSupport\n}\n","import i18n from '@dhis2/d2-i18n'\nimport {\n    renderTextField,\n    renderCheckbox,\n    renderSelectField,\n} from './fieldRenderers'\nimport {\n    number,\n    integer,\n    positiveInteger,\n    negativeInteger,\n    date,\n} from './validators'\nimport browserHasDateInputSupport from './browserHasDateInputSupport'\n\nexport const USER_ATTRIBUTE_FIELD_PREFIX = 'userAttibute_'\nexport const NO_VALUE_OPTION = 'no_value'\n/**************************************************************************\n    Attributes can be either based on an optionSet, or based on a valueType.\n    Attributes based on optionSets are supported.\n    Attributes based on valueTypes are partially supported, see below:\n        [X] TEXT\n        [X] LONG_TEXT\n        [ ] LETTER\n        [ ] PHONE_NUMBER\n        [ ] EMAIL\n        [X] BOOLEAN\n        [X] TRUE_ONLY\n        [X] DATE\n        [ ] DATETIME\n        [ ] TIME\n        [X] NUMBER\n        [ ] UNIT_INTERVAL\n        [ ] PERCENTAGE\n        [X] INTEGER\n        [X] INTEGER_POSITIVE\n        [X] INTEGER_NEGATIVE\n        [ ] INTEGER_ZERO_OR_POSITIVE\n        [ ] TRACKER_ASSOCIATE\n        [ ] USERNAME\n        [ ] COORDINATE\n        [ ] ORGANISATION_UNIT\n        [ ] AGE\n        [ ] URL\n        [ ] FILE_RESOURCE\n        [ ] IMAGE\n****************************************************************************/\n\nexport function generateAttributeFields(attributes, userAttributeValues) {\n    return attributes.map(attribute =>\n        generateAttributeField(attribute, userAttributeValues)\n    )\n}\n\nexport function addUniqueAttributesToAsyncBlurFields(\n    attributeFields,\n    asyncBlurFields\n) {\n    attributeFields.forEach(({ shouldBeUnique, name }) => {\n        if (shouldBeUnique) {\n            // It seems hacky to push to props, but seems to be the way to do it:\n            // https://github.com/erikras/redux-form/issues/708#issuecomment-191446641\n            asyncBlurFields.push(name)\n        }\n    })\n}\n\nexport function parseAttributeValues(values, attributeFields) {\n    const fieldTypeLookup = attributeFields.reduce(\n        (lookup, { attributeId, valueType }) => {\n            lookup[attributeId] = valueType\n            return lookup\n        },\n        {}\n    )\n\n    return Object.keys(values).reduce((attributeValues, key) => {\n        const isUserAttribute = key.indexOf(USER_ATTRIBUTE_FIELD_PREFIX) !== -1\n\n        if (isUserAttribute) {\n            const id = key.replace(USER_ATTRIBUTE_FIELD_PREFIX, '')\n            const value = values[key]\n            const isClearedTrueOnlyField =\n                fieldTypeLookup[id] === 'TRUE_ONLY' && !value\n            const isClearedOptionalDropDown = value === NO_VALUE_OPTION\n\n            if (!isClearedTrueOnlyField && !isClearedOptionalDropDown) {\n                attributeValues.push({\n                    value: value,\n                    attribute: {\n                        id: id,\n                    },\n                })\n            }\n        }\n        return attributeValues\n    }, [])\n}\n\nconst valueTypeMapping = {\n    OPTION_SET: {\n        fieldRenderer: renderSelectField,\n    },\n    TEXT: {\n        fieldRenderer: renderTextField,\n    },\n    LONG_TEXT: {\n        fieldRenderer: renderTextField,\n        props: {\n            multiLine: true,\n            rows: 3,\n            rowsMax: 6,\n        },\n    },\n    DATE: {\n        fieldRenderer: renderTextField,\n        props: {\n            type: 'date',\n            // If browser supports <input type=\"date\"/>, the label should always float above the input\n            // because the date input has some text that overlaps with the hintText\n            floatingLabelFixed: browserHasDateInputSupport(),\n            hintText: null,\n        },\n        fieldValidators: [date],\n    },\n    BOOLEAN: {\n        fieldRenderer: renderSelectField,\n        props: {\n            options: [\n                { id: 'true', label: i18n.t('Yes') },\n                { id: 'false', label: i18n.t('No') },\n            ],\n        },\n    },\n    TRUE_ONLY: {\n        fieldRenderer: renderCheckbox,\n    },\n    NUMBER: {\n        fieldRenderer: renderTextField,\n        fieldValidators: [number],\n    },\n    INTEGER: {\n        fieldRenderer: renderTextField,\n        fieldValidators: [integer],\n    },\n    INTEGER_POSITIVE: {\n        fieldRenderer: renderTextField,\n        fieldValidators: [positiveInteger],\n    },\n    INTEGER_NEGATIVE: {\n        fieldRenderer: renderTextField,\n        fieldValidators: [negativeInteger],\n    },\n}\n\nfunction generateAttributeField(\n    { id, valueType, displayName, mandatory, unique, optionSet },\n    userAttributeValues\n) {\n    const userAttribute =\n        userAttributeValues &&\n        userAttributeValues.find(\n            attributeValue => attributeValue.attribute.id === id\n        )\n\n    const valueTypeProps = getValueTypeProps(valueType, optionSet, mandatory)\n\n    return {\n        name: USER_ATTRIBUTE_FIELD_PREFIX + id,\n        isAttributeField: true,\n        label: displayName,\n        isRequiredField: mandatory,\n        shouldBeUnique: unique,\n        attributeId: id,\n        value: (userAttribute && userAttribute.value) || null,\n        valueType,\n        ...valueTypeProps,\n    }\n}\n\nfunction getValueTypeProps(valueType, optionSet, mandatory) {\n    // Attributes based on an option-set have TEXT as their valueType but need to render a select/dropdown with the options\n    const valueTypeProps = optionSet\n        ? {\n              ...valueTypeMapping.OPTION_SET,\n              props: {\n                  options: optionSet.options.map(option => ({\n                      id: option.id,\n                      label: option.displayName,\n                  })),\n              },\n          }\n        : // Use valueTypeMapping.TEXT as fallback field renderer.\n          // This way all attributes will always be editable, albeit not necesarrily enforcing the correct formatting\n          valueTypeMapping[valueType] || valueTypeMapping.TEXT\n\n    // Optional dropdown fields need a way to be cleared, so we create an empty option\n    if (\n        valueTypeProps.fieldRenderer === renderSelectField &&\n        !mandatory &&\n        valueTypeProps.props.options[0].id !== NO_VALUE_OPTION\n    ) {\n        valueTypeProps.props.options = [\n            {\n                id: NO_VALUE_OPTION,\n                label: i18n.t('<No value>'),\n            },\n            ...valueTypeProps.props.options,\n        ]\n    }\n\n    return valueTypeProps\n}\n","/* eslint-disable max-params */\n\n/**\n * This module includes helper functions used by the API class\n * @module Api/utils\n */\n\nimport { generateUid } from 'd2/lib/uid'\nimport snakeCase from 'lodash.snakecase'\nimport isUndefined from 'lodash.isundefined'\nimport store from '../store'\nimport {\n    PAGE as DEFAULT_PAGE,\n    PAGE_SIZE as DEFAULT_PAGE_SIZE,\n} from '../constants/defaults'\n\nimport FIELDS from '../constants/queryFields'\n\nimport {\n    USER_PROPS,\n    USER_CRED_PROPS,\n    DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS,\n    DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n    PASSWORD,\n    REPEAT_PASSWORD,\n    EXTERNAL_AUTH,\n} from '../containers/UserForm/config'\n\nimport { USER } from '../constants/entityTypes'\nimport { parseAttributeValues } from '../utils/attributeFieldHelpers'\n\n/**\n * Helper function that produces a \"fields\" array used in the api request payload\n * @param {String} entityName - \"user\" \"userRole\" or \"userGroup\"\n * @param {Boolean} detailFields - Should be true if caller want to get field\n * @return {Array} An array of fields/properties that should be included in the api response\n * @function\n */\nexport const getQueryFields = (entityName, detailFields) => {\n    const formattedEntityName = snakeCase(entityName).toUpperCase()\n    const varName = detailFields\n        ? `${formattedEntityName}_DETAILS`\n        : `${formattedEntityName}_LIST`\n\n    return FIELDS[varName]\n}\n\n/**\n * Helper function that prepares the request payload for a getList api call.\n * Combines the\n * @param {Number} page - The page number that should be requested\n * @param {Object} filter - Parameters to filter the result set with on the server\n * @param {Array} fields - Properties that should be returned for each object\n * @returns {Object} A valid request payload for api list calls\n * @function\n */\nexport const createListRequestData = (\n    page = DEFAULT_PAGE,\n    filter,\n    fields,\n    entityName,\n    currentUser\n) => {\n    const {\n        query,\n        inactiveMonths,\n        selfRegistered,\n        invitationStatus,\n        organisationUnits,\n    } = filter\n\n    const requestData = {\n        pageSize: DEFAULT_PAGE_SIZE,\n        fields,\n        page,\n        order:\n            entityName === USER ? ['firstName:asc', 'surname:asc'] : 'name:asc',\n    }\n\n    if (entityName === USER && !isSuperUser(currentUser)) {\n        requestData.userOrgUnits = true\n        requestData.includeChildren = true\n    }\n\n    if (query) requestData.query = query\n    if (inactiveMonths) requestData.inactiveMonths = inactiveMonths\n    if (selfRegistered) requestData.selfRegistered = selfRegistered\n    if (invitationStatus) requestData.invitationStatus = invitationStatus\n\n    if (organisationUnits.length) {\n        const ids = organisationUnits.map(unit => unit.id).join()\n        requestData.filter = `organisationUnits.id:in:[${ids}]`\n    }\n\n    return requestData\n}\n\nconst isSuperUser = ({ authorities }) => authorities.has('ALL')\n\nconst addValueAsProp = (data, value, propName) => {\n    if (!isUndefined(value)) {\n        data[propName] = Array.isArray(value)\n            ? value.map(id => ({ id }))\n            : value\n    }\n}\n\n/**\n * This function prepares a the payload object used for saving a user\n * @param {Object} values - Key-value with form values produced by redux-form\n * @param {Object} user - D2 user model instance\n * @returns {Object}  Object that may be PUT/POSTed to the server to save a user\n * @function\n */\nexport const parseUserSaveData = (\n    values,\n    user,\n    inviteUser,\n    attributeFields\n) => {\n    const isNewUser = !user.id\n    const userId = user.id || generateUid()\n    const userCredId =\n        (user.userCredentials && user.userCredentials.id) || generateUid()\n    const userModelOwnedProperties = user.modelDefinition.getOwnedPropertyNames()\n    const data = {\n        id: userId,\n        userCredentials: {\n            id: userCredId,\n            userInfo: { id: userId },\n            cogsDimensionConstraints: [],\n            catDimensionConstraints: [],\n        },\n    }\n    const cred = data.userCredentials\n\n    // catCogsDimensionConstraints are combined into a single input component,\n    // but need to be stored separately\n    if (Array.isArray(values.catCogsDimensionConstraints)) {\n        values.catCogsDimensionConstraints.forEach(constraint => {\n            if (constraint.dimensionType === 'CATEGORY_OPTION_GROUP_SET') {\n                cred.cogsDimensionConstraints.push({ id: constraint.id })\n            } else {\n                cred.catDimensionConstraints.push({ id: constraint.id })\n            }\n        })\n    }\n\n    USER_PROPS.forEach(propName =>\n        addValueAsProp(data, values[propName], propName)\n    )\n    USER_CRED_PROPS.forEach(propName =>\n        addValueAsProp(cred, values[propName], propName)\n    )\n\n    data.attributeValues = parseAttributeValues(values, attributeFields)\n\n    // This property was appended to the model by hand but needs to be removed before saving the user\n    delete cred[DIMENSION_RESTRICTIONS_FOR_DATA_ANALYTICS]\n\n    if (inviteUser || values[EXTERNAL_AUTH]) {\n        delete cred[PASSWORD]\n        delete cred[REPEAT_PASSWORD]\n    }\n\n    // Because the data object is used as the payload of a PUT request, properties that are omitted will be removed\n    // To prevent this, all remaining owned properties are copied from the user to the data object\n    // This is only required when editing users, because new users can't have such properties\n    if (!isNewUser) {\n        for (const ownedPropName of userModelOwnedProperties) {\n            if (user[ownedPropName] && !data[ownedPropName]) {\n                data[ownedPropName] = user[ownedPropName]\n            }\n        }\n    }\n\n    return data\n}\n\nexport const parseLocaleUrl = (type, username, val) => {\n    return `/userSettings/key${type}Locale?user=${username}&value=${val}`\n}\n\nexport const mapLocale = ({ locale, name }) => {\n    return {\n        id: locale,\n        label: name,\n    }\n}\n\n/**\n * When querying the server for organisation units that match a certain query string, the server returns all units from the system root.\n * However, the current user should only be able to see organisation units that he has access to.\n * @param {Object} orgUnits - A d2 ModelCollection instance of organisation units which has been filtered on the server by a query string\n * @param {*} orgUnitType - The type of organisation unit that should be used to restrict the results by\n * @returns {Array} - An filtered array of d2 models only including organisation units that the current user has access to\n * @function\n */\nexport const getRestrictedOrgUnits = (orgUnits, orgUnitType) => {\n    const { currentUser } = store.getState()\n\n    // Superuser can always see all org units\n    if (currentUser.authorities.has('ALL')) {\n        return orgUnits.toArray()\n    }\n\n    // Try the requested orgUnitType first and use currentUser.organisationUnits as fallback\n    const availableOrgUnits =\n        currentUser[orgUnitType].size > 0\n            ? currentUser[orgUnitType]\n            : currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS]\n\n    return orgUnits.toArray().filter(unit => {\n        const isAvailableUnit = Boolean(availableOrgUnits.get(unit.id))\n        const hasAvailableAncestor =\n            !isAvailableUnit &&\n            unit.ancestors\n                .toArray()\n                .some(ancestor => Boolean(availableOrgUnits.get(ancestor.id)))\n\n        return isAvailableUnit || hasAvailableAncestor\n    })\n}\n\nexport const appendUsernameToDisplayName = userModelCollection => {\n    userModelCollection.forEach(user => {\n        user.displayName += ` (${user.userCredentials.username})`\n    })\n    return userModelCollection\n}\n\nexport const parse200Error = response => {\n    const messages = []\n    for (const typeReport of response.typeReports) {\n        for (const objectReport of typeReport.objectReports) {\n            for (const errorReport of objectReport.errorReports) {\n                messages.push({ message: errorReport.message })\n            }\n        }\n    }\n    return { messages }\n}\n\nexport const getAttributesWithValueAndId = (\n    userCollection,\n    value,\n    attributeId\n) =>\n    userCollection\n        .toArray()\n        .reduce(\n            (list, user) =>\n                list.concat(\n                    user.attributeValues.filter(\n                        attributeValue =>\n                            value === attributeValue.value &&\n                            attributeId === attributeValue.attribute.id\n                    )\n                ),\n            []\n        )\n","/* eslint-disable max-params */\n\nimport { getInstance } from 'd2/lib/d2'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    getQueryFields,\n    createListRequestData,\n    parseUserSaveData,\n    parseLocaleUrl,\n    getRestrictedOrgUnits,\n    mapLocale,\n    appendUsernameToDisplayName,\n    parse200Error,\n    getAttributesWithValueAndId,\n} from './utils'\n\nimport groupAuthorities from '../components/AuthorityEditor/utils/groupAuthorities'\n\nimport {\n    ORG_UNITS_QUERY_CONFIG,\n    CURRENT_USER_ORG_UNITS_FIELDS,\n} from '../constants/queryFields'\n\nimport {\n    INTERFACE_LANGUAGE,\n    DATABASE_LANGUAGE,\n    USE_DB_LOCALE,\n} from '../containers/UserForm/config'\n\n/**\n * The Api class exposes all necessary functions to get the required data from the DHIS2 web api.\n */\nclass Api {\n    /**\n     * On instantiation d2 and the d2-api instance are attached to the this scope, so they are easily accessible by its members.\n     * @constructor\n     */\n    constructor() {\n        getInstance().then(d2 => {\n            this.d2 = d2\n            this.d2Api = d2.Api.getApi()\n            // In development you can access d2 and d2Api via the console\n            if (process.env.NODE_ENV === 'development') {\n                window.d2 = this.d2\n                window.d2Api = this.d2Api\n            }\n        })\n    }\n\n    /**************************\n     ********* GENERIC ********\n     **************************/\n\n    getD2 = () => {\n        return this.d2\n    }\n\n    getContextPath = () => {\n        return this.d2.system.systemInfo.contextPath\n    }\n\n    getList = (entityName, page, filter) => {\n        const fields = getQueryFields(entityName)\n        const requestData = createListRequestData(\n            page,\n            filter,\n            fields,\n            entityName,\n            this.getCurrentUser()\n        )\n        return this.d2.models[entityName].list(requestData)\n    }\n\n    getItem = (entityName, id) => {\n        const data = { fields: getQueryFields(entityName, true) }\n        return this.d2.models[entityName].get(id, data)\n    }\n\n    genericFind = (entityName, propertyName, value) => {\n        return this.d2.models[entityName]\n            .filter()\n            .on(propertyName)\n            .equals(value)\n            .list({ fields: ['id'] })\n    }\n\n    /**************************\n     ********* USERS **********\n     **************************/\n\n    replicateUser = (id, username, password) => {\n        const url = `/users/${id}/replica`\n        const data = { username, password }\n        return this.d2Api.post(url, data)\n    }\n\n    /**\n     * Fetches organisation units matching the query string from the server.\n     * Once the results are returned they are filtered client-side\n     * to only contain organisation units available to the current user.\n     * Used by SearchableOrgUnitTree in UserForm and UserList.\n     * @param {String} query - They search string to let the server query on\n     * @param {String} orgUnitType - The type of organisation unit to use for client side filtering\n     * @returns {Array} A filtered array of organisation units\n     */\n    queryOrgUnits = (query, orgUnitType) => {\n        const listConfig = {\n            ...ORG_UNITS_QUERY_CONFIG,\n            query,\n        }\n        return this.d2.models.organisationUnits\n            .list(listConfig)\n            .then(orgUnits => getRestrictedOrgUnits(orgUnits, orgUnitType))\n    }\n\n    getAvailableUserRoles = () => {\n        const data = {\n            canIssue: true,\n            fields: ['id', 'displayName'],\n            paging: false,\n        }\n        return this.d2.models.userRoles.list(data)\n    }\n\n    getAvailableDataAnalyticsDimensionRestrictions = () => {\n        const url = '/dimensions/constraints'\n        const data = { fields: ['id', 'name', 'dimensionType'], paging: false }\n        return this.d2Api.get(url, data).then(({ dimensions }) => dimensions)\n    }\n\n    updateDisabledState = (id, disabled) => {\n        const url = `/users/${id}`\n        const data = { userCredentials: { disabled: disabled } }\n        return this.d2Api.patch(url, data)\n    }\n\n    disable2FA = id => {\n        const url = `/users/${id}`\n        const data = { userCredentials: { twoFA: false } }\n        return this.d2Api.patch(url, data)\n    }\n\n    getSelectedAndAvailableLocales = username => {\n        username = username ? encodeURIComponent(username) : null\n\n        const useDbLocaleOption = {\n            id: USE_DB_LOCALE,\n            label: i18n.t('Use database locale / no translation'),\n        }\n\n        const dbLocales = this.d2Api.get('/locales/db')\n        const uiLocales = this.d2Api.get('/locales/ui')\n\n        const uiLocale = username\n            ? this.d2Api.get(`/userSettings/keyUiLocale?user=${username}`)\n            : this.d2.system.settings.get('keyUiLocale')\n\n        const dbLocale = username\n            ? this.d2Api.get(`/userSettings/keyDbLocale?user=${username}`)\n            : Promise.resolve(USE_DB_LOCALE)\n\n        return Promise.all([dbLocales, uiLocales, dbLocale, uiLocale]).then(\n            ([dbLocales, uiLocales, dbLocale, uiLocale]) => ({\n                db: {\n                    available: [useDbLocaleOption, ...dbLocales.map(mapLocale)],\n                    selected: dbLocale || USE_DB_LOCALE,\n                },\n                ui: {\n                    available: uiLocales.map(mapLocale),\n                    selected: uiLocale,\n                },\n            })\n        )\n    }\n\n    getAttributes(entityType) {\n        return this.d2Api\n            .get('attributes', {\n                fields: [\n                    'id',\n                    'displayName',\n                    'mandatory',\n                    'unique',\n                    'valueType',\n                    'optionSet[options[id,displayName]]',\n                ],\n                filter: `${entityType}Attribute:eq:true`,\n                paging: false,\n            })\n            .then(resp => resp.attributes)\n    }\n\n    isAttributeUnique(entityType, modelId, attributeId, value) {\n        return (\n            this.d2.models[entityType]\n                // All users/userGroups but current\n                .filter()\n                .on('id')\n                .notEqual(modelId)\n                // Attribute id being validated\n                // NB: this only means we are filtering users that have ANY value\n                // on the current attributeId\n                .filter()\n                .on('attributeValues.attribute.id')\n                .equals(attributeId)\n                // Value on form\n                .filter()\n                .on('attributeValues.value')\n                .equals(value)\n                .list({\n                    paging: false,\n                    fields: ['id', 'attributeValues[value, attribute[id]]'],\n                })\n                .then(userCollection => {\n                    // If no users are found at this point, the attribute value is definitely unique\n                    if (userCollection.size === 0) {\n                        return true\n                    }\n\n                    // If users are returned, this can still include records with the SAME value\n                    // on ANOTHER attribute. So we have to filter on the current value and attributeId\n                    const attributesWithValueAndId = getAttributesWithValueAndId(\n                        userCollection,\n                        value,\n                        attributeId\n                    )\n\n                    return attributesWithValueAndId.length === 0\n                })\n        )\n    }\n\n    /**\n     * Will first execute a create/update user request, and if any locale values have been set will add subsequent request to update these too.\n     * @param {Object} values - Form data produced by redux-form\n     * @param {Object} user - A d2 user model instance\n     * @param {String} initialUiLocale - Locale string for the UI, i.e. 'en'\n     * @param {String} initialDbLocale - Locale string for the DB, i.e. 'fr'\n     * @returns {Promise} Promise object for the combined ajax calls to save a user\n     * @method\n     */\n    saveOrInviteUser = (\n        values,\n        user,\n        inviteUser,\n        initialUiLocale,\n        initialDbLocale,\n        attributeFields\n    ) => {\n        const userData = parseUserSaveData(\n            values,\n            user,\n            inviteUser,\n            attributeFields\n        )\n        const postUrl = inviteUser ? '/users/invite' : '/users'\n        const saveUserPromise = user.id\n            ? this.d2Api.update(`/users/${user.id}`, userData)\n            : this.d2Api.post(postUrl, userData)\n\n        return saveUserPromise.then(response => {\n            if (response.status === 'ERROR') {\n                return Promise.reject(parse200Error(response))\n            }\n\n            const localePromises = []\n            const username = encodeURIComponent(values.username)\n\n            // Add follow-up request for setting uiLocale if needed\n            const uiLocale = values[INTERFACE_LANGUAGE]\n            if (uiLocale !== initialUiLocale) {\n                localePromises.push(\n                    this.d2Api.post(parseLocaleUrl('Ui', username, uiLocale))\n                )\n            }\n\n            // Add follow-up request for setting dbLocale if needed\n            const dbLocale = values[DATABASE_LANGUAGE]\n            if (dbLocale !== initialDbLocale) {\n                const dbLocalePromise =\n                    dbLocale === USE_DB_LOCALE\n                        ? this.d2Api.delete(\n                              `/userSettings/keyDbLocale?user=${username}`\n                          )\n                        : this.d2Api.post(\n                              parseLocaleUrl('Db', username, dbLocale)\n                          )\n                localePromises.push(dbLocalePromise)\n            }\n\n            // Dummy follow-up request to prevent Promise.all error\n            // if neither locale fields need updating\n            if (localePromises.length === 0) {\n                localePromises.push(\n                    Promise.resolve('No locale changes detected')\n                )\n            }\n            // Updating locales after user in case the user is new\n            return Promise.all(localePromises)\n        })\n    }\n\n    /**************************\n     ***** USER GROUPS ********\n     **************************/\n\n    getManagedUsers = () => {\n        const data = {\n            fields: ['id', 'displayName', 'userCredentials[username]'],\n            paging: false,\n        }\n        return this.d2.models.user.list(data).then(appendUsernameToDisplayName)\n    }\n\n    // Also used by GroupForm\n    getAvailableUserGroups = () => {\n        const data = { fields: ['id', 'displayName'], paging: false }\n        return this.d2.models.userGroups.list(data)\n    }\n\n    /**************************\n     ****** USER ROLES ********\n     **************************/\n\n    // TODO: A proper API endpoint will be made available for this call once ALL struts apps\n    // have been ported to React. Once this is done we need to update this method.\n    getGroupedAuthorities = () => {\n        if (this.groupedAuths) {\n            // Return cached version if available\n            return Promise.resolve(this.groupedAuths)\n        }\n        const url = `${this.getContextPath()}/dhis-web-commons/security/getSystemAuthorities.action`\n        return this.d2Api.request('GET', url).then(({ systemAuthorities }) => {\n            // Store on instance for subsequent requests\n            return (this.groupedAuths = groupAuthorities(systemAuthorities))\n        })\n    }\n\n    // Calling role.save() would result in an error in d2 because d2 expects you always want to\n    // save { id: <ID> } objects but authorities should be saved as a plain JSON array\n    saveRole(data) {\n        if (data.id) {\n            return this.d2Api.update(`/userRoles/${data.id}`, data)\n        } else {\n            return this.d2Api.post('/userRoles/', data)\n        }\n    }\n\n    /**************************\n     ****** CURRENT USER ******\n     **************************/\n\n    getCurrentUser = () => {\n        return this.d2.currentUser\n    }\n\n    initCurrentUser = () => {\n        return Promise.all([\n            this.d2.currentUser.getUserGroups(),\n            this.d2.currentUser.getUserRoles(),\n            this.getCurrentUserOrgUnits(),\n            this.getSystemOrgUnitRoots(),\n        ]).then(\n            ([\n                userGroups,\n                userRoles,\n                {\n                    organisationUnits,\n                    dataViewOrganisationUnits,\n                    teiSearchOrganisationUnits,\n                },\n                systemOrganisationUnitRoots,\n            ]) => {\n                return Object.assign(this.d2.currentUser, {\n                    userGroups,\n                    userRoles,\n                    organisationUnits,\n                    dataViewOrganisationUnits,\n                    teiSearchOrganisationUnits,\n                    systemOrganisationUnitRoots,\n                })\n            }\n        )\n    }\n\n    refreshCurrentUser = () => {\n        const CurrentUserClass = Object.getPrototypeOf(this.d2.currentUser)\n            .constructor\n        const meFields = [\n            ':all',\n            'organisationUnits[id]',\n            'userGroups[id]',\n            'userCredentials[:all,!user,userRoles[id]',\n        ]\n        const models = this.d2.models\n\n        return Promise.all([\n            this.d2Api.get('me', { fields: meFields }),\n            this.d2Api.get('me/authorization'),\n            this.d2Api.get('userSettings'),\n        ]).then(([me, authorities, userSettings]) => {\n            this.d2.currentUser = CurrentUserClass.create(\n                me,\n                authorities,\n                models,\n                userSettings\n            )\n            return this.initCurrentUser()\n        })\n    }\n\n    getCurrentUserOrgUnits = () => {\n        return this.d2.models.users.get(\n            this.d2.currentUser.id,\n            CURRENT_USER_ORG_UNITS_FIELDS\n        )\n    }\n\n    getSystemOrgUnitRoots = () => {\n        return this.d2.models.organisationUnits\n            .list({\n                paging: false,\n                level: 1,\n                fields: 'id,path,displayName,children::isNotEmpty',\n            })\n            .then(modelCollection => {\n                return modelCollection.toArray()\n            })\n    }\n\n    updateCurrentUserGroupMembership = (groupId, deleteMembership) => {\n        const method = deleteMembership ? 'delete' : 'post'\n        const url = `/users/${this.d2.currentUser.id}/userGroups/${groupId}`\n        return this.d2Api[method](url)\n    }\n}\nconst api = new Api()\nexport default api\n","/* eslint-disable max-params */\n\n/**\n * This module contains the actions that may be dispatched to reducers. Only functions that are out of the ordinary have been documented.\n * @module actions\n */\n\nimport * as ACTIONS from '../constants/actionTypes'\nimport { PAGE as DEFAULT_PAGE } from '../constants/defaults'\nimport api from '../api'\n\n/**\n * Convenience function for creating a redux action\n * @param {String} type - The action type\n * @param {any} payload - The action payload\n * @return {Object} - An action object with type and payload property\n * @function\n */\nconst createAction = (type, payload) => ({ type, payload })\n\n/**********\n * THUNKS *\n **********/\n\n/**\n * Helper function for fetching lists. Used by getList, incrementPage and decrementPage.\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @param {Object} promise - The promise to await\n * @param {String} type - The type of list that was requested\n * @param {Boolean} silent - Flag by which dispatching the LIST_REQUESTED action can be skipped\n * @function\n */\nconst createListActionSequence = async (dispatch, promise, type, silent) => {\n    if (!silent) dispatch(createAction(ACTIONS.LIST_REQUESTED, type))\n\n    try {\n        const items = await promise\n        dispatch(createAction(ACTIONS.LIST_RECEIVED, { type, items }))\n    } catch (error) {\n        dispatch(createAction(ACTIONS.LIST_ERRORED, { type, error }))\n    }\n}\n\nexport const getList = (entityName, silent) => (dispatch, getState) => {\n    const { filter, pager } = getState()\n    const page = pager ? pager.page : DEFAULT_PAGE\n    const promise = api.getList(entityName, page, filter)\n    createListActionSequence(dispatch, promise, entityName, silent)\n}\n\nexport const incrementPage = pager => (dispatch, getState) => {\n    const {\n        list: { type },\n    } = getState()\n    createListActionSequence(dispatch, pager.getNextPage(), type)\n}\n\nexport const decrementPage = pager => (dispatch, getState) => {\n    const {\n        list: { type },\n    } = getState()\n    createListActionSequence(dispatch, pager.getPreviousPage(), type)\n}\n\n/**\n * Helper function for general fetch scenarios. Used by `getItem`, `initCurrentUser` and `refreshCurrentUser`.\n * @param {Object} actions - The action types to dispatch\n * @param {String} actions.requested - The name of the action to dispatch when initializing the request\n * @param {String} actions.received - The name of the action to dispatch on successfull response\n * @param {String} actions.errored - The name of the action to dispatch when request failed\n * @param {Object} promise - The promise to await\n * @param {Function} dispatch - Redux helper function that can dispatch an action\n * @function\n */\nconst createAsyncActionSequence = async (actionTypes, promise, dispatch) => {\n    dispatch(createAction(actionTypes.requested))\n\n    try {\n        const payload = await promise\n        dispatch(createAction(actionTypes.received, payload))\n    } catch (error) {\n        dispatch(createAction(actionTypes.errored, error))\n    }\n}\n/**\n * Gets an item of a specified type and dispatches actions on request, response and error\n * @param {String} entityName - The type of item to fetch, i.e. user / userRole / userGroup\n * @param {String} id - The item ID\n * @function\n */\nexport const getItem = (entityName, id) => dispatch => {\n    createAsyncActionSequence(\n        {\n            requested: ACTIONS.ITEM_REQUESTED,\n            received: ACTIONS.ITEM_RECEIVED,\n            errored: ACTIONS.ITEM_ERRORED,\n        },\n        api.getItem(entityName, id),\n        dispatch\n    )\n}\n\nconst currentUserActions = {\n    requested: ACTIONS.CURRENT_USER_REQUESTED,\n    received: ACTIONS.CURRENT_USER_RECEIVED,\n    errored: ACTIONS.CURRENT_USER_ERRORED,\n}\n\nexport const initCurrentUser = () => dispatch => {\n    createAsyncActionSequence(\n        currentUserActions,\n        api.initCurrentUser(),\n        dispatch\n    )\n}\n\nexport const refreshCurrentUser = () => dispatch => {\n    createAsyncActionSequence(\n        currentUserActions,\n        api.refreshCurrentUser(),\n        dispatch\n    )\n}\n\n/*****************\n * PLAIN ACTIONS *\n *****************/\nexport const initNewItem = entityType => {\n    const newItem = api.getD2().models[entityType].create()\n    return createAction(ACTIONS.INIT_NEW_ITEM, newItem)\n}\n\nexport const clearItem = () => {\n    return createAction(ACTIONS.CLEAR_ITEM)\n}\n\nexport const updateFilter = (updateKey, updateValue) => {\n    return createAction(ACTIONS.FILTER_UPDATED, {\n        updateKey,\n        updateValue,\n    })\n}\n\nexport const resetFilter = () => {\n    return createAction(ACTIONS.FILTER_RESET)\n}\n\nexport const resetPager = () => {\n    return createAction(ACTIONS.PAGER_RESET)\n}\n\nexport const showSnackbar = props => {\n    return createAction(ACTIONS.SHOW_SNACKBAR, props)\n}\n\nexport const hideSnackbar = () => {\n    return createAction(ACTIONS.HIDE_SNACKBAR)\n}\n\nexport const showDialog = (content, props) => {\n    return createAction(ACTIONS.SHOW_DIALOG, { content, props })\n}\n\nexport const hideDialog = () => {\n    return createAction(ACTIONS.HIDE_DIALOG)\n}\n\nexport const showSharingDialog = (id, type) => {\n    return createAction(ACTIONS.SHOW_SHARING_DIALOG, { id, type })\n}\n\nexport const hideSharingDialog = () => {\n    return createAction(ACTIONS.HIDE_SHARING_DIALOG)\n}\n","import history from './history'\n/**\n * Pushed new routes to the hashHistory object.\n * Can be used to imperatively trigger route changes in the Router.\n * @param {String} path - Route path to navigate to\n * @memberof module:utils\n * @function\n */\nconst navigateTo = path => {\n    history.push(path)\n}\n\nexport default navigateTo\n","/**\n * If you import this module into a component that renders a DataTable,\n * it will render MaterialUI checkboxes for TRUE values and keep FALSE values empty.\n * @module List/booleanValueRenderer\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport CheckIcon from 'material-ui/svg-icons/navigation/check'\nimport { addValueRenderer } from 'd2-ui/lib/data-table/data-value/valueRenderers'\n\n/**\n * Defines behavior for the DataTable when receiving boolean values\n * @param {Object} DataTableCell - A DataTableCell containing a value property\n * @param {Boolean} DataTableCell.value - The cell value\n * @returns Either a CheckIcon or null\n */\nconst BooleanCellField = ({ value }) =>\n    value ? (\n        <div style={{ width: '40px' }}>\n            <CheckIcon />\n        </div>\n    ) : null\n\nBooleanCellField.propTypes = { value: PropTypes.bool }\n\naddValueRenderer(({ value }) => typeof value === 'boolean', BooleanCellField)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { connect } from 'react-redux'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DataTable from 'd2-ui/lib/data-table/DataTable.component'\nimport Pagination from 'd2-ui/lib/pagination/Pagination.component'\nimport LoadingMask from 'd2-ui/lib/loading-mask/LoadingMask.component'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport 'd2-ui/lib/css/DataTable.css'\nimport 'd2-ui/lib/css/Pagination.css'\nimport navigateTo from '../../utils/navigateTo'\nimport { listSelector, pagerSelector } from '../../selectors'\nimport {\n    getList,\n    resetFilter,\n    resetPager,\n    incrementPage,\n    decrementPage,\n    showSnackbar,\n    hideSnackbar,\n} from '../../actions'\nimport ErrorMessage from '../ErrorMessage'\nimport './booleanValueRenderer'\n\nconst styles = {\n    dataTableWrap: {\n        flex: 1,\n    },\n    clearBoth: {\n        clear: 'both',\n    },\n    filterBar: {\n        display: 'table',\n        marginBottom: '1rem',\n        width: '100%',\n    },\n    headerBarPagination: {\n        float: 'right',\n        marginTop: '14px',\n    },\n    headerBarFilterWrap: {\n        display: 'table',\n        marginRight: '230px',\n    },\n    pagination: {\n        userSelect: 'none',\n    },\n}\n\n/**\n * Generic component that fetches list data, and displays this in a DataTable with paging and filtering\n */\nclass List extends Component {\n    componentDidMount() {\n        const {\n            items,\n            getList,\n            resetFilter,\n            resetPager,\n            entityType,\n            listType,\n        } = this.props\n\n        // Only fetch when there is no suitable list available\n        if (items === null || listType !== entityType) {\n            // If list type is defined but doesn't match current entity\n            // this means the user has switched section so pager and filter must be reset\n            if (listType !== entityType) {\n                resetFilter()\n                resetPager()\n            }\n            getList(entityType)\n        }\n    }\n\n    executeEditIfAllowed = model => {\n        const {\n            isContextActionAllowed,\n            primaryAction,\n            showSnackbar,\n            hideSnackbar,\n        } = this.props\n        if (isContextActionAllowed(model, 'edit')) {\n            primaryAction(model)\n        } else {\n            showSnackbar({\n                message: `${i18n.t('You are not allowed to edit')} ${\n                    model.displayName\n                }`,\n                action: i18n.t('Confirm'),\n                autoHideDuration: null,\n                onActionClick: hideSnackbar,\n            })\n        }\n    }\n\n    getPagerConfig(pager) {\n        if (!pager) {\n            return {\n                page: null,\n                pageCount: null,\n                total: null,\n                currentlyShown: null,\n            }\n        }\n        return pager\n    }\n\n    renderPagination() {\n        const { pager, items, incrementPage, decrementPage } = this.props\n        const { page, pageCount, total, currentlyShown } = this.getPagerConfig(\n            pager\n        )\n        const shouldHide =\n            !items || items.length === 0 || typeof items === 'string'\n        const style = shouldHide\n            ? { ...styles.pagination, visibility: 'hidden' }\n            : styles.pagination\n        const paginationProps = {\n            hasNextPage: () =>\n                page && items && items.length && page < pageCount,\n            hasPreviousPage: () => page && items && items.length && page > 1,\n            onNextPageClick: () => {\n                incrementPage(pager)\n            },\n            onPreviousPageClick: () => {\n                decrementPage(pager)\n            },\n            total,\n            currentlyShown,\n            style,\n        }\n\n        return (\n            <div style={style}>\n                <Pagination {...paginationProps} />\n            </div>\n        )\n    }\n\n    renderHeaderBar() {\n        const { FilterComponent, entityType } = this.props\n        return (\n            <div className=\"data-table__filter-bar\" style={styles.filterBar}>\n                <div style={styles.headerBarPagination}>\n                    {this.renderPagination()}\n                </div>\n                <div style={styles.headerBarFilterWrap}>\n                    <FilterComponent entityType={entityType} />\n                </div>\n            </div>\n        )\n    }\n\n    renderDataTable() {\n        const {\n            items,\n            columns,\n            contextMenuActions,\n            contextMenuIcons,\n            isContextActionAllowed,\n        } = this.props\n\n        if (typeof items === 'string') {\n            const introText = i18n.t('There was an error fetching the list')\n            return <ErrorMessage introText={introText} errorMessage={items} />\n        }\n\n        if (items === null) {\n            return <LoadingMask />\n        }\n\n        if (items.length === 0) {\n            return <div style={styles.clearBoth}>No results found.</div>\n        }\n        return (\n            <DataTable\n                rows={items}\n                columns={columns}\n                primaryAction={this.executeEditIfAllowed}\n                contextMenuActions={contextMenuActions}\n                contextMenuIcons={contextMenuIcons}\n                isContextActionAllowed={isContextActionAllowed}\n            />\n        )\n    }\n\n    render() {\n        const { sectionName, newItemPath, className } = this.props\n        return (\n            <div style={styles.dataTableWrap} className={className}>\n                <Heading>{sectionName}</Heading>\n                {this.renderHeaderBar()}\n                {this.renderDataTable()}\n                {this.renderPagination()}\n                <FloatingActionButton\n                    className=\"entity-list__add-new-entity\"\n                    onClick={() => navigateTo(newItemPath)}\n                >\n                    <ContentAdd />\n                </FloatingActionButton>\n            </div>\n        )\n    }\n}\n\nList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n    pager: PropTypes.object,\n    sectionName: PropTypes.string.isRequired,\n    getList: PropTypes.func.isRequired,\n    incrementPage: PropTypes.func.isRequired,\n    decrementPage: PropTypes.func.isRequired,\n    resetPager: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    showSnackbar: PropTypes.func.isRequired,\n    hideSnackbar: PropTypes.func.isRequired,\n    entityType: PropTypes.string.isRequired,\n    newItemPath: PropTypes.string.isRequired,\n    listType: PropTypes.string,\n    FilterComponent: PropTypes.func.isRequired,\n    columns: PropTypes.arrayOf(String).isRequired,\n    primaryAction: PropTypes.func.isRequired,\n    contextMenuActions: PropTypes.object.isRequired,\n    contextMenuIcons: PropTypes.object.isRequired,\n    isContextActionAllowed: PropTypes.func.isRequired,\n    className: PropTypes.string,\n}\n\nList.defaultProps = {\n    className: 'paged-filterable-data-table',\n}\n\nconst mapStateToProps = state => {\n    return {\n        listType: state.list.type,\n        items: listSelector(state.list.items, state.currentUser.userGroups),\n        pager: pagerSelector(state.pager),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        getList,\n        resetFilter,\n        resetPager,\n        incrementPage,\n        decrementPage,\n        showSnackbar,\n        hideSnackbar,\n    }\n)(List)\n","import List from './List'\nexport default List\n","import store from '../store'\nimport api from '../api'\nimport { refreshCurrentUser as refresh } from '../actions'\nimport { USER, USER_ROLE, USER_GROUP } from '../constants/entityTypes'\n\n/**\n * This function can be called after users/ userRoles/ urserGroups have been updated or deleted.\n * It will determine if these changes impact the current user.\n * If so, an action is dispatched that will trigger the currentUser state to be refreshed.\n * Or, in case a currentUser was disabled or removed it will trigger a page refresh\n * Currently this function is used by:\n * - `UserForm.saveGroup`\n * - `GroupForm.saveGroup`\n * - `RoleForm.saveRole`\n * - `onRemoveConfirm` in `sharedActions`\n * - `updateDisabledState` in `UserContextMenuActions`\n *\n * @param {String} entityType - The type of object that was changed\n * @param {Object} model - A d2 model or POJO that provides at least the ID of the entity that was changed\n * @param {String} [changeType] - The type of change that happened\n * @memberof module:utils\n * @function\n */\nconst detectCurrentUserChanges = (model, disable) => {\n    const { currentUser } = store.getState()\n    const entityType = model.modelDefinition.name\n\n    if (entityType === USER && model.id === currentUser.id) {\n        disable ? logout() : refreshCurrentUser()\n    }\n\n    if (entityType === USER_ROLE && currentUser.userRoles.get(model.id)) {\n        refreshCurrentUser()\n    }\n\n    if (entityType === USER_GROUP && currentUser.userGroups.get(model.id)) {\n        refreshCurrentUser()\n    }\n}\n\nconst refreshCurrentUser = () => {\n    store.dispatch(refresh())\n}\n\nconst logout = () => {\n    const contextPath = api.getContextPath()\n    const logoutSuffix = '/dhis-web-commons-security/logout.action'\n    const logoutUrl = contextPath + logoutSuffix\n    window.location.assign(logoutUrl)\n}\n\nexport default detectCurrentUserChanges\n","/* eslint-disable max-params */\n\nimport store from '../store'\nimport {\n    getList,\n    showSnackbar,\n    hideSnackbar,\n    showSharingDialog,\n} from '../actions'\nimport createHumanErrorMessage from './createHumanErrorMessage'\nimport detectCurrentUserChanges from './detectCurrentUserChanges'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const deleteModel = ({ model, entityType }) => {\n    const interpolator = {\n        type: model.modelDefinition.displayName,\n        displayName: model.displayName,\n    }\n    const confirmMsg = i18n.t(\n        'Are you sure you want to remove the {{type}} \"{{displayName}}\"?',\n        interpolator\n    )\n    const successMsg = i18n.t(\n        '{{type}} \"{{displayName}}\" removed successfully',\n        interpolator\n    )\n    const errorMsg = i18n.t(\n        'There was a problem removing {{type}} \"{{displayName}}\"?',\n        interpolator\n    )\n    const snackbarProps = {\n        message: confirmMsg,\n        action: i18n.t('Confirm'),\n        autoHideDuration: null,\n        onActionClick: () =>\n            onRemoveConfirm(model, successMsg, errorMsg, entityType),\n    }\n\n    store.dispatch(showSnackbar(snackbarProps))\n}\n\nconst onRemoveConfirm = async (model, successMsg, errorMsg, entityType) => {\n    store.dispatch(hideSnackbar())\n\n    try {\n        await model.delete()\n        store.dispatch(showSnackbar({ message: successMsg }))\n        store.dispatch(getList(entityType))\n        detectCurrentUserChanges(model)\n    } catch (error) {\n        const msg = createHumanErrorMessage(error, errorMsg)\n        store.dispatch(showSnackbar({ message: msg }))\n    }\n}\n\nexport const openSharingSettings = ({ data: model }) => {\n    store.dispatch(showSharingDialog(model.id, model.modelDefinition.name))\n}\n","/* eslint-disable max-params */\n\nimport i18n from '@dhis2/d2-i18n'\nimport capitalize from 'lodash.capitalize'\nimport api from '../api'\nimport { USER, USER_GROUP } from '../constants/entityTypes'\nimport { USER_ATTRIBUTE_FIELD_PREFIX } from './attributeFieldHelpers'\nimport { USERNAME, FORM_NAME as USER_FORM } from '../containers/UserForm/config'\nimport {\n    CODE,\n    NAME,\n    FORM_NAME as GROUP_FORM,\n} from '../containers/GroupForm/config'\nimport { FORM_NAME as REPLICATE_USER_FORM } from '../components/ReplicateUserForm'\nimport createHumanErrorMessage from './createHumanErrorMessage'\n\nexport async function asyncValidatorSwitch(values, _, props, blurredField) {\n    const priorErrors = props.asyncErrors\n    // Skip aSync validation when submitting the form because all fields have been\n    // validated on blur anyway, and the server will reject them\n    if (!blurredField && !priorErrors) {\n        return Promise.resolve()\n    }\n\n    let newError\n    if (props.form === USER_FORM && blurredField === USERNAME) {\n        newError = await getUserNameError(values, props)\n    } else if (\n        props.form === GROUP_FORM &&\n        (blurredField === CODE || blurredField === NAME)\n    ) {\n        newError = await getGenericUniquenessError(values, props, blurredField)\n    } else {\n        newError = await getAttributeUniquenessError(\n            values,\n            props,\n            blurredField\n        )\n    }\n\n    const errors =\n        priorErrors || newError ? { ...priorErrors, ...newError } : undefined\n\n    if (errors) {\n        throw errors\n    } else {\n        return Promise.resolve()\n    }\n}\n\nexport async function asyncValidateUsername(values, _, props, blurredField) {\n    return asyncSingleFieldValidator(\n        values,\n        props,\n        blurredField,\n        getUserNameError\n    )\n}\n\nexport async function asyncValidateUniqueness(values, _, props, blurredField) {\n    return asyncSingleFieldValidator(\n        values,\n        props,\n        blurredField,\n        getGenericUniquenessError\n    )\n}\n\nasync function asyncSingleFieldValidator(\n    values,\n    props,\n    blurredField,\n    apiMethod\n) {\n    if (!blurredField) {\n        return Promise.resolve()\n    }\n    const error = await apiMethod(values, props, blurredField)\n    if (error) {\n        throw error\n    } else {\n        return Promise.resolve()\n    }\n}\n\nasync function getUserNameError(values, props) {\n    const newUserName = values[USERNAME]\n    const editingExistingUser =\n        props.form !== REPLICATE_USER_FORM && props.user && props.user.id\n\n    if (!newUserName || editingExistingUser) {\n        return Promise.resolve()\n    }\n\n    try {\n        const modelCollection = await api.genericFind(\n            'users',\n            'userCredentials.username',\n            newUserName\n        )\n        if (modelCollection.size > 0) {\n            return {\n                [USERNAME]: i18n.t('Username already taken'),\n            }\n        }\n    } catch (error) {\n        return {\n            [USERNAME]: i18n.t(\n                'There was a problem whilst checking the availability of this username'\n            ),\n        }\n    }\n}\n\n/**\n * Calls the genericFind method of the Api instance to find out whether a userRole/userGroup model instance with the same property value exists\n * @param {Object} values - redux form values object\n * @param {Object} props - Component properties, containing either a userRole or userGroup model\n * @param {Object} fieldName - The property name to check on uniqueness\n * @returns {Object} errors - Will be empty of the entry was unique. Otherwise will contain error message  for duplicate property values.\n * @memberof module:utils\n * @function\n */\n\nasync function getGenericUniquenessError(values, props, fieldName) {\n    const { group, role } = props\n    const model = role || group\n    const entityName = model.modelDefinition.name\n    const fieldValue = values[fieldName]\n    const fieldDisplayName = capitalize(fieldName)\n\n    if (!fieldValue) {\n        return Promise.resolve()\n    }\n\n    try {\n        const modelCollection = await api.genericFind(\n            entityName,\n            fieldName,\n            fieldValue\n        )\n        if (modelCollection.size > 0) {\n            const foundId = modelCollection.values().next().value.id\n            if (foundId !== model.id) {\n                return {\n                    [fieldName]: i18n.t(\n                        '{{fieldDisplayName}} is already taken',\n                        {\n                            fieldDisplayName,\n                        }\n                    ),\n                }\n            }\n        }\n    } catch (error) {\n        const fallBackMsg = i18n.t(\n            'Could not verify if this {{fieldDisplayName}} is unique',\n            {\n                fieldDisplayName,\n            }\n        )\n\n        return {\n            [fieldName]: createHumanErrorMessage(error, fallBackMsg),\n        }\n    }\n}\n\nasync function getAttributeUniquenessError(values, props, blurredField) {\n    const value = values[blurredField]\n\n    if (!value) {\n        return Promise.resolve()\n    }\n\n    const entityType = props.form === USER_FORM ? USER : USER_GROUP\n    const id =\n        entityType === USER ? props.user.id || '_' : props.group.id || '_'\n    const attributeId = blurredField.replace(USER_ATTRIBUTE_FIELD_PREFIX, '')\n\n    try {\n        const isUnique = await api.isAttributeUnique(\n            entityType,\n            id,\n            attributeId,\n            value\n        )\n        if (!isUnique) {\n            return {\n                [blurredField]: i18n.t(\n                    'Attribute value needs to be unique, value already taken.'\n                ),\n            }\n        }\n    } catch (error) {\n        return {\n            [blurredField]: i18n.t(\n                'There was a problem checking if this attribute value is unique'\n            ),\n        }\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Field, reduxForm } from 'redux-form'\nimport { RaisedButton } from 'material-ui'\nimport { renderTextField } from '../utils/fieldRenderers'\nimport i18n from '@dhis2/d2-i18n'\nimport api from '../api'\nimport { connect } from 'react-redux'\nimport { USER } from '../constants/entityTypes'\nimport { USERNAME, PASSWORD } from '../containers/UserForm/config'\nimport { username, password } from '../utils/validators'\nimport { asyncValidateUsername } from '../utils/validatorsAsync'\nimport createHumanErrorMessage from '../utils/createHumanErrorMessage'\nimport { getList, hideDialog, showSnackbar, hideSnackbar } from '../actions'\n\nexport const FORM_NAME = 'replicateUserForm'\n\n/**\n * Form component for replicating a using redux-form and displayed in a Dialog\n */\nclass ReplicateUserForm extends Component {\n    replicateUser = async data => {\n        const { user, hideDialog } = this.props\n        const { username, password } = data\n        try {\n            await api.replicateUser(user.id, username, password)\n            this.replicateSuccesHandler(user.displayName)\n        } catch (error) {\n            this.replicateErrorHandler(error)\n        }\n        hideDialog()\n    }\n\n    replicateSuccesHandler = displayName => {\n        const { getList, showSnackbar } = this.props\n        const message = i18n.t(\n            'User \"{{displayName}}\" replicated successfuly',\n            {\n                displayName,\n            }\n        )\n        showSnackbar({ message })\n        getList(USER, true)\n    }\n\n    replicateErrorHandler = error => {\n        const { showSnackbar } = this.props\n        showSnackbar({\n            message: createHumanErrorMessage(\n                error,\n                i18n.t('There was a problem replicating the user')\n            ),\n        })\n    }\n\n    render() {\n        const {\n            submitting,\n            pristine,\n            valid,\n            handleSubmit,\n            hideDialog,\n            asyncValidating,\n        } = this.props\n\n        const disableSubmit = Boolean(\n            submitting || asyncValidating || pristine || !valid\n        )\n\n        return (\n            <form onSubmit={handleSubmit(this.replicateUser)}>\n                <Field\n                    name={USERNAME}\n                    component={renderTextField}\n                    label={i18n.t('Username')}\n                    hintText={i18n.t('Username for new user')}\n                    validate={[username]}\n                />\n                <Field\n                    name={PASSWORD}\n                    component={renderTextField}\n                    label={i18n.t('Password')}\n                    hintText={i18n.t('Password for new user')}\n                    validate={[password]}\n                    type=\"password\"\n                />\n                <div style={{ marginTop: 16 }}>\n                    <RaisedButton\n                        label={i18n.t('Replicate')}\n                        type=\"submit\"\n                        disabled={disableSubmit}\n                        primary={true}\n                    />\n                    <RaisedButton\n                        label={i18n.t('Cancel')}\n                        onClick={hideDialog}\n                        style={{ marginLeft: 8 }}\n                    />\n                </div>\n            </form>\n        )\n    }\n}\n\nReplicateUserForm.propTypes = {\n    user: PropTypes.object.isRequired,\n    hideDialog: PropTypes.func.isRequired,\n    getList: PropTypes.func.isRequired,\n    showSnackbar: PropTypes.func.isRequired,\n    formState: PropTypes.object,\n    asyncValidating: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    valid: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({ formState: state.form[FORM_NAME] })\n\nconst ReduxFormWrapped = reduxForm({\n    form: FORM_NAME,\n    asyncValidate: asyncValidateUsername,\n    asyncBlurFields: [USERNAME],\n})(ReplicateUserForm)\n\nexport default connect(\n    mapStateToProps,\n    {\n        getList,\n        hideDialog,\n        showSnackbar,\n        hideSnackbar,\n    }\n)(ReduxFormWrapped)\n","/**\n * Defines the UserList context menu for current user on a given UserUser model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/UserList/UserContextMenuActions\n */\n\nimport React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport Action from 'd2-ui/lib/action/Action'\nimport navigateTo from '../../utils/navigateTo'\nimport store from '../../store'\nimport api from '../../api'\nimport { deleteModel } from '../../utils/sharedActions'\nimport { USER } from '../../constants/entityTypes'\nimport {\n    showDialog,\n    hideDialog,\n    showSnackbar,\n    hideSnackbar,\n    getList,\n} from '../../actions'\nimport ReplicateUserForm from '../../components/ReplicateUserForm'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges'\n\nconst profile = 'profile'\nconst edit = 'edit'\nconst remove = 'remove'\nconst replicate = 'replicate'\nconst disable = 'disable'\nconst enable = 'enable'\nconst disable_2fa = 'disable_2fa'\n\n/**\n * Determines whether a specific user action should be visible for current user and given a User Model instance\n * @param {Object} model - d2 User model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\nexport const isUserContextActionAllowed = (model, action) => {\n    const { currentUser } = store.getState()\n\n    if (!model) {\n        return false\n    }\n\n    const {\n        access,\n        userCredentials: { disabled, twoFA },\n    } = model\n\n    switch (action) {\n        case profile:\n            return access.read\n        case edit:\n            return access.update\n        case remove:\n            return currentUser.id !== model.id && access.delete\n        case replicate:\n            return (\n                access.update && currentUser.authorities.has('F_REPLICATE_USER')\n            )\n        case disable:\n            return access.update && !disabled\n        case enable:\n            return access.update && disabled\n        case disable_2fa:\n            return access.update && twoFA\n        default:\n            return true\n    }\n}\n\nexport const userContextMenuIcons = {\n    [profile]: 'account_circle',\n    [edit]: 'edit',\n    [remove]: 'delete',\n    [replicate]: 'content_copy',\n    [disable]: 'block',\n    [enable]: 'playlist_add_check',\n    [disable_2fa]: 'phonelink_erase',\n}\n\nexport const userContextMenuActions = Action.createActionsFromNames([\n    profile,\n    edit,\n    remove,\n    replicate,\n    disable,\n    enable,\n    disable_2fa,\n])\n\nuserContextMenuActions.profile.subscribe(({ data: { id } }) => {\n    navigateTo(`/users/view/${id}`)\n})\n\nuserContextMenuActions.edit.subscribe(({ data: { id } }) => {\n    navigateTo(`/users/edit/${id}`)\n})\n\nuserContextMenuActions.remove.subscribe(({ data: user }) => {\n    const params = {\n        model: user,\n        entityType: USER,\n    }\n    deleteModel(params)\n})\n\nuserContextMenuActions.replicate.subscribe(({ data: user }) => {\n    const content = <ReplicateUserForm user={user} />\n    const props = {\n        onRequestClose: () => store.dispatch(hideDialog()),\n        title: i18n.t('Replicate user'),\n    }\n    store.dispatch(showDialog(content, props))\n})\n\nuserContextMenuActions.disable.subscribe(({ data }) => {\n    updateDisabledState(data, true)\n})\n\nuserContextMenuActions.enable.subscribe(({ data }) => {\n    updateDisabledState(data, false)\n})\n\nuserContextMenuActions.disable_2fa.subscribe(({ data }) => {\n    showDisable2FAConfirmation(data)\n})\n\nconst showDisable2FAConfirmation = model => {\n    const baseMsg = i18n.t(\n        'Are you sure you want to disable two factor authentication for'\n    )\n    const snackbarProps = {\n        message: `${baseMsg} ${model.displayName}`,\n        action: i18n.t('Confirm'),\n        autoHideDuration: null,\n        onActionClick: () => onDisable2FAConfirm(model),\n    }\n    store.dispatch(showSnackbar(snackbarProps))\n}\n\nconst onDisable2FAConfirm = async model => {\n    store.dispatch(hideSnackbar())\n\n    const { displayName, id } = model\n    try {\n        await api.disable2FA(id)\n        const baseMsg = i18n.t(\n            'Succesfully disabled two factor authentication for'\n        )\n        store.dispatch(showSnackbar({ message: `${baseMsg} ${displayName}` }))\n        store.dispatch(getList(USER))\n    } catch (error) {\n        store.dispatch(\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t(\n                        'There was a problem updating two factor authentication'\n                    )\n                ),\n            })\n        )\n    }\n}\n\nconst updateDisabledState = (model, shouldDisable) => {\n    const baseMsg = shouldDisable\n        ? i18n.t('Are you sure you want to disable')\n        : i18n.t('Are you sure you want to enable')\n\n    const snackbarProps = {\n        message: `${baseMsg} ${model.displayName}`,\n        action: i18n.t('Confirm'),\n        autoHideDuration: null,\n        onActionClick: () => onDisableConfirm(model, shouldDisable),\n    }\n    store.dispatch(showSnackbar(snackbarProps))\n}\n\nconst onDisableConfirm = async (model, shouldDisable) => {\n    store.dispatch(hideSnackbar())\n\n    const { displayName, id } = model\n    try {\n        await api.updateDisabledState(id, shouldDisable)\n        const baseMsg = shouldDisable\n            ? i18n.t('sucessfully disabled')\n            : i18n.t('successfully enabled')\n        store.dispatch(showSnackbar({ message: `${displayName} ${baseMsg}` }))\n        store.dispatch(getList(USER))\n\n        if (shouldDisable) {\n            detectCurrentUserChanges(model, true)\n        }\n    } catch (error) {\n        store.dispatch(\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t('There was a problem updating the enabled state')\n                ),\n            })\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport isEqual from 'lodash.isequal'\nimport { USER } from '../constants/entityTypes'\nimport { connect } from 'react-redux'\nimport { updateFilter, hideDialog, getList } from '../actions'\nimport SearchableOrgUnitTree from '../components/SearchableOrgUnitTree'\nimport {\n    DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS,\n    TEI_SEARCH_ORG_UNITS,\n} from '../containers/UserForm/config'\n\n/**\n * Displayed inside of a Dialog and displayed by clicking the OrganisationUnitInput.\n * This component renders a SearchableOrgUnitTree and lets a user select one or more organisation units.\n * When this selection is applied the filter state is updated.\n */\nclass OrganisationUnitFilter extends Component {\n    applyFilter = newSelectedOrgUnits => {\n        const {\n            updateFilter,\n            hideDialog,\n            getList,\n            selectedOrgUnits,\n        } = this.props\n\n        if (!isEqual(newSelectedOrgUnits, selectedOrgUnits)) {\n            updateFilter('organisationUnits', newSelectedOrgUnits)\n            getList(USER)\n        }\n\n        hideDialog()\n    }\n\n    render() {\n        const { selectedOrgUnits, hideDialog } = this.props\n        return (\n            <SearchableOrgUnitTree\n                orgUnitType={TEI_SEARCH_ORG_UNITS}\n                selectedOrgUnits={selectedOrgUnits}\n                confirmSelection={this.applyFilter}\n                cancel={hideDialog}\n            />\n        )\n    }\n}\n\nOrganisationUnitFilter.propTypes = {\n    selectedOrgUnits: PropTypes.array.isRequired,\n    updateFilter: PropTypes.func.isRequired,\n    hideDialog: PropTypes.func.isRequired,\n    getList: PropTypes.func.isRequired,\n    fallbackOrgUnits: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n    selectedOrgUnits: state.filter.organisationUnits,\n    fallbackOrgUnits: state.currentUser[DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS],\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        updateFilter,\n        hideDialog,\n        getList,\n    }\n)(OrganisationUnitFilter)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport TextField from 'material-ui/TextField'\nimport ActionOpenInNew from 'material-ui/svg-icons/action/open-in-new'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { showDialog, hideDialog } from '../actions'\nimport OrganisationUnitFilter from './OrganisationUnitFilter'\nimport { orgUnitsAsStringSelector } from '../selectors'\n\nconst styles = {\n    wrap: {\n        position: 'relative',\n        lineHeight: '24px',\n        height: '72px',\n        cursor: 'pointer',\n        float: 'left',\n        marginRight: '1rem',\n    },\n    icon: {\n        position: 'absolute',\n        right: 0,\n        top: 38,\n        width: 20,\n        height: 20,\n        color: 'rgba(0, 0, 0, 0.3)',\n        cursor: 'pointer',\n    },\n    textField: {\n        cursor: 'pointer',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        width: '152px',\n    },\n    input: {\n        width: 'calc(100% - 20px)',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}\n\n/**\n * Part of the UserFilter. This component renders the displayNames of the organisation units that have been set in the filter state.\n * If 3 or more units are selected in the filter, only the length of this array will be displayed.\n */\nclass OrganisationUnitInput extends Component {\n    focusOrgUnitInput = () => {\n        this.refs.orgUnitInput.focus()\n    }\n\n    showOrgTreeInDialog = () => {\n        const { showDialog, hideDialog } = this.props\n        const content = <OrganisationUnitFilter />\n        const props = {\n            onRequestClose: hideDialog,\n            title: i18n.t('Select an organisation unit'),\n            contentStyle: {\n                // This doesn't actually influence the height of the dialogue\n                // but it will force it upwards, enabling it to have more height\n                // The actual height is determined by a scrollbox inside the filter component\n                minHeight: '100vh',\n            },\n        }\n        showDialog(content, props)\n    }\n\n    render() {\n        const { organisationUnits } = this.props\n        return (\n            <div style={styles.wrap} onClick={this.focusOrgUnitInput}>\n                <ActionOpenInNew style={styles.icon} />\n                <TextField\n                    ref=\"orgUnitInput\"\n                    style={styles.textField}\n                    floatingLabelText={i18n.t('Organisation unit')}\n                    onFocus={this.showOrgTreeInDialog}\n                    value={organisationUnits}\n                    inputStyle={styles.input}\n                />\n            </div>\n        )\n    }\n}\n\nOrganisationUnitInput.propTypes = {\n    organisationUnits: PropTypes.string.isRequired,\n    showDialog: PropTypes.func.isRequired,\n    hideDialog: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    organisationUnits: orgUnitsAsStringSelector(state.filter.organisationUnits),\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        showDialog,\n        hideDialog,\n    }\n)(OrganisationUnitInput)\n","export const QUERY = 'query'\nexport const INACTIVE_MONTHS = 'inactiveMonths'\nexport const INVITATION_STATUS = 'invitationStatus'\nexport const SELF_REGISTERED = 'selfRegistered'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport TextField from 'material-ui/TextField/TextField'\nimport debounce from 'lodash.debounce'\nimport { updateFilter, getList } from '../actions'\nimport { QUERY } from '../constants/filterFieldNames'\n\nconst style = {\n    float: 'left',\n    marginRight: '1rem',\n    width: '236px',\n}\n\n/**\n * Generic search filter component that is used by the RoleList and the GroupList\n */\nclass SearchFilter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            localQueryStr: props.filter.query,\n        }\n        this.updateSearchFilter = debounce(this.updateSearchFilter, 375)\n    }\n\n    updateSearchFilter = newValue => {\n        const { getList, entityType, updateFilter } = this.props\n        updateFilter(QUERY, newValue)\n        getList(entityType)\n    }\n\n    onQueryStrChange = event => {\n        const value = event.target.value\n        this.setState({ localQueryStr: value })\n        this.updateSearchFilter(value)\n    }\n\n    render() {\n        const { localQueryStr } = this.state\n        return (\n            <TextField\n                className=\"search-input\"\n                floatingLabelText={i18n.t('Search by name')}\n                style={style}\n                hintText={''}\n                value={localQueryStr}\n                type=\"search\"\n                onChange={this.onQueryStrChange}\n            />\n        )\n    }\n}\n\nSearchFilter.propTypes = {\n    filter: PropTypes.object.isRequired,\n    getList: PropTypes.func.isRequired,\n    entityType: PropTypes.string.isRequired,\n    updateFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n    return {\n        filter: state.filter,\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        getList,\n        updateFilter,\n    }\n)(SearchFilter)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { Checkbox } from 'material-ui'\nimport DropDown from 'd2-ui/lib/form-fields/DropDown.component'\nimport { updateFilter, getList } from '../../actions'\nimport OrganisationUnitInput from '../../components/OrganisationUnitInput'\nimport SearchFilter from '../../components/SearchFilter'\nimport {\n    INACTIVE_MONTHS,\n    INVITATION_STATUS,\n    SELF_REGISTERED,\n} from '../../constants/filterFieldNames'\n\nconst style = {\n    float: 'left',\n    marginRight: '1rem',\n}\n\nconst selfRegisteredStyle = {\n    ...style,\n    display: 'inline-block',\n    float: 'left',\n    width: '182px',\n    paddingTop: '37px',\n    height: '35px',\n}\n\n/**\n * Renders a SearchFilter, OrganisationUnitInput, dropdowns for inactive months and invitation status, and a checkbox for self registration.\n * Controlled by the filter state and updates this on change.\n */\nclass UserFilter extends Component {\n    onFilterChange = (fieldName, newValue) => {\n        const { getList, entityType, updateFilter, filter } = this.props\n\n        if (filter[fieldName] === newValue) {\n            return\n        }\n\n        updateFilter(fieldName, newValue)\n        getList(entityType)\n    }\n\n    createInactiveMonthsOptions() {\n        const month = i18n.t('month')\n        const months = i18n.t('months')\n        return Array(12)\n            .fill()\n            .map((_, index) => {\n                const id = index + 1\n                const displayName =\n                    id === 1 ? `${id} ${month}` : `${id} ${months}`\n                return { id, displayName }\n            })\n    }\n\n    renderDropDown(config) {\n        const mergedConfig = {\n            ...config,\n            includeEmpty: true,\n            emptyLabel: i18n.t('<No value>'),\n        }\n        return <DropDown {...mergedConfig} />\n    }\n\n    renderInactiveMonthsFilter() {\n        const dropDownConfig = {\n            menuItems: this.createInactiveMonthsOptions(),\n            floatingLabelText: i18n.t('Inactivity'),\n            value: this.props.filter.inactiveMonths,\n            onChange: event =>\n                this.onFilterChange(INACTIVE_MONTHS, event.target.value),\n            style: { ...style, width: '132px' },\n        }\n\n        return this.renderDropDown(dropDownConfig)\n    }\n\n    renderInvitationStatusFilter() {\n        const dropDownConfig = {\n            menuItems: [\n                { id: 'all', displayName: i18n.t('All invitations') },\n                { id: 'expired', displayName: i18n.t('Expired invitations') },\n            ],\n            floatingLabelText: i18n.t('Invitations'),\n            value: this.props.filter.invitationStatus,\n            onChange: event =>\n                this.onFilterChange(INVITATION_STATUS, event.target.value),\n            style: { ...style, width: '172px' },\n        }\n\n        return this.renderDropDown(dropDownConfig)\n    }\n\n    renderSelfRegisteredFilter() {\n        const value = this.props.filter.selfRegistered\n        const baseClassName = 'data-table__filter-bar__checkbox'\n        const checkedClassName = `${baseClassName}--checked`\n\n        return (\n            <Checkbox\n                value={value}\n                onCheck={(event, value) =>\n                    this.onFilterChange(SELF_REGISTERED, value)\n                }\n                label={i18n.t('Self registrations')}\n                className={value ? checkedClassName : baseClassName}\n                style={selfRegisteredStyle}\n            />\n        )\n    }\n\n    render() {\n        const { entityType } = this.props\n        return (\n            <div>\n                <SearchFilter entityType={entityType} />\n                <OrganisationUnitInput />\n                {this.renderInactiveMonthsFilter()}\n                {this.renderInvitationStatusFilter()}\n                {this.renderSelfRegisteredFilter()}\n            </div>\n        )\n    }\n}\n\nUserFilter.propTypes = {\n    filter: PropTypes.object.isRequired,\n    getList: PropTypes.func.isRequired,\n    updateFilter: PropTypes.func.isRequired,\n    entityType: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => {\n    return {\n        filter: state.filter,\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        updateFilter,\n        getList,\n    }\n)(UserFilter)\n","import UserList from './UserList'\nexport default UserList\n","import React from 'react'\nimport { USER } from '../../constants/entityTypes'\nimport List from '../../components/List'\nimport i18n from '@dhis2/d2-i18n'\n\nimport {\n    userContextMenuActions,\n    userContextMenuIcons,\n    isUserContextActionAllowed,\n} from './UserContextMenuActions'\nimport UserFilter from './UserFilter'\n\n/**\n * Container component that renders a List component with correct properties for displaying a list of Users\n * @class\n */\nconst UserList = () => (\n    <List\n        entityType={USER}\n        columns={['displayName', 'userName', 'lastLogin', 'disabled']}\n        FilterComponent={UserFilter}\n        primaryAction={userContextMenuActions.edit}\n        contextMenuActions={userContextMenuActions}\n        contextMenuIcons={userContextMenuIcons}\n        isContextActionAllowed={isUserContextActionAllowed}\n        sectionName={i18n.t('User Management')}\n        newItemPath={'/users/new'}\n        className=\"user-list\"\n    />\n)\n\nexport default UserList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport IconButton from 'material-ui/IconButton'\n\n/**\n * A component that renders a React-Router Link with an MUI IconButton inside it\n * @class\n */\nconst IconLink = ({ to, tooltip, icon }) => {\n    const iconButton = (\n        <IconButton iconClassName=\"material-icons\" tooltip={tooltip}>\n            {icon}\n        </IconButton>\n    )\n\n    return to ? <Link to={to}>{iconButton}</Link> : iconButton\n}\n\nIconLink.propTypes = {\n    to: PropTypes.string,\n    tooltip: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n}\n\nexport default IconLink\n","import {\n    renderTextField,\n    renderAuthorityEditor,\n} from '../../utils/fieldRenderers'\nimport i18n from '@dhis2/d2-i18n'\n\nexport const NAME = 'name'\nexport const DESCRIPTION = 'description'\nexport const AUTHORITIES = 'authorities'\n\nexport const ROLE_PROPS = [NAME, DESCRIPTION, AUTHORITIES]\n\nexport const FIELDS = [\n    {\n        name: NAME,\n        label: i18n.t('Name'),\n        fieldRenderer: renderTextField,\n        isRequiredField: true,\n    },\n    {\n        name: DESCRIPTION,\n        label: i18n.t('Description'),\n        fieldRenderer: renderTextField,\n    },\n    {\n        name: AUTHORITIES,\n        label: i18n.t('Authorities'),\n        fieldRenderer: renderAuthorityEditor,\n    },\n]\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { Field, reduxForm } from 'redux-form'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport api from '../../api'\nimport navigateTo from '../../utils/navigateTo'\nimport { asyncValidateUniqueness } from '../../utils/validatorsAsync'\nimport { required } from '../../utils/validators'\nimport { clearItem, showSnackbar, getList } from '../../actions'\nimport { NAME, DESCRIPTION, AUTHORITIES, FIELDS } from './config'\nimport { USER_ROLE } from '../../constants/entityTypes'\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\n\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\nclass RoleForm extends Component {\n    saveRole = async (values, _, props) => {\n        const { role, showSnackbar, clearItem, getList } = props\n        const data = {\n            ...role.toJSON(),\n            [NAME]: values[NAME],\n            [DESCRIPTION]: values[DESCRIPTION],\n            [AUTHORITIES]: values[AUTHORITIES],\n        }\n\n        try {\n            await api.saveRole(data)\n            const msg = i18n.t(\n                'User role \"{{displayName}}\" saved successfully',\n                {\n                    displayName: data[NAME],\n                }\n            )\n            showSnackbar({ message: msg })\n            clearItem()\n            getList(USER_ROLE)\n            this.backToList()\n            detectCurrentUserChanges(role)\n        } catch (error) {\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t('There was a problem saving the user role.')\n                ),\n            })\n        }\n    }\n\n    backToList = () => {\n        navigateTo('/user-roles')\n    }\n\n    renderFields() {\n        return FIELDS.map(fieldConfig => {\n            const {\n                name,\n                fieldRenderer,\n                label,\n                isRequiredField,\n                ...conf\n            } = fieldConfig\n            const suffix = isRequiredField ? ' *' : ''\n            const labelText = label + suffix\n            const validators = name === NAME ? [required] : []\n\n            return (\n                <Field\n                    name={name}\n                    key={name}\n                    component={fieldRenderer}\n                    label={labelText}\n                    validate={validators}\n                    {...conf}\n                />\n            )\n        })\n    }\n\n    render = () => {\n        const {\n            handleSubmit,\n            submitting,\n            asyncValidating,\n            pristine,\n            valid,\n        } = this.props\n        const disableSubmit = Boolean(\n            submitting || asyncValidating || pristine || !valid\n        )\n        return (\n            <main>\n                <form onSubmit={handleSubmit(this.saveRole)}>\n                    {this.renderFields()}\n                    <div style={{ marginTop: '2rem' }}>\n                        <RaisedButton\n                            label={i18n.t('Save')}\n                            type=\"submit\"\n                            primary={true}\n                            disabled={disableSubmit}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <RaisedButton\n                            label={i18n.t('Cancel')}\n                            onClick={this.backToList}\n                        />\n                    </div>\n                </form>\n            </main>\n        )\n    }\n}\n\nRoleForm.propTypes = {\n    showSnackbar: PropTypes.func.isRequired,\n    clearItem: PropTypes.func.isRequired,\n    getList: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    initialValues: PropTypes.object.isRequired,\n    role: PropTypes.object.isRequired,\n    asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n        .isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    valid: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    role: state.currentItem,\n    initialValues: {\n        [NAME]: state.currentItem[NAME],\n        [DESCRIPTION]: state.currentItem[DESCRIPTION],\n        [AUTHORITIES]: state.currentItem[AUTHORITIES] || [],\n    },\n})\n\nconst ReduxFormWrappedRoleForm = reduxForm({\n    form: 'roleForm',\n    asyncValidate: asyncValidateUniqueness,\n    asyncBlurFields: [NAME],\n})(RoleForm)\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearItem,\n        showSnackbar,\n        getList,\n    }\n)(ReduxFormWrappedRoleForm)\n","import RoleForm from './RoleForm'\nexport default RoleForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport i18n from '@dhis2/d2-i18n'\nimport { Field, reduxForm } from 'redux-form'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport makeTrashable from 'trashable'\nimport navigateTo from '../../utils/navigateTo'\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync'\nimport { renderSearchableGroupEditor } from '../../utils/fieldRenderers'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\nimport { clearItem, showSnackbar, getList } from '../../actions'\nimport { FORM_NAME, NAME, CODE, USERS, MANAGED_GROUPS, FIELDS } from './config'\nimport { userGroupFormInitialValuesSelector } from '../../selectors'\nimport { USER_GROUP } from '../../constants/entityTypes'\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges'\nimport {\n    generateAttributeFields,\n    parseAttributeValues,\n    addUniqueAttributesToAsyncBlurFields,\n} from '../../utils/attributeFieldHelpers'\nimport * as CONFIG from './config'\nimport collectValidators from './collectValidators'\nimport api from '../../api'\n\n/**\n * Container component that is controlled by redux-form. It renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\nclass GroupForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            attributeFields: null,\n        }\n        this.trashableAttributesPromise = null\n    }\n\n    async componentDidMount() {\n        const { group, showSnackbar, initialize } = this.props\n\n        this.trashableAttributesPromise = makeTrashable(\n            api.getAttributes(USER_GROUP)\n        )\n\n        try {\n            const attributes = await this.trashableAttributesPromise\n            const attributeFields = generateAttributeFields(\n                attributes,\n                group.attributeValues\n            )\n            addUniqueAttributesToAsyncBlurFields(\n                attributeFields,\n                this.props.asyncBlurFields\n            )\n            this.setState({ attributeFields })\n            initialize(\n                userGroupFormInitialValuesSelector(group, attributeFields)\n            )\n        } catch (error) {\n            console.error(error)\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t(\n                        'Could not load the user group data. Please refresh the page.'\n                    )\n                ),\n            })\n        }\n    }\n\n    createIdValueObject(value) {\n        return {\n            id: typeof value === 'string' ? value : value.id,\n        }\n    }\n\n    saveGroup = async (values, _, props) => {\n        const { group, showSnackbar, clearItem, getList } = props\n\n        group[NAME] = values[NAME]\n        group[CODE] = values[CODE]\n        group[USERS] = values[USERS].map(this.createIdValueObject)\n        group[MANAGED_GROUPS] = values[MANAGED_GROUPS].map(\n            this.createIdValueObject\n        )\n        group.attributeValues = parseAttributeValues(\n            values,\n            this.state.attributeFields\n        )\n\n        try {\n            await group.save()\n            const msg = i18n.t(\n                'User group \"{{displayName}}\" saved successfully',\n                {\n                    displayName: group.name,\n                }\n            )\n            showSnackbar({ message: msg })\n            clearItem()\n            getList(USER_GROUP)\n            this.backToList()\n            detectCurrentUserChanges(group)\n        } catch (error) {\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t('There was a problem saving the user group.')\n                ),\n            })\n        }\n    }\n\n    backToList = () => {\n        navigateTo('/user-groups')\n    }\n\n    renderFields(fields) {\n        const { group } = this.props\n        return fields.map(fieldConfig => {\n            const {\n                name,\n                fieldRenderer,\n                label,\n                isRequiredField,\n                isAttributeField,\n                shouldBeUnique,\n                attributeId,\n                fieldValidators,\n                valueType,\n                ...conf\n            } = fieldConfig\n            const suffix = isRequiredField ? ' *' : ''\n            const labelText = label + suffix\n            const validators = []\n\n            if (fieldRenderer === renderSearchableGroupEditor) {\n                conf.availableItemsQuery = api[conf.availableItemsQuery]\n                if (isRequiredField) {\n                    conf.assignedItemsLabel += ' *'\n                }\n                conf.initialValues = fieldConfig.initialItemsSelector(group)\n            }\n\n            conf.validate = collectValidators(\n                this.props,\n                name,\n                isRequiredField,\n                isAttributeField,\n                fieldValidators\n            )\n\n            return (\n                <Field\n                    name={name}\n                    key={name}\n                    component={fieldRenderer}\n                    label={labelText}\n                    validate={validators}\n                    {...conf}\n                />\n            )\n        })\n    }\n\n    render() {\n        const {\n            handleSubmit,\n            submitting,\n            asyncValidating,\n            pristine,\n            valid,\n        } = this.props\n        const { attributeFields } = this.state\n        const disableSubmit = Boolean(\n            submitting || asyncValidating || pristine || !valid\n        )\n\n        if (!attributeFields) {\n            return (\n                <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>\n            )\n        }\n\n        return (\n            <main>\n                <form onSubmit={handleSubmit(this.saveGroup)}>\n                    {this.renderFields(FIELDS)}\n                    {this.renderFields(attributeFields)}\n                    <div style={{ marginTop: '2rem' }}>\n                        <RaisedButton\n                            label={i18n.t('Save')}\n                            type=\"submit\"\n                            primary={true}\n                            disabled={disableSubmit}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <RaisedButton\n                            label={i18n.t('Cancel')}\n                            onClick={this.backToList}\n                        />\n                    </div>\n                </form>\n            </main>\n        )\n    }\n}\n\nGroupForm.propTypes = {\n    asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n    showSnackbar: PropTypes.func.isRequired,\n    clearItem: PropTypes.func.isRequired,\n    getList: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    group: PropTypes.object.isRequired,\n    asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n        .isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    valid: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    group: state.currentItem,\n})\n\nconst ReduxFormWrappedGroupForm = reduxForm({\n    form: FORM_NAME,\n    asyncValidate: asyncValidatorSwitch,\n    asyncBlurFields: [NAME, CODE],\n})(GroupForm)\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearItem,\n        showSnackbar,\n        getList,\n    }\n)(ReduxFormWrappedGroupForm)\n","/* eslint-disable max-params */\n\nimport { required, requiredArray, code } from '../../utils/validators'\nimport { USERS, NAME, CODE } from './config'\n\nexport default function collectValidators(\n    props,\n    name,\n    isRequiredField,\n    isAttributeField,\n    fieldValidators\n) {\n    const validatorsToApply = []\n    const isRequiredAttributeField = isAttributeField && isRequiredField\n\n    if (name === NAME) {\n        validatorsToApply.push(required)\n    }\n\n    if (name === USERS) {\n        validatorsToApply.push(requiredArray)\n    }\n\n    if (name === CODE) {\n        validatorsToApply.push(code)\n    }\n\n    if (isRequiredAttributeField) {\n        validatorsToApply.push(required)\n    }\n\n    if (isAttributeField && fieldValidators) {\n        validatorsToApply.push(...fieldValidators)\n    }\n\n    return validatorsToApply\n}\n","import GroupForm from './GroupForm'\nexport default GroupForm\n","/* eslint-disable max-params */\n\nimport * as validators from '../../utils/validators'\nimport {\n    USERNAME,\n    PASSWORD,\n    REPEAT_PASSWORD,\n    SURNAME,\n    FIRST_NAME,\n    EMAIL,\n} from './config'\n\n// Use this to make sure validator names match form field names (see const fieldSpecificValidator)\nconst validatorLookup = {\n    ...validators,\n    userRoles: validators.requiredArray,\n}\n\n// When creating a user, a password is required, because there is no step to create\n// a password, which a user does get when he is invited by email. On the other hand,\n// the email field is optional, because the user can just use his username to login.\n// And for this reason, the username field is required too.\nconst CREATE_REQUIRED_FIELDS = new Set([\n    USERNAME,\n    PASSWORD,\n    REPEAT_PASSWORD,\n    SURNAME,\n    FIRST_NAME,\n])\n\n// When inviting a user, email, firstname and surname is sufficient.\n// The user can setup a username and password when clicking on the invite link.\nconst INVITE_REQUIRED_FIELDS = new Set([EMAIL, SURNAME, FIRST_NAME])\n\n// In edit mode, the username field is disabled, because this is create-only.\n// The password fields are also optional, we just keep the current password\n// if no new values are provided. Only firstname and surname are required,\n// to prevent these fields from being cleared.\nconst EDIT_REQUIRED_FIELDS = new Set([SURNAME, FIRST_NAME])\n\nexport default function collectValidators(\n    props,\n    name,\n    isRequiredField,\n    isAttributeField,\n    fieldValidators\n) {\n    const validatorsToApply = []\n    const isEditingUser = Boolean(props.user.id)\n    const isRequiredAttributeField = isAttributeField && isRequiredField\n    const fieldSpecificValidator = validatorLookup[name]\n    const isRequiredStaticField =\n        !isAttributeField && isEditingUser\n            ? EDIT_REQUIRED_FIELDS.has(name)\n            : props.inviteUser\n            ? INVITE_REQUIRED_FIELDS.has(name)\n            : CREATE_REQUIRED_FIELDS.has(name)\n\n    if (fieldSpecificValidator) {\n        validatorsToApply.push(fieldSpecificValidator)\n    }\n\n    if (isRequiredAttributeField || isRequiredStaticField) {\n        validatorsToApply.push(validators.required)\n    }\n\n    if (isAttributeField && fieldValidators) {\n        validatorsToApply.push(...fieldValidators)\n    }\n\n    return validatorsToApply\n}\n","/* eslint-disable max-params */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport HardwareKeyboardArrowUp from 'material-ui/svg-icons/hardware/keyboard-arrow-up'\nimport HardwareKeyboardArrowDown from 'material-ui/svg-icons/hardware/keyboard-arrow-down'\nimport i18n from '@dhis2/d2-i18n'\nimport makeTrashable from 'trashable'\nimport navigateTo from '../../utils/navigateTo'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\nimport detectCurrentUserChanges from '../../utils/detectCurrentUserChanges'\nimport asArray from '../../utils/asArray'\nimport getNestedProp from '../../utils/getNestedProp'\nimport api from '../../api'\nimport { userFormInitialValuesSelector } from '../../selectors'\nimport { clearItem, getList, showSnackbar } from '../../actions'\nimport { USER } from '../../constants/entityTypes'\nimport * as CONFIG from './config'\nimport collectValidators from './collectValidators'\nimport { inviteUserValueSelector } from '../../selectors'\nimport { asyncValidatorSwitch } from '../../utils/validatorsAsync'\nimport {\n    generateAttributeFields,\n    addUniqueAttributesToAsyncBlurFields,\n} from '../../utils/attributeFieldHelpers'\nimport {\n    renderTextField,\n    renderText,\n    renderSearchableOrgUnitTree,\n    renderSearchableGroupEditor,\n    renderSelectField,\n} from '../../utils/fieldRenderers'\n\n/**\n * Container component that is controlled by redux-form. When mounting, it will fetch available and selected locales.\n * Once these are loaded, it renders an array of fields and validates their input.\n * When valid it will save on submit and show relevant snackbar message.\n */\nclass UserForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showMore: false,\n            locales: null,\n            attributeFields: null,\n        }\n        this.trashableAttributesPromise = null\n        this.trashableLocalePromise = null\n    }\n\n    async componentDidMount() {\n        const { user, showSnackbar, initialize } = this.props\n        const username = user.id ? user.userCredentials.username : null\n\n        this.trashableLocalePromise = makeTrashable(\n            api.getSelectedAndAvailableLocales(username)\n        )\n        this.trashableAttributesPromise = makeTrashable(api.getAttributes(USER))\n\n        try {\n            const locales = await this.trashableLocalePromise\n            const attributes = await this.trashableAttributesPromise\n            const attributeFields = generateAttributeFields(\n                attributes,\n                user.attributeValues\n            )\n            addUniqueAttributesToAsyncBlurFields(\n                attributeFields,\n                this.props.asyncBlurFields\n            )\n            this.setState({ locales, attributeFields })\n            initialize(\n                userFormInitialValuesSelector(user, locales, attributeFields)\n            )\n        } catch (error) {\n            console.error(error)\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t(\n                        'Could not load the user data. Please refresh the page.'\n                    )\n                ),\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        this.trashableLocalePromise.trash()\n        this.trashableAttributesPromise.trash()\n    }\n\n    toggleShowMore = () => {\n        this.setState({\n            showMore: !this.state.showMore,\n        })\n    }\n\n    handleSubmit = async (values, _, props) => {\n        const { user, inviteUser, showSnackbar, clearItem, getList } = props\n        const initialUiLocale = this.state.locales.ui.selected\n        const initialDbLocale = this.state.locales.db.selected\n\n        try {\n            await api.saveOrInviteUser(\n                values,\n                user,\n                inviteUser,\n                initialUiLocale,\n                initialDbLocale,\n                this.state.attributeFields\n            )\n            const msg = i18n.t('User \"{{displayName}}\" saved successfully', {\n                displayName: `${values.firstName} ${values.surname}`,\n            })\n            showSnackbar({ message: msg })\n            clearItem()\n            getList(USER)\n            this.backToList()\n            detectCurrentUserChanges(user)\n        } catch (error) {\n            console.error(error)\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t('There was a problem saving the user.')\n                ),\n            })\n        }\n    }\n\n    backToList = () => {\n        navigateTo('/users')\n    }\n\n    getLabelText(label, user, isRequiredField) {\n        const { inviteUser } = this.props\n        return isRequiredField === CONFIG.ALWAYS_REQUIRED ||\n            (inviteUser && isRequiredField === CONFIG.INVITE_REQUIRED) ||\n            (isRequiredField === CONFIG.CREATE_REQUIRED &&\n                !user.id &&\n                !inviteUser) ||\n            (typeof isRequiredField === 'boolean' && isRequiredField)\n            ? `${label} *`\n            : label\n    }\n\n    prepareGroupEditor(conf, fieldConfig, user, isRequiredField) {\n        conf.assignedItemsLabel = this.getLabelText(\n            conf.assignedItemsLabel,\n            user,\n            isRequiredField\n        )\n        conf.availableItemsQuery = api[conf.availableItemsQuery]\n        conf.initialValues = fieldConfig.initialItemsSelector(user)\n    }\n\n    exludeField(fieldName) {\n        const { user, inviteUser, externalAuthOnly } = this.props\n        const systemCanEmail = this.context.d2.system.systemInfo.emailConfigured\n\n        if ((!systemCanEmail || user.id) && fieldName === CONFIG.INVITE) {\n            return true\n        }\n\n        if (\n            (inviteUser || externalAuthOnly) &&\n            (fieldName === CONFIG.PASSWORD ||\n                fieldName === CONFIG.REPEAT_PASSWORD)\n        ) {\n            return true\n        }\n\n        if (\n            inviteUser &&\n            [CONFIG.EXTERNAL_AUTH, CONFIG.OPEN_ID, CONFIG.LDAP_ID].includes(\n                fieldName\n            )\n        ) {\n            return true\n        }\n\n        return false\n    }\n\n    renderFields(fields) {\n        const { user } = this.props\n\n        return fields.reduce((filteredFields, fieldConfig) => {\n            const {\n                name,\n                fieldRenderer,\n                label,\n                isRequiredField,\n                isAttributeField,\n                shouldBeUnique,\n                attributeId,\n                fieldValidators,\n                valueType,\n                ...conf\n            } = fieldConfig\n            const labelText = this.getLabelText(label, user, isRequiredField)\n\n            if (this.exludeField(name)) {\n                return filteredFields\n            }\n\n            if (fieldRenderer === renderText) {\n                filteredFields.push(renderText(fieldConfig))\n                return filteredFields\n            }\n\n            switch (fieldRenderer) {\n                case renderTextField:\n                    if (!conf.hintText) {\n                        conf.hintText = label\n                    }\n                    conf.disabled = Boolean(name === CONFIG.USERNAME && user.id)\n                    break\n                case renderSearchableOrgUnitTree:\n                    conf.initialValues = asArray(user[fieldConfig.name])\n                    break\n                case renderSearchableGroupEditor:\n                    this.prepareGroupEditor(\n                        conf,\n                        fieldConfig,\n                        user,\n                        isRequiredField\n                    )\n                    break\n                case renderSelectField:\n                    conf.options = fieldConfig.optionsSelector\n                        ? getNestedProp(fieldConfig.optionsSelector, this.state)\n                        : fieldConfig.options\n                    break\n                default:\n                    break\n            }\n\n            conf.validate = collectValidators(\n                this.props,\n                name,\n                isRequiredField,\n                isAttributeField,\n                fieldValidators\n            )\n\n            filteredFields.push(\n                <Field\n                    name={name}\n                    key={name}\n                    component={fieldRenderer}\n                    label={labelText}\n                    {...conf}\n                />\n            )\n            return filteredFields\n        }, [])\n    }\n\n    renderCreateOrInviteField() {\n        return this.renderFields(CONFIG.INVITE_FIELDS)\n    }\n\n    renderAttributeFields() {\n        return this.renderFields(this.state.attributeFields)\n    }\n\n    renderBaseFields() {\n        return this.renderFields(CONFIG.BASE_FIELDS)\n    }\n\n    renderAdditionalFields(showMore) {\n        if (!showMore) {\n            return null\n        }\n        return (\n            <div style={CONFIG.STYLES.additionalFieldsWrap}>\n                {this.renderFields(CONFIG.ADDITIONAL_FIELDS)}\n            </div>\n        )\n    }\n\n    renderToggler(showMore) {\n        const togglerText = showMore\n            ? i18n.t('Show fewer options')\n            : i18n.t('Show more options')\n        const icon = showMore ? (\n            <HardwareKeyboardArrowUp />\n        ) : (\n            <HardwareKeyboardArrowDown />\n        )\n\n        return (\n            <div style={CONFIG.STYLES.togglerWrap}>\n                <FlatButton\n                    onClick={this.toggleShowMore}\n                    label={togglerText}\n                    style={CONFIG.STYLES.toggler}\n                    icon={icon}\n                />\n            </div>\n        )\n    }\n\n    render() {\n        const {\n            handleSubmit,\n            submitting,\n            asyncValidating,\n            pristine,\n            valid,\n            inviteUser,\n        } = this.props\n        const { showMore, locales } = this.state\n        const disableSubmit = Boolean(\n            submitting || asyncValidating || pristine || !valid\n        )\n        const submitText =\n            inviteUser === true ? i18n.t('Send invite') : i18n.t('Save')\n\n        if (!locales) {\n            return (\n                <div style={CONFIG.STYLES.loaderWrap}>\n                    <CircularProgress />\n                </div>\n            )\n        }\n\n        return (\n            <main>\n                <form onSubmit={handleSubmit(this.handleSubmit)}>\n                    {this.renderCreateOrInviteField()}\n                    {this.renderBaseFields()}\n                    {this.renderAttributeFields()}\n                    {this.renderAdditionalFields(showMore)}\n                    {this.renderToggler(showMore)}\n                    <div>\n                        <RaisedButton\n                            label={submitText}\n                            type=\"submit\"\n                            primary={true}\n                            disabled={disableSubmit}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <RaisedButton\n                            label={i18n.t('Cancel')}\n                            onClick={this.backToList}\n                        />\n                    </div>\n                </form>\n            </main>\n        )\n    }\n}\n\nUserForm.propTypes = {\n    user: PropTypes.object.isRequired,\n    getList: PropTypes.func.isRequired,\n    clearItem: PropTypes.func.isRequired,\n    showSnackbar: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    change: PropTypes.func.isRequired,\n    initialize: PropTypes.func.isRequired,\n    asyncValidating: PropTypes.oneOfType([PropTypes.bool, PropTypes.string])\n        .isRequired,\n    pristine: PropTypes.bool.isRequired,\n    submitting: PropTypes.bool.isRequired,\n    valid: PropTypes.bool.isRequired,\n    fallbackOrgUnits: PropTypes.object,\n    inviteUser: PropTypes.bool.isRequired,\n    externalAuthOnly: PropTypes.bool.isRequired,\n    asyncBlurFields: PropTypes.arrayOf(PropTypes.string),\n}\n\nUserForm.contextTypes = {\n    d2: PropTypes.object.isRequired,\n}\n\nconst selector = formValueSelector(CONFIG.FORM_NAME)\nconst mapStateToProps = state => {\n    return {\n        user: state.currentItem,\n        fallbackOrgUnits:\n            state.currentUser[CONFIG.DATA_CAPTURE_AND_MAINTENANCE_ORG_UNITS],\n        inviteUser: inviteUserValueSelector(state.form[CONFIG.FORM_NAME]),\n        externalAuthOnly: Boolean(selector(state, CONFIG.EXTERNAL_AUTH)),\n    }\n}\n\nconst ReduxFormWrappedUserForm = reduxForm({\n    form: CONFIG.FORM_NAME,\n    asyncValidate: asyncValidatorSwitch,\n    asyncBlurFields: [CONFIG.USERNAME],\n})(UserForm)\n\nexport default connect(\n    mapStateToProps,\n    {\n        clearItem,\n        showSnackbar,\n        getList,\n    }\n)(ReduxFormWrappedUserForm)\n","import UserForm from './UserForm'\nexport default UserForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper, CircularProgress } from 'material-ui'\nimport { connect } from 'react-redux'\nimport { getItem, initNewItem } from '../actions'\nimport { USER, USER_GROUP, USER_ROLE } from '../constants/entityTypes'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport IconLink from './IconLink'\nimport i18n from '@dhis2/d2-i18n'\nimport kebabCase from 'lodash.kebabcase'\nimport capitalize from 'lodash.capitalize'\nimport ErrorMessage from './ErrorMessage'\nimport RoleForm from '../containers/RoleForm'\nimport GroupForm from '../containers/GroupForm'\nimport UserForm from '../containers/UserForm'\nimport { shortItemSelector } from '../selectors'\n\nconst styles = {\n    main: {\n        width: '100%',\n        paddingLeft: '2rem',\n    },\n    heading: {\n        paddingBottom: '1rem',\n    },\n    paper: {\n        padding: '2rem 5rem 4rem',\n    },\n}\n\nclass FormLoader extends Component {\n    componentDidMount() {\n        const {\n            match: {\n                params: { id },\n            },\n            item,\n            getItem,\n            initNewItem,\n            entityType,\n        } = this.props\n        if (id && !(item && item.id === id)) {\n            getItem(entityType, id)\n        } else if (!id) {\n            initNewItem(entityType)\n        }\n        this.formNotFoundErrorMsg = i18n.t(\n            'There was an error getting the form:'\n        )\n    }\n\n    renderForm() {\n        const { entityType } = this.props\n        switch (entityType) {\n            case USER:\n                return <UserForm />\n            case USER_ROLE:\n                return <RoleForm />\n            case USER_GROUP:\n                return <GroupForm />\n            default:\n                return (\n                    <ErrorMessage\n                        introText={this.formNotFoundErrorMsg}\n                        errorMessage={''}\n                    />\n                )\n        }\n    }\n\n    renderHeader() {\n        const {\n            match: {\n                params: { id },\n            },\n            item,\n            shortItem,\n            entityType,\n        } = this.props\n        const baseItem = item && item.id === id ? item : shortItem\n        const entityTxt = baseItem\n            ? baseItem.modelDefinition.displayName\n            : capitalize(entityType)\n        const displayName = baseItem ? baseItem.displayName : ''\n        const updateMsg = `${i18n.t('Update')} ${entityTxt}: ${displayName}`\n        const createMsg = `${i18n.t('Create new')} ${entityTxt}`\n        const msg = id ? updateMsg : createMsg\n        const link = baseItem\n            ? `/${kebabCase(baseItem.modelDefinition.plural)}`\n            : null\n        const linkTooltip = `${i18n.t('Back to')} ${entityTxt}s`\n\n        return (\n            <Heading style={styles.heading}>\n                <IconLink\n                    to={link}\n                    tooltip={linkTooltip}\n                    disabled={Boolean(link)}\n                    icon=\"arrow_back\"\n                />\n                {msg}\n            </Heading>\n        )\n    }\n\n    renderContent() {\n        const {\n            match: {\n                params: { id },\n            },\n            item,\n        } = this.props\n\n        if (typeof item === 'string') {\n            return (\n                <ErrorMessage\n                    introText={this.formNotFoundErrorMsg}\n                    errorMessage={item}\n                />\n            )\n        }\n\n        if (!item || (item && item.id !== id)) {\n            return (\n                <div style={{ textAlign: 'center', paddingTop: '2rem' }}>\n                    <CircularProgress />\n                </div>\n            )\n        }\n\n        return this.renderForm()\n    }\n\n    render() {\n        return (\n            <main style={styles.main}>\n                {this.renderHeader()}\n                <Paper style={styles.paper}>{this.renderContent()}</Paper>\n            </main>\n        )\n    }\n}\n\nFormLoader.propTypes = {\n    match: PropTypes.object.isRequired,\n    entityType: PropTypes.string.isRequired,\n    item: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    shortItem: PropTypes.object,\n    getItem: PropTypes.func.isRequired,\n    initNewItem: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        item: state.currentItem,\n        // shortItem is available when navigating from a list but not after refesh\n        shortItem: shortItemSelector(props.match.params.id, state.list.items),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        getItem,\n        initNewItem,\n    }\n)(FormLoader)\n","import api from '../api'\n\n/**\n * Receives a full UTC data string and return a formatted version according to the user's locale\n * @param {String} utcString - UTC Date String\n * @param {String} includeTime - Include time if true\n * @returns {String} Formatted date string\n * @memberof module:utils\n * @function\n */\nconst parseDateFromUTCString = (utcString, includeTime) => {\n    const d2 = api.getD2()\n    const locale = d2.currentUser.userSettings.settings.keyUiLocale\n    const date = new Date(utcString)\n    const dateOptions = {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n    }\n    const timeOptions = {\n        hour: '2-digit',\n        minute: '2-digit',\n    }\n    const options = includeTime\n        ? { ...dateOptions, ...timeOptions }\n        : dateOptions\n\n    return new Intl.DateTimeFormat(locale, options).format(date)\n}\n\nexport default parseDateFromUTCString\n","/* eslint-disable max-params */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper } from 'material-ui'\nimport kebabCase from 'lodash.kebabcase'\nimport capitalize from 'lodash.capitalize'\nimport api from '../api'\nimport i18n from '@dhis2/d2-i18n'\nimport parseDateFromUTCString from '../utils/parseDateFromUTCString'\nimport LoadingMask from 'd2-ui/lib/loading-mask/LoadingMask.component'\nimport ErrorMessage from './ErrorMessage'\nimport Heading from 'd2-ui/lib/headings/Heading.component'\nimport IconLink from './IconLink'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport ImageEdit from 'material-ui/svg-icons/image/edit'\nimport ContentSend from 'material-ui/svg-icons/content/send'\nimport { Link } from 'react-router-dom'\nimport { USER } from '../constants/entityTypes'\nimport { connect } from 'react-redux'\nimport { getItem } from '../actions'\n\nconst styles = {\n    main: {\n        width: '100%',\n        paddingLeft: '2rem',\n    },\n    heading: {\n        paddingBottom: '1rem',\n    },\n    raisedButton: {\n        height: '36px',\n        transform: 'translateY(10px)',\n        float: 'right',\n        marginLeft: '1rem',\n    },\n    paper: {\n        padding: '1.4rem',\n    },\n    cell: {\n        fontSize: '1rem',\n        padding: '0.8rem',\n        verticalAlign: 'top',\n    },\n    valueCell: {\n        textAlign: 'right',\n        color: '#757575',\n    },\n}\n/**\n * This component reads specified properties of an object and displays this in a table\n */\nclass DetailSummary extends Component {\n    componentDidMount() {\n        const { baseName, routeId, getItem } = this.props\n        getItem(baseName, routeId)\n    }\n\n    /**\n     * Renders a button wrapped in a link.\n     * The link points to a location outside of the user-app where a message can be sent to a user with a given id.\n     * @param {string} userId\n     */\n    renderSendMessageBtn(userId) {\n        const url = `${api.getContextPath()}/dhis-web-messaging/#/PRIVATE/create/${userId}`\n        return (\n            <RaisedButton\n                style={styles.raisedButton}\n                label={i18n.t('Send message')}\n                secondary={true}\n                containerElement={<a href={url}> </a>}\n                icon={<ContentSend />}\n            />\n        )\n    }\n\n    renderPropertyFields() {\n        const { summaryObject, config } = this.props\n        const labelCellStyle = { ...styles.cell, ...styles.valueCell }\n\n        return config.map((field, index) => {\n            const {\n                key,\n                removeText,\n                parseDate,\n                parseDateTime,\n                nestedPropselector,\n                parseArrayAsCommaDelimitedString,\n                count,\n            } = field\n            let { label } = field\n\n            label = i18n.t(label)\n            let value = summaryObject[key]\n\n            if (typeof value === 'undefined') {\n                value = ''\n            } else {\n                if (nestedPropselector) {\n                    nestedPropselector.forEach(selector => {\n                        value = value[selector]\n                    })\n                }\n\n                if (parseArrayAsCommaDelimitedString) {\n                    // Some nested lists come through as a modelCollection but others are already arrays\n                    if (typeof value.toArray === 'function') {\n                        value = value.toArray()\n                    }\n                    value = value\n                        .map(item => item[parseArrayAsCommaDelimitedString])\n                        .join(', ')\n                }\n\n                if (removeText) {\n                    value = capitalize(value.replace(removeText, ''))\n                }\n\n                if ((parseDate || parseDateTime) && typeof value === 'string') {\n                    value = parseDateFromUTCString(value, parseDateTime)\n                }\n\n                if (count) {\n                    if (typeof value.size === 'number') {\n                        value = value.size\n                    } else if (typeof value.length === 'number') {\n                        value = value.length\n                    }\n                }\n            }\n\n            return (\n                <tr key={index}>\n                    <td style={labelCellStyle}>{label}</td>\n                    <td style={styles.cell}>{value}</td>\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        const { summaryObject, baseName } = this.props\n\n        if (summaryObject === null) {\n            return <LoadingMask />\n        }\n\n        if (typeof summaryObject === 'string') {\n            const errorText = i18n.t(\n                `There was an error fetching the ${baseName}`\n            )\n            return (\n                <ErrorMessage\n                    introText={errorText}\n                    errorMessage={summaryObject}\n                />\n            )\n        }\n\n        const { id, displayName, access } = summaryObject\n        const plural = `${baseName}s`,\n            baseRoute = `/${kebabCase(plural)}`,\n            backTooltip = i18n.t(`Back to ${plural}`),\n            editLink = `${baseRoute}/edit/${id}`,\n            editTooltip = i18n.t(`Edit ${baseName}`)\n\n        return (\n            <main style={styles.main}>\n                <Heading style={styles.heading}>\n                    <IconLink\n                        to={baseRoute}\n                        tooltip={backTooltip}\n                        icon=\"arrow_back\"\n                    />\n                    {displayName}\n\n                    {access.update ? (\n                        <RaisedButton\n                            style={styles.raisedButton}\n                            label={editTooltip}\n                            primary={true}\n                            containerElement={<Link to={editLink} />}\n                            icon={<ImageEdit />}\n                        />\n                    ) : null}\n\n                    {baseName === USER ? this.renderSendMessageBtn(id) : null}\n                </Heading>\n                <Paper style={styles.paper}>\n                    <table>\n                        <tbody>{this.renderPropertyFields()}</tbody>\n                    </table>\n                </Paper>\n            </main>\n        )\n    }\n}\n\nDetailSummary.propTypes = {\n    summaryObject: PropTypes.object,\n    routeId: PropTypes.string.isRequired,\n    config: PropTypes.array.isRequired,\n    baseName: PropTypes.string.isRequired,\n    getItem: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    summaryObject: state.currentItem,\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        getItem,\n    }\n)(DetailSummary)\n","import i18n from '@dhis2/d2-i18n'\n\nconst BASE_FIELDS = [\n    {\n        key: 'displayName',\n        label: i18n.t('Display name'),\n    },\n    {\n        key: 'id',\n        label: i18n.t('ID'),\n    },\n]\n\nexport const USER_PROFILE = [\n    ...BASE_FIELDS,\n    {\n        key: 'userCredentials',\n        nestedPropselector: ['lastLogin'],\n        label: i18n.t('Last login'),\n        parseDateTime: true,\n    },\n    {\n        key: 'created',\n        label: i18n.t('Created'),\n        parseDate: true,\n    },\n    {\n        key: 'surname',\n        label: i18n.t('Surname'),\n    },\n    {\n        key: 'firstName',\n        label: i18n.t('First name'),\n    },\n    {\n        key: 'introduction',\n        label: i18n.t('Introduction'),\n    },\n    {\n        key: 'jobTitle',\n        label: i18n.t('Job title'),\n    },\n    {\n        key: 'employer',\n        label: i18n.t('Works at'),\n    },\n    {\n        key: 'education',\n        label: i18n.t('Education'),\n    },\n    {\n        key: 'interests',\n        label: i18n.t('Interests'),\n    },\n    {\n        key: 'nationality',\n        label: i18n.t('Nationality'),\n    },\n    {\n        key: 'birthday',\n        label: i18n.t('Birthday'),\n        parseDate: true,\n    },\n    {\n        key: 'gender',\n        label: i18n.t('Gender'),\n        removeText: 'gender_',\n    },\n    {\n        key: 'languages',\n        label: i18n.t('Speaks'),\n    },\n    {\n        key: 'email',\n        label: i18n.t('E-mail'),\n    },\n    {\n        key: 'phoneNumber',\n        label: i18n.t('Mobile phone number'),\n    },\n    {\n        key: 'organisationUnits',\n        label: i18n.t('Organisations units'),\n        parseArrayAsCommaDelimitedString: 'displayName',\n    },\n    {\n        key: 'userCredentials',\n        label: i18n.t('User roles'),\n        nestedPropselector: ['userRoles'],\n        parseArrayAsCommaDelimitedString: 'displayName',\n    },\n]\n\nexport const USER_ROLE_DETAILS = [\n    ...BASE_FIELDS,\n    {\n        key: 'users',\n        label: i18n.t('Members'),\n        count: true,\n    },\n]\nexport const USER_GROUP_DETAILS = [\n    ...BASE_FIELDS,\n    {\n        key: 'users',\n        label: i18n.t('Number of users'),\n        count: true,\n    },\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { USER } from '../constants/entityTypes'\nimport DetailSummary from '../components/DetailSummary'\nimport { USER_PROFILE } from '../constants/detailFieldConfigs'\n\n/** Renders a DetailSummary for a User instance\n * @class\n */\nconst UserProfile = ({\n    match: {\n        params: { id },\n    },\n}) => <DetailSummary routeId={id} config={USER_PROFILE} baseName={USER} />\n\nUserProfile.propTypes = {\n    match: PropTypes.object.isRequired,\n}\n\nexport default UserProfile\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { Link } from 'react-router-dom'\n\nconst style = {\n    width: '100%',\n    textAlign: 'center',\n    padding: '1.5rem 1.5rem 1rem',\n}\n/**\n * Will display when no matching route was found.\n * Renders text and the pathname that is in the URL after the `/#`\n * @class\n */\nconst PageNotFound = ({ location }) => (\n    <div style={style}>\n        <h1>{i18n.t('Page not found.')}</h1>\n        <h3>\n            {i18n.t('No match for')}\n            <code> {location.pathname}</code>\n        </h3>\n        <Link to=\"/\"> {i18n.t('Go back home')}</Link>\n    </div>\n)\n\nPageNotFound.propTypes = {\n    location: PropTypes.object.isRequired,\n}\n\nexport default PageNotFound\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport Card from 'material-ui/Card/Card'\nimport CardHeader from 'material-ui/Card/CardHeader'\nimport CardText from 'material-ui/Card/CardText'\nimport CardActions from 'material-ui/Card/CardActions'\nimport IconButton from 'material-ui/IconButton/IconButton'\nimport navigateTo from '../utils/navigateTo'\nimport { SECTIONS } from '../constants/routeConfig'\n\nconst cardStyle = {\n    padding: '0',\n    margin: '.5rem',\n    marginTop: '1rem',\n    float: 'left',\n    width: '230px',\n}\n\nconst headerStyle = {\n    padding: '1rem',\n    height: 'auto',\n    borderBottom: '1px solid #ddd',\n    cursor: 'pointer',\n    fontWeight: 'bold',\n}\n\nconst textStyle = {\n    height: '85px',\n    padding: '.5rem 1rem',\n}\n\nconst actionStyle = {\n    textAlign: 'right',\n}\n\n/**\n * Conditionally renders cards representing the different sections present in the user-app\n * Cards will only be displayed if the current user can create or delete a model type.\n */\nclass CardLinks extends Component {\n    renderActionButtons(card, canList, canCreate) {\n        const actionButtons = []\n        const createPath = `${card.path}/new`\n\n        if (canCreate) {\n            actionButtons.push(\n                <IconButton\n                    key=\"add\"\n                    iconClassName=\"material-icons\"\n                    tooltip={i18n.t('Add')}\n                    tooltipPosition=\"top-center\"\n                    onClick={() => navigateTo(createPath)}\n                >\n                    &#xE145;\n                </IconButton>\n            )\n        }\n\n        if (canList) {\n            actionButtons.push(\n                <IconButton\n                    key=\"list\"\n                    iconClassName=\"material-icons\"\n                    tooltip={i18n.t('list')}\n                    tooltipPosition=\"top-center\"\n                    onClick={() => navigateTo(card.path)}\n                >\n                    &#xE8EF;\n                </IconButton>\n            )\n        }\n\n        return actionButtons\n    }\n\n    renderCard = (card, index) => {\n        const { currentUser, models } = this.context.d2\n        // Based on input from Lars:\n        // \"you should hide menu items for which the user has no \"add\" or \"delete\" authority\"\n        const canCreate = currentUser.canCreate(models[card.entityType])\n        const canDelete = currentUser.canDelete(models[card.entityType])\n        const canList = canCreate || canDelete\n\n        if (!canList) {\n            return null\n        }\n\n        return (\n            <Card key={`card-${index}`} style={cardStyle}>\n                <CardHeader\n                    onClick={() => navigateTo(card.path)}\n                    style={headerStyle}\n                    title={card.label}\n                />\n                <CardText style={textStyle}>{card.description}</CardText>\n                <CardActions style={actionStyle}>\n                    {this.renderActionButtons(card, canList, canCreate)}\n                </CardActions>\n            </Card>\n        )\n    }\n\n    render() {\n        const cards = SECTIONS.map(this.renderCard)\n\n        if (cards.length === 0) {\n            return (\n                <div>\n                    {i18n.t(\n                        'You do not have access to any section of the DHIS 2 User Management App'\n                    )}\n                </div>\n            )\n        }\n\n        return cards\n    }\n}\n\nCardLinks.contextTypes = {\n    d2: PropTypes.object,\n}\n\nexport default CardLinks\n","/**\n * Defines the RoleList context menu for current user on a given UserRole model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/RoleList/RoleContextMenuActions\n */\nimport Action from 'd2-ui/lib/action/Action'\nimport navigateTo from '../../utils/navigateTo'\nimport { USER_ROLE } from '../../constants/entityTypes'\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions'\n\nconst show_details = 'show_details'\nconst sharing_settings = 'sharing_settings'\nconst edit = 'edit'\nconst remove = 'remove'\n\n/**\n * Determines whether a specific user role action should be visible for current user and given UserRole instance\n * @param {Object} model - d2 UserRole model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\nexport const isRoleContextActionAllowed = (model, action) => {\n    if (!model) {\n        return false\n    }\n\n    const { access } = model\n\n    switch (action) {\n        case show_details:\n            return access.read\n        case sharing_settings:\n            return access.manage\n        case edit:\n            return access.update\n        case remove:\n            return access.delete\n        default:\n            return true\n    }\n}\n\nexport const roleContextMenuIcons = {\n    [show_details]: 'info',\n    [sharing_settings]: 'share',\n    [edit]: 'edit',\n    [remove]: 'delete',\n}\n\nexport const roleContextMenuActions = Action.createActionsFromNames([\n    [show_details],\n    [sharing_settings],\n    [edit],\n    [remove],\n])\n\nroleContextMenuActions.show_details.subscribe(({ data: { id } }) => {\n    navigateTo(`/user-roles/view/${id}`)\n})\n\nroleContextMenuActions.sharing_settings.subscribe(openSharingSettings)\n\nroleContextMenuActions.edit.subscribe(({ data: { id } }) => {\n    navigateTo(`/user-roles/edit/${id}`)\n})\n\nroleContextMenuActions.remove.subscribe(({ data: role }) => {\n    const params = {\n        model: role,\n        entityType: USER_ROLE,\n    }\n    deleteModel(params)\n})\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport { USER_ROLE } from '../../constants/entityTypes'\nimport List from '../../components/List'\nimport {\n    roleContextMenuActions,\n    roleContextMenuIcons,\n    isRoleContextActionAllowed,\n} from './RoleContextMenuActions'\nimport SearchFilter from '../../components/SearchFilter'\n\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserRoles\n * @class\n */\nconst RoleList = () => (\n    <List\n        entityType={USER_ROLE}\n        FilterComponent={SearchFilter}\n        columns={['displayName', 'description']}\n        primaryAction={roleContextMenuActions.edit}\n        contextMenuActions={roleContextMenuActions}\n        contextMenuIcons={roleContextMenuIcons}\n        isContextActionAllowed={isRoleContextActionAllowed}\n        sectionName={i18n.t('User Role Management')}\n        newItemPath={'/user-roles/new'}\n        className={'role-list'}\n    />\n)\n\nexport default RoleList\n","import RoleList from './RoleList'\nexport default RoleList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { USER_ROLE } from '../constants/entityTypes'\nimport DetailSummary from '../components/DetailSummary'\nimport { USER_ROLE_DETAILS } from '../constants/detailFieldConfigs'\n\n/** Renders a DetailSummary for a UserRole instance\n * @class\n */\nconst RoleDetails = ({\n    match: {\n        params: { id },\n    },\n}) => (\n    <DetailSummary\n        routeId={id}\n        config={USER_ROLE_DETAILS}\n        baseName={USER_ROLE}\n    />\n)\n\nRoleDetails.propTypes = {\n    match: PropTypes.object.isRequired,\n}\n\nexport default RoleDetails\n","/**\n * Defines the GroupList context menu for current user on a given UserGroup model instance.\n * Contains definitions for menu item visibility, individual menu item actions, icons and names.\n * @module containers/GroupList/GroupContextMenuActions\n */\nimport i18n from '@dhis2/d2-i18n'\nimport Action from 'd2-ui/lib/action/Action'\nimport navigateTo from '../../utils/navigateTo'\nimport api from '../../api'\nimport store from '../../store'\nimport { deleteModel, openSharingSettings } from '../../utils/sharedActions'\nimport { USER_GROUP } from '../../constants/entityTypes'\nimport { showSnackbar, refreshCurrentUser } from '../../actions'\nimport createHumanErrorMessage from '../../utils/createHumanErrorMessage'\nconst show_details = 'show_details'\nconst sharing_settings = 'sharing_settings'\nconst edit = 'edit'\nconst join_group = 'join_group'\nconst leave_group = 'leave_group'\nconst remove = 'remove'\n\n/**\n * Determines whether a specific user group action should be visible for current user and given UserGroup instance\n * @param {Object} model - d2 UserGroup model instance\n * @param {String} action - Action name\n * @returns {Boolean} - Action visibility\n * @function\n */\nexport const isGroupContextActionAllowed = (model, action) => {\n    if (!model) {\n        return false\n    }\n\n    const { access } = model\n\n    switch (action) {\n        case show_details:\n            return access.read\n        case sharing_settings:\n            return access.manage\n        case edit:\n            return access.update\n        case join_group:\n            return access.update && !model.currentUserIsMember\n        case leave_group:\n            return access.update && model.currentUserIsMember\n        case remove:\n            return access.delete\n        default:\n            return true\n    }\n}\n\nexport const groupContextMenuIcons = {\n    [show_details]: 'info',\n    [sharing_settings]: 'share',\n    [edit]: 'edit',\n    [join_group]: 'group_add',\n    [leave_group]: 'exit_to_app',\n    [remove]: 'delete',\n}\n\nexport const groupContextMenuActions = Action.createActionsFromNames([\n    show_details,\n    sharing_settings,\n    edit,\n    join_group,\n    leave_group,\n    remove,\n])\n\nconst updateGroupMembership = async ({ displayName, id }, deleteMembership) => {\n    try {\n        await api.updateCurrentUserGroupMembership(id, deleteMembership)\n        const baseMsg = deleteMembership\n            ? i18n.t('You left group')\n            : i18n.t('You joined group')\n        store.dispatch(showSnackbar({ message: `${baseMsg} ${displayName}` }))\n        store.dispatch(refreshCurrentUser())\n    } catch (error) {\n        store.dispatch(\n            showSnackbar({\n                message: createHumanErrorMessage(\n                    error,\n                    i18n.t('There was a problem updating your group membership')\n                ),\n            })\n        )\n    }\n}\n\ngroupContextMenuActions.show_details.subscribe(({ data: { id } }) => {\n    navigateTo(`/user-groups/view/${id}`)\n})\n\ngroupContextMenuActions.sharing_settings.subscribe(openSharingSettings)\n\ngroupContextMenuActions.edit.subscribe(({ data: { id } }) => {\n    navigateTo(`/user-groups/edit/${id}`)\n})\n\ngroupContextMenuActions.join_group.subscribe(({ data }) => {\n    updateGroupMembership(data, false)\n})\n\ngroupContextMenuActions.leave_group.subscribe(({ data }) => {\n    updateGroupMembership(data, true)\n})\n\ngroupContextMenuActions.remove.subscribe(({ data: group }) => {\n    const params = {\n        model: group,\n        entityType: USER_GROUP,\n    }\n    deleteModel(params)\n})\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport List from '../../components/List'\nimport i18n from '@dhis2/d2-i18n'\nimport {\n    isGroupContextActionAllowed,\n    groupContextMenuIcons,\n    groupContextMenuActions,\n} from './GroupContextMenuActions'\nimport { USER_GROUP } from '../../constants/entityTypes'\nimport SearchFilter from '../../components/SearchFilter'\n\n/**\n * Container component that renders a List component with correct properties for displaying a list of UserGroups\n */\nclass GroupList extends Component {\n    render() {\n        return (\n            <List\n                entityType={USER_GROUP}\n                FilterComponent={SearchFilter}\n                columns={['displayName', 'currentUserIsMember']}\n                primaryAction={groupContextMenuActions.edit}\n                contextMenuActions={groupContextMenuActions}\n                contextMenuIcons={groupContextMenuIcons}\n                isContextActionAllowed={isGroupContextActionAllowed}\n                sectionName={i18n.t('User Group Management')}\n                newItemPath={'/user-groups/new'}\n                className={'group-list'}\n            />\n        )\n    }\n}\n\nGroupList.propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    groupMemberships: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => {\n    return {\n        groupMemberships: state.currentUser.userGroups,\n    }\n}\n\nexport default connect(mapStateToProps)(GroupList)\n","import GroupList from './GroupList'\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { USER_GROUP } from '../constants/entityTypes'\nimport DetailSummary from '../components/DetailSummary'\nimport { USER_GROUP_DETAILS } from '../constants/detailFieldConfigs'\n\n/** Renders a DetailSummary for a UserGroup instance\n * @class\n */\nconst GroupDetails = ({\n    match: {\n        params: { id },\n    },\n}) => (\n    <DetailSummary\n        routeId={id}\n        config={USER_GROUP_DETAILS}\n        baseName={USER_GROUP}\n    />\n)\n\nGroupDetails.propTypes = {\n    match: PropTypes.object.isRequired,\n}\n\nexport default GroupDetails\n","import React from 'react'\nimport i18n from '@dhis2/d2-i18n'\nimport UserList from '../containers/UserList'\nimport FormLoader from '../components/FormLoader'\nimport UserProfile from '../containers/UserProfile'\nimport PageNotFound from '../components/PageNotFound'\nimport CardLinks from '../components/CardLinks'\nimport RoleList from '../containers/RoleList'\nimport RoleDetails from '../containers/RoleDetails'\nimport GroupList from '../containers/GroupList'\nimport GroupDetails from '../containers/GroupDetails'\nimport { USER, USER_ROLE, USER_GROUP } from './entityTypes'\n\nconst USER_SECTION = {\n    key: 'user_section',\n    label: i18n.t('User'),\n    icon: 'person',\n    path: '/users',\n    description: 'Create, modify, view and delete Users',\n    component: UserList,\n    entityType: USER,\n}\nconst USER_ROLE_SECTION = {\n    key: 'user_role_section',\n    label: i18n.t('User role'),\n    icon: 'folder_shared',\n    path: '/user-roles',\n    description: 'Create, modify, view and delete User Roles',\n    component: RoleList,\n    entityType: USER_ROLE,\n}\nconst USER_GROUP_SECTION = {\n    key: 'user_group_section',\n    label: i18n.t('User group'),\n    icon: 'group',\n    path: '/user-groups',\n    description: 'Create, modify, view and delete User Groups',\n    component: GroupList,\n    entityType: USER_GROUP,\n}\n\nexport const SECTIONS = [USER_SECTION, USER_ROLE_SECTION, USER_GROUP_SECTION]\n\n// Label property is used in sidebar, so routes without a label will be omitted\nconst ROUTE_CONFIG = [\n    // USER\n    {\n        key: 'user_new_view',\n        path: '/users/new',\n        render: props => <FormLoader entityType={USER} {...props} />,\n        entityType: USER,\n    },\n    {\n        key: 'user_edit_view',\n        path: '/users/edit/:id',\n        render: props => <FormLoader entityType={USER} {...props} />,\n        entityType: USER,\n    },\n    {\n        key: 'user_profile_view',\n        path: '/users/view/:id',\n        component: UserProfile,\n        entityType: USER,\n    },\n    USER_SECTION,\n    // ROLE\n    {\n        key: 'user_role_new_view',\n        path: '/user-roles/new',\n        render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n        entityType: USER_ROLE,\n    },\n    {\n        key: 'user_role_edit_view',\n        path: '/user-roles/edit/:id',\n        render: props => <FormLoader entityType={USER_ROLE} {...props} />,\n        entityType: USER_ROLE,\n    },\n    {\n        key: 'user_role_details_view',\n        path: '/user-roles/view/:id',\n        component: RoleDetails,\n        entityType: USER_ROLE,\n    },\n    USER_ROLE_SECTION,\n    // GROUP\n    {\n        key: 'user_group_new_view',\n        path: '/user-groups/new',\n        render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n        entityType: USER_GROUP,\n    },\n    {\n        key: 'user_group_edit_view',\n        path: '/user-groups/edit/:id',\n        render: props => <FormLoader entityType={USER_GROUP} {...props} />,\n        entityType: USER_GROUP,\n    },\n    {\n        key: 'user_group_details_view',\n        path: '/user-groups/view/:id',\n        component: GroupDetails,\n        entityType: USER_GROUP,\n    },\n    USER_GROUP_SECTION,\n    // Other\n    {\n        key: 'landing_page',\n        path: '/',\n        component: CardLinks,\n    },\n    {\n        key: 'not_found',\n        component: PageNotFound,\n    },\n]\nexport default ROUTE_CONFIG\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router'\nimport Sidebar from 'd2-ui/lib/sidebar/Sidebar.component'\n\nconst style = {\n    display: 'flex',\n    flex: '0 0 320px',\n}\n\n/**\n * Renders the sidebar containing the available sections.\n * If its on a path/route that doesn't match any section it will render null.\n * This is because when a form or the CardLinks are displayed, the sidebar should not show.\n */\nclass SideNav extends Component {\n    changeSectionHandler = key => {\n        const { sections, history } = this.props\n        const section = sections.find(section => section.key === key)\n\n        history.push(section.path)\n    }\n\n    render() {\n        const {\n            sections,\n            location: { pathname },\n        } = this.props\n        const sectionForPath = sections.find(\n            section => section.path === pathname\n        )\n        const onLandingPage = pathname === '/'\n        const sectionKey = sectionForPath ? sectionForPath.key : null\n\n        if (!sectionForPath && !onLandingPage) {\n            return null\n        }\n\n        return (\n            <div style={style}>\n                <Sidebar\n                    sections={sections}\n                    onChangeSection={this.changeSectionHandler}\n                    currentSection={sectionKey}\n                />\n            </div>\n        )\n    }\n}\n\nSideNav.propTypes = {\n    sections: PropTypes.array.isRequired,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }),\n}\n\nexport default withRouter(SideNav)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport i18n from '@dhis2/d2-i18n'\nimport { connect } from 'react-redux'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport { initCurrentUser } from '../actions'\nimport LoadingMask from 'd2-ui/lib/loading-mask/LoadingMask.component'\nimport ErrorMessage from './ErrorMessage'\nimport ROUTE_CONFIG from '../constants/routeConfig'\nimport SideNav from './SideNav'\nimport navigateTo from '../utils/navigateTo'\n\nconst style = {\n    display: 'flex',\n    flex: '1 1 0%',\n    paddingRight: '2rem',\n    paddingTop: '1rem',\n}\n\n/**\n * This component prepares the user-app sections and routes based on the current user's authorities\n * The sections will be rendered in the SideNav and the routes within a react-router Switch component\n */\nclass SectionLoader extends Component {\n    componentDidMount() {\n        const { initCurrentUser, currentUser } = this.props\n        if (!currentUser) {\n            initCurrentUser()\n        } else {\n            this.setRouteConfig(currentUser)\n        }\n    }\n\n    componentWillReceiveProps({ currentUser, location: { pathname } }) {\n        this.setRouteConfig(currentUser)\n\n        // Navigate home if the current user has edited a setting that restricts\n        // him from an active section. I.e. adjusting his own user role\n        // so he cannot edit user roles anymore\n        if (\n            currentUser &&\n            currentUser !== this.props.currentUser &&\n            pathname !== '/' &&\n            !this.pathHasAvailableSection(pathname)\n        ) {\n            navigateTo('/')\n        }\n    }\n\n    pathHasAvailableSection(pathname) {\n        if (!this.routeConfig) {\n            return false\n        }\n\n        const { sections } = this.routeConfig\n        return Boolean(\n            sections &&\n                sections.find(section =>\n                    pathname.includes(section.path.split(':')[0])\n                )\n        )\n    }\n\n    setRouteConfig(currentUser) {\n        this.routeConfig = !currentUser\n            ? null\n            : ROUTE_CONFIG.reduce(\n                  (routeConfig, configItem) => {\n                      const { routes, sections } = routeConfig\n                      if (this.userHasAuthorities(configItem, currentUser)) {\n                          routes.push(configItem)\n                          if (configItem.label) {\n                              sections.push(configItem)\n                          }\n                      }\n                      return routeConfig\n                  },\n                  { routes: [], sections: [] }\n              )\n    }\n\n    userHasAuthorities({ entityType }, currentUser) {\n        if (!entityType) {\n            return true\n        }\n        const { models } = this.context.d2\n        const canCreate = currentUser.canCreate(models[entityType])\n        const canDelete = currentUser.canDelete(models[entityType])\n        return canCreate || canDelete\n    }\n\n    renderRoutes(routes) {\n        return routes.map(section => <Route exact strict {...section} />)\n    }\n\n    renderContent() {\n        const { currentUser } = this.props\n\n        if (!currentUser) {\n            return <LoadingMask />\n        }\n\n        if (typeof currentUser === 'string') {\n            const introText = i18n.t(\n                'There was an error loading the current user'\n            )\n            return (\n                <ErrorMessage\n                    introText={introText}\n                    errorMessage={currentUser}\n                />\n            )\n        }\n\n        const { routes, sections } = this.routeConfig\n\n        if (sections && sections.length === 0) {\n            const introText = i18n.t(\n                'You do not have authorities to see users, user roles or user groups'\n            )\n            return <ErrorMessage introText={introText} errorMessage=\"\" />\n        }\n\n        return [\n            <SideNav key=\"sidenav\" sections={sections} />,\n            <Switch key=\"routeswitch\">{this.renderRoutes(routes)}</Switch>,\n        ]\n    }\n\n    render() {\n        return <main style={style}>{this.renderContent()}</main>\n    }\n}\n\nSectionLoader.contextTypes = {\n    d2: PropTypes.object,\n}\n\nSectionLoader.propTypes = {\n    initCurrentUser: PropTypes.func.isRequired,\n    currentUser: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n}\n\nconst mapStateToProps = ({ currentUser }) => ({ currentUser })\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        {\n            initCurrentUser,\n        }\n    )(SectionLoader)\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Snackbar from 'material-ui/Snackbar'\nimport { hideSnackbar } from '../actions'\n\n/**\n * A small wrapper around the  MUI Snackbar so it can easily be controlled by state\n * @class\n */\nconst SnackbarContainer = ({ open, snackbarProps, hideSnackbar }) => {\n    const defaults = {\n        autoHideDuration: 6000,\n        onRequestClose: hideSnackbar,\n        style: { whiteSpace: 'nowrap' }, // Forces text to stay on one line\n        bodyStyle: { maxWidth: '100%' }, // Overrides the default max-width of 587px\n        contentStyle: { display: 'flex' }, // Forces the confirm button to be on the same line as the text\n    }\n    const finalProps = { ...defaults, ...snackbarProps }\n    return <Snackbar open={open} {...finalProps} />\n}\n\nSnackbarContainer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    snackbarProps: PropTypes.object.isRequired,\n    hideSnackbar: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    open: state.popups.snackbar.show,\n    snackbarProps: state.popups.snackbar.props,\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        hideSnackbar,\n    }\n)(SnackbarContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Dialog from 'material-ui/Dialog'\n\n/**\n * A thin wrapper around the MUI Dialog component so it can easily be controlled by redux state\n * @class\n */\nconst DialogContainer = ({ open, dialogProps, content }) => (\n    <Dialog key=\"dialog\" open={open} {...dialogProps}>\n        {content}\n    </Dialog>\n)\n\nDialogContainer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    dialogProps: PropTypes.object.isRequired,\n    content: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n    open: state.popups.dialog.show,\n    dialogProps: state.popups.dialog.props,\n    content: state.popups.dialog.content,\n})\n\nexport default connect(mapStateToProps)(DialogContainer)\n","import SharingDialog from '@dhis2/d2-ui-sharing-dialog'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport api from '../api'\nimport { hideSharingDialog } from '../actions'\n\n/**\n * A small wrapper around the d2-ui SharingDialog so it can easily be controlled by state\n * @class\n */\nconst SharingDialogContainer = ({ open, id, type, hideSharingDialog }) => {\n    return (\n        <SharingDialog\n            open={open}\n            id={id}\n            type={type}\n            onRequestClose={hideSharingDialog}\n            d2={api.getD2()}\n        />\n    )\n}\n\nSharingDialogContainer.propTypes = {\n    open: PropTypes.bool.isRequired,\n    id: PropTypes.string,\n    type: PropTypes.string,\n    hideSharingDialog: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    open: state.popups.sharing.show,\n    id: state.popups.sharing.id,\n    type: state.popups.sharing.type,\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        hideSharingDialog,\n    }\n)(SharingDialogContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport { Router } from 'react-router-dom'\nimport history from './utils/history'\nimport store from './store'\nimport './styles/styles.css'\nimport AppWithD2ContextAndTheme from './components/AppWithD2ContextAndTheme'\nimport SectionLoader from './components/SectionLoader'\nimport SnackbarContainer from './components/SnackbarContainer'\nimport DialogContainer from './components/DialogContainer'\nimport SharingDialogContainer from './components/SharingDialogContainer'\n\nimport HeaderBar from '@dhis2/ui/widgets/HeaderBar'\nimport i18n from '@dhis2/d2-i18n'\n\nimport 'typeface-roboto'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\n\n/**\n * Main Component. Renders a AppWithD2ContextAndTheme wrapped in a Provider containing the HeaderBar,\n * Router, SectionLoader, and various popups\n * @param {Object} props\n * @param {Object} props.d2 - The d2 instance to pass to the Headerbar and AppWithD2ContextAndTheme\n * @class\n */\nconst App = ({ d2 }) => (\n    <Provider store={store}>\n        <AppWithD2ContextAndTheme d2={d2}>\n            <div>\n                <HeaderBar appName={i18n.t('User management')} />\n                <Router history={history} hashType={'noslash'}>\n                    <SectionLoader />\n                </Router>\n                <SnackbarContainer />\n                <DialogContainer />\n                <SharingDialogContainer />\n            </div>\n        </AppWithD2ContextAndTheme>\n    </Provider>\n)\n\nApp.propTypes = {\n    d2: PropTypes.object.isRequired,\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","//------------------------------------------------------------------------------\n// <auto-generated>\n// This code was generated by d2-i18n-generate.\n//\n// Changes to this file may cause incorrect behavior and will be lost if\n// the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nimport i18n from '@dhis2/d2-i18n';\nimport moment from 'moment';\nimport 'moment/locale/ar';\nimport 'moment/locale/sv';\n\nimport arTranslations from './ar/translations.json';\nimport enTranslations from './en/translations.json';\nimport svTranslations from './sv/translations.json';\n\nconst namespace = 'user-app';\nmoment.locale('en');\n\ni18n.addResources('ar', namespace, arTranslations);\ni18n.addResources('en', namespace, enTranslations);\ni18n.addResources('sv', namespace, svTranslations);\n\ni18n.setDefaultNamespace(namespace);\ni18n.changeLanguage('en');\n\nexport default i18n;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { config, getUserSettings, init } from 'd2/lib/d2'\nimport i18n from './locales'\n\nconst { REACT_APP_DHIS2_BASE_URL } = process.env\n\n/**\n * @module index\n */\n\n/**\n * Sets baseUrl, schemas and sources on the d2 config object and then initializes d2\n * @function\n */\n\nconst setupD2 = () => {\n    const baseUrl = `${REACT_APP_DHIS2_BASE_URL}/api/`\n    const initConfig = {\n        baseUrl,\n        schemas: [\n            'userRole',\n            'user',\n            'userGroup',\n            'userCredentials',\n            'organisationUnit',\n        ],\n    }\n    config.baseUrl = baseUrl\n\n    return getUserSettings()\n        .then(configI18n)\n        .then(({ i18n }) => init({ ...initConfig, i18n }))\n}\n\n/**\n * Adds translation sources to the d2 config object for deprecated translation methods used by d2-ui\n * And sets language for new i18n module from \"@dhis2/d2-i18n\"\n * @param {Object} userSettings - user settings object returned by the d2 getUserSettings promise\n * @function\n */\n\nconst configI18n = userSettings => {\n    const uiLocale = userSettings.keyUiLocale\n    const sources = config.i18n.sources\n    // Using the old style of translations for the d2-ui components\n    if (uiLocale !== 'en') {\n        sources.add(`i18n/i18n_module_${uiLocale}.properties`)\n    }\n    sources.add('i18n/i18n_module_en.properties')\n    i18n.changeLanguage(uiLocale)\n    return config\n}\n\n/**\n * Renders app into root element\n * @function\n */\nconst renderAppInDOM = d2 => {\n    const rootEl = document.getElementById('root')\n    render(<App d2={d2} />, rootEl)\n}\n\nsetupD2().then(renderAppInDOM)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register()\n"],"sourceRoot":""}